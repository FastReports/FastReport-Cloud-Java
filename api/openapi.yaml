openapi: 3.0.1
info:
  title: FastReport Cloud
  version: v1
servers:
- url: /
security:
- JWT: []
  ApiKey: []
paths:
  /api/manage/v1/ApiKeys:
    delete:
      operationId: ApiKeys_DeleteApiKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteApiKeyVM'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteApiKeyVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteApiKeyVM'
        required: true
      responses:
        "204":
          description: Succesfully deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The request is wrong
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User is not authorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: No such apikey found
        "500":
          description: exception thrown
      summary: Delete an apikey
      tags:
      - ApiKeys
      x-content-type: application/json
      x-accepts: application/json
    get:
      description: "Always work, it should make only 200 response (except if user\
        \ is not authorized)."
      operationId: ApiKeys_GetApiKeys
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysVM'
          description: Succesfully retured
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User is not authorized
        "500":
          description: Exception somehow thrown (barely possible)
      summary: Returns list with all api keys of current user
      tags:
      - ApiKeys
      x-accepts: application/json
    post:
      operationId: ApiKeys_CreateApiKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiKeyVM'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateApiKeyVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateApiKeyVM'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyVM'
          description: Succesfully created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: wrong model provided or exception thrown (user's attempts to
            create sixth key for example throwns an exception)
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User is not authorized
      summary: "Create a new apikey, 5 apikeys for user. Hardcoded for ddos."
      tags:
      - ApiKeys
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/Configuration:
    get:
      operationId: Configuration_Get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfigurationVM'
          description: Success
      summary: returns information about server configuration
      tags:
      - Configuration
      x-accepts: application/json
  /api/v1/ContactGroups/group:
    post:
      operationId: ContactGroups_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContactGroupVM'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateContactGroupVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateContactGroupVM'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactGroupVM'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "500":
          description: Server Error
      summary: Creates contact group
      tags:
      - ContactGroups
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/ContactGroups/{id}:
    delete:
      operationId: ContactGroups_Delete
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "500":
          description: Server Error
      summary: Removes contact by id
      tags:
      - ContactGroups
      x-accepts: application/json
    get:
      operationId: ContactGroups_Get
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactGroupVM'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "500":
          description: Server Error
      summary: Returns contact group by id
      tags:
      - ContactGroups
      x-accepts: application/json
    put:
      operationId: ContactGroups_Update
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactGroupVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateContactGroupVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateContactGroupVM'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactGroupVM'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          description: Server Error
      summary: Updates contact group by id
      tags:
      - ContactGroups
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/ContactGroups/subscription/{subscriptionId}/groups:
    get:
      operationId: ContactGroups_GetList
      parameters:
      - description: ""
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: take
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactGroupsVM'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "500":
          description: Server Error
      summary: Returns contact groups by subscriptionId
      tags:
      - ContactGroups
      x-accepts: application/json
  /api/v1/Contacts/contact:
    post:
      operationId: Contacts_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContactVM'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateContactVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateContactVM'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactVM'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "500":
          description: Server Error
      summary: Creates new contact
      tags:
      - Contacts
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/Contacts/{id}:
    delete:
      operationId: Contacts_Delete
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "500":
          description: Server Error
      summary: Removes contact by id
      tags:
      - Contacts
      x-accepts: application/json
    get:
      operationId: Contacts_Get
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactVM'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "500":
          description: Server Error
      summary: Returns contact group by id
      tags:
      - Contacts
      x-accepts: application/json
    put:
      operationId: Contacts_Update
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateContactVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateContactVM'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactVM'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "500":
          description: Server Error
      summary: Updates contact by id
      tags:
      - Contacts
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/Contacts/subscription/{subscriptionId}/contacts:
    get:
      operationId: Contacts_GetList
      parameters:
      - description: ""
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: take
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: searchPattern
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactsVM'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "500":
          description: Server Error
      summary: Allows to search for contacts
      tags:
      - Contacts
      x-accepts: application/json
  /api/v1/Contacts/group/{groupId}/contacts:
    get:
      operationId: Contacts_GetByGroup
      parameters:
      - description: ""
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: take
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactsVM'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "500":
          description: Server Error
      summary: Returns contacts by group id
      tags:
      - Contacts
      x-accepts: application/json
  /api/data/v1/DataSources/{subscriptionId}/count:
    get:
      operationId: DataSources_CountDataSourcesAsync
      parameters:
      - description: subscripiton id
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int64
                type: integer
          description: Everything is all right
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: id is not hex24
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have permisison to get data sources from this subscription
            (or in your default (1st) subscription)
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "there is no subscription with provided id found, or user don't\
            \ even have a subscription"
      summary: Returns a number of data sources in subscription
      tags:
      - DataSources
      x-accepts: application/json
  /api/data/v1/DataSources:
    get:
      operationId: DataSources_GetAvailableDataSources
      parameters:
      - description: id of subscription where the datasources are located
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
        style: form
      - description: how many data sources will be skipped
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      - description: how many data sources will be taken
        explode: true
        in: query
        name: take
        required: false
        schema:
          default: 10
          format: int32
          maximum: 120
          minimum: 1
          type: integer
        style: form
      - description: field to order by
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          $ref: '#/components/schemas/DataSourceSorting'
        style: form
      - description: descending sort
        explode: true
        in: query
        name: desc
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourcesVM'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: "Returns all of the data sources, that current user have permission\
        \ for in a subscription <br />\r\nThe method will return minimal infomration\
        \ about the datasources: <br />\r\nid, name, editedTime, status."
      tags:
      - DataSources
      x-accepts: application/json
    post:
      operationId: DataSources_CreateDataSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataSourceVM'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateDataSourceVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateDataSourceVM'
        description: create viewmodel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceVM'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          description: Server Error
      summary: Create new data source
      tags:
      - DataSources
      x-content-type: application/json
      x-accepts: application/json
  /api/data/v1/DataSources/{id}:
    delete:
      operationId: DataSources_DeleteDataSource
      parameters:
      - description: data source id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          description: Server Error
      summary: Delete data source by id
      tags:
      - DataSources
      x-accepts: application/json
    get:
      operationId: DataSources_GetDataSource
      parameters:
      - description: data source id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceVM'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          description: Server Error
      summary: Get data source by id
      tags:
      - DataSources
      x-accepts: application/json
  /api/data/v1/DataSources/{id}/fetch:
    get:
      operationId: DataSources_FetchData
      parameters:
      - description: datasource's id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          description: Server Error
      summary: This should connect to a database and set data structure
      tags:
      - DataSources
      x-accepts: application/json
  /api/data/v1/DataSources/{id}/permissions:
    get:
      operationId: DataSources_GetPermissions
      parameters:
      - description: data source id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourcePermissionsVM'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          description: Server Error
      summary: Get all Data source permissions
      tags:
      - DataSources
      x-accepts: application/json
    post:
      operationId: DataSources_UpdatePermissions
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataSourcePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateDataSourcePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateDataSourcePermissionsVM'
        description: ""
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          description: Server Error
      summary: Update permissions
      tags:
      - DataSources
      x-content-type: application/json
      x-accepts: application/json
  /api/data/v1/DataSources/{id}/rename:
    put:
      operationId: DataSources_RenameDataSource
      parameters:
      - description: data source id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameDataSourceVM'
          text/json:
            schema:
              $ref: '#/components/schemas/RenameDataSourceVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RenameDataSourceVM'
        description: rename viewmodel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceVM'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          description: Server Error
      summary: Rename data source by id
      tags:
      - DataSources
      x-content-type: application/json
      x-accepts: application/json
  /api/data/v1/DataSources/{id}/ConnectionString:
    put:
      operationId: DataSources_UpdateConnectionString
      parameters:
      - description: data source id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataSourceConnectionStringVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateDataSourceConnectionStringVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateDataSourceConnectionStringVM'
        description: update viewmodel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceVM'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          description: Server Error
      summary: Update data source's connection string by id
      tags:
      - DataSources
      x-content-type: application/json
      x-accepts: application/json
  /api/data/v1/DataSources/{id}/updateSubscription:
    put:
      operationId: DataSources_UpdateSubscriptionDataSource
      parameters:
      - description: data source id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataSourceSubscriptionVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateDataSourceSubscriptionVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateDataSourceSubscriptionVM'
        description: update subscription viewmodel
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          description: Server Error
      summary: Update data source's subscription
      tags:
      - DataSources
      x-content-type: application/json
      x-accepts: application/json
  /download/e/{id}/thumbnail:
    get:
      operationId: Download_GetExportThumbnail
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            image/png:
              schema:
                format: binary
                type: string
            image/jpeg:
              schema:
                format: binary
                type: string
          description: Specified thumbnail was found
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            image/png:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Specified thumbnail was not found or user do not has access
            to it
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            image/png:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad id provided
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            image/png:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is blocked
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            image/png:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not enough permissions for the operation
      summary: Returns export's thumbnail
      tags:
      - Download
      x-accepts: "application/json,image/jpeg,image/png,text/plain"
  /download/e/{id}:
    get:
      operationId: Download_GetExport
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: preview
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            application/octet-stream:
              schema:
                format: binary
                type: string
            application/pdf:
              schema:
                format: binary
                type: string
          description: Specified file was found
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/pdf:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Specified file was not found or user do not has access to the
            file
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/pdf:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad id provided
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/pdf:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is blocked
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/pdf:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not enough permissions for the operation
      summary: Returns a export file with specified id
      tags:
      - Download
      x-accepts: "application/json,application/octet-stream,application/pdf,text/plain"
  /download/es/{archiveName}:
    get:
      operationId: Download_GetExports
      parameters:
      - description: "ids separated with a ',' sign"
        explode: true
        in: query
        name: fileIds
        required: false
        schema:
          type: string
        style: form
      - description: "ids separated with a ',' sign"
        explode: true
        in: query
        name: folderIds
        required: false
        schema:
          type: string
        style: form
      - description: name of the created archive
        explode: false
        in: path
        name: archiveName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            application/zip:
              schema:
                format: binary
                type: string
          description: Specified file was found
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/zip:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad id provided
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/zip:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is blocked
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/zip:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not enough permissions for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/zip:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Specified file was not found or user do not has access to the
            file
      summary: Returns a zip archive with selected ids
      tags:
      - Download
      x-accepts: "application/json,application/zip,text/plain"
  /download/lastPreview/{reportId}:
    get:
      operationId: Download_GetLastSVGExport
      parameters:
      - description: ""
        explode: false
        in: path
        name: reportId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Success
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
      summary: "returns export, that was created from report with specified id.\r\n\
        INTERNAL USAGE ONLY!"
      tags:
      - Download
      x-accepts: "application/json,application/octet-stream,text/plain"
  /download/r/{id}/thumbnail:
    get:
      operationId: Download_GetReportThumbnail
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            image/png:
              schema:
                format: binary
                type: string
            image/jpeg:
              schema:
                format: binary
                type: string
          description: Specified thumbnail was found
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            image/png:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Specified thumbnail was not found or user do not has access
            to it
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            image/png:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad id provided
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            image/png:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is blocked
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            image/png:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not enough permissions for the operation
      summary: Returns report's thumbnail
      tags:
      - Download
      x-accepts: "application/json,image/jpeg,image/png,text/plain"
  /download/r/{id}:
    get:
      operationId: Download_GetReport
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Specified file was found
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Specified file was not found or user do not has access to the
            file
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: bad id provided
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is blocked
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not enough permissions
      summary: Returns a prepared file with specified id
      tags:
      - Download
      x-accepts: "application/json,application/octet-stream,text/plain"
  /download/rs/{archiveName}:
    get:
      operationId: Download_GetReports
      parameters:
      - description: "ids separated with a ',' sign"
        explode: true
        in: query
        name: fileIds
        required: false
        schema:
          type: string
        style: form
      - description: "ids separated with a ',' sign"
        explode: true
        in: query
        name: folderIds
        required: false
        schema:
          type: string
        style: form
      - description: name of the created archive
        explode: false
        in: path
        name: archiveName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            application/zip:
              schema:
                format: binary
                type: string
          description: File has been downloaded
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/zip:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: files is not found
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/zip:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: wrong parameters provided
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/zip:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is blocked
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/zip:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
      summary: Returns a zip archive with selected files
      tags:
      - Download
      x-accepts: "application/json,application/zip,text/plain"
  /download/t/{id}/thumbnail:
    get:
      operationId: Download_GetTemplateThumbnail
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            image/png:
              schema:
                format: binary
                type: string
            image/jpeg:
              schema:
                format: binary
                type: string
          description: Specified thumbnail was found
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            image/png:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Specified thumbnail was not found or user do not has access
            to it
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            image/png:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad id provided
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            image/png:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is blocked
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            image/png:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not enough permissions for the operation
      summary: Returns template's thumbnail
      tags:
      - Download
      x-accepts: "application/json,image/jpeg,image/png,text/plain"
  /download/t/{id}:
    get:
      operationId: Download_GetTemplate
      parameters:
      - description: template id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Specified file was found
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Specified file was not found or user do not has access to the
            file
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: bad id provided
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is blocked
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not enough permissions
      summary: Returns a Template file with specified id
      tags:
      - Download
      x-accepts: "application/json,application/octet-stream,text/plain"
  /download/ts/{archiveName}:
    get:
      operationId: Download_GetTemplates
      parameters:
      - description: "ids separated with a ',' sign"
        explode: true
        in: query
        name: fileIds
        required: false
        schema:
          type: string
        style: form
      - description: "ids separated with a ',' sign"
        explode: true
        in: query
        name: folderIds
        required: false
        schema:
          type: string
        style: form
      - description: name of the created archive
        explode: false
        in: path
        name: archiveName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            application/zip:
              schema:
                format: binary
                type: string
          description: File has been downloaded
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/zip:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: wrong parameters provided
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/zip:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is blocked
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/zip:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/zip:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: files is not found
      summary: Returns a zip archive with selected files
      tags:
      - Download
      x-accepts: "application/json,application/zip,text/plain"
  /api/rp/v1/Exports/Folder/{id}/CountFolderAndFiles:
    get:
      description: User with a Get Count permission can access this method.
      operationId: ExportFolderAndFile_GetCount
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: "string, that must be incuded in file or folder name to be counted\
          \ <br />\r\n            (leave undefined to count all files and folders)"
        explode: true
        in: query
        name: searchPattern
        required: false
        schema:
          maxLength: 100
          minLength: 0
          type: string
        style: form
      - description: set this to true if you want to use regular expression to search
        explode: true
        in: query
        name: useRegex
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountVM'
          description: Returns count of the files in a specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get count of files and folders what contains in a specified folder
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/ListFolderAndFiles:
    get:
      description: User with a Get Entity permission can access this method.
      operationId: ExportFolderAndFile_GetFoldersAndFiles
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: "number of folder and files, that have to be skipped"
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      - description: "number of folder and files, that have to be returned"
        explode: true
        in: query
        name: take
        required: false
        schema:
          default: 10
          format: int32
          maximum: 120
          minimum: 1
          type: integer
        style: form
      - description: indicates a field to sort by
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          $ref: '#/components/schemas/FileSorting'
        style: form
      - description: indicates if sorting is descending
        explode: true
        in: query
        name: desc
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ""
        explode: true
        in: query
        name: searchPattern
        required: false
        schema:
          default: ""
          maxLength: 100
          minLength: 0
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: useRegex
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesVM'
          description: Returns list of the files from a specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
      summary: Get all folders and files from specified folder
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/{subscriptionId}/ListRecycleBinFolderAndFiles:
    get:
      description: User with a Get DeletedFiles permission can access this method.
      operationId: ExportFolderAndFile_GetRecycleBinFoldersAndFiles
      parameters:
      - description: subscription id
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: "number of folder and files, that have to be skipped"
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      - description: "number of folder and files, that have to be returned"
        explode: true
        in: query
        name: take
        required: false
        schema:
          default: 10
          format: int32
          maximum: 120
          minimum: 1
          type: integer
        style: form
      - description: indicates a field to sort by
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          $ref: '#/components/schemas/FileSorting'
        style: form
      - description: indicates if sorting is descending
        explode: true
        in: query
        name: desc
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ""
        explode: true
        in: query
        name: searchPattern
        required: false
        schema:
          default: ""
          maxLength: 100
          minLength: 0
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: useRegex
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesVM'
          description: Returns list of the files from a specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
      summary: Get all folders and files from recycle bin
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/{subscriptionId}/ClearRecycleBin:
    delete:
      description: User with a Delete RecycleBin permission can access this method.
      operationId: ExportFolderAndFile_ClearRecycleBin
      parameters:
      - description: subscription id
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "204":
          description: All folders and files in bin have been deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
      summary: Delete all folders and files from recycle bin
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/{subscriptionId}/RecoverRecycleBin:
    post:
      description: User with a Create RecycleBin permission can access this method.
      operationId: ExportFolderAndFile_RecoverAllFromRecycleBin
      parameters:
      - description: subscription id
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "204":
          description: All folders and files in bin have been restored
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
      summary: Recover all folders and files from recycle bin
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/{subscriptionId}/DeleteFiles:
    post:
      description: User with a Delete permission can access this method.
      operationId: ExportFolderAndFile_DeleteFiles
      parameters:
      - description: id of current subscription
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          text/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
        description: VM with files' ids and params of their destination
      responses:
        "204":
          description: All folders and files have been deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
      summary: Delete folders and files
      tags:
      - Exports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Exports/{subscriptionId}/RecoverFiles:
    post:
      description: User with a SubscriptionCreate permission can access this method.
      operationId: ExportFolderAndFile_RecoverFiles
      parameters:
      - description: id of current subscription
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          text/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
        description: VM with files' ids and params of their destination
      responses:
        "204":
          description: All folders and files have been recovered
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
      summary: Recover folders and files from bin
      tags:
      - Exports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Exports/{subscriptionId}/ToBin:
    post:
      description: User with a Delete permission can access this method.
      operationId: ExportFolderAndFile_MoveFilesToBin
      parameters:
      - description: id of current subscription
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          text/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
        description: VM with files' ids and params of their destination
      responses:
        "204":
          description: All folders and files have been moved to bin
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
      summary: Move folders and files to bin
      tags:
      - Exports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Exports/{subscriptionId}/CopyFiles:
    post:
      description: User with a Get permission for a files and Create permission for
        a destination folder can access this method.
      operationId: ExportFolderAndFile_CopyFiles
      parameters:
      - description: id of current subscription
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          text/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
        description: VM with files' ids and params of their destination
      responses:
        "204":
          description: All folders and files have been copied
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
        "500":
          description: Server Error
      summary: Copy folders and files to a specified folder
      tags:
      - Exports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Exports/{subscriptionId}/MoveFiles:
    post:
      description: User with a Update Place permission for a files and Create permission
        for a destination folder can access this method.
      operationId: ExportFolderAndFile_MoveFiles
      parameters:
      - description: id of current subscription
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          text/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
        description: VM with files' ids and params of their destination
      responses:
        "204":
          description: All folders and files have been moved
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
        "500":
          description: Server Error
      summary: Move folders and files to a specified folder
      tags:
      - Exports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/permissions:
    get:
      operationId: ExportFolders_GetPermissions
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissionsVM'
          description: returned permissions
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: id is not valid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folder is not found
      summary: Get all folder permissions
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/{id}/permissions:
    post:
      operationId: ExportFolders_UpdatePermissions
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateFilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateFilePermissionsVM'
        description: ""
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          description: Server Error
      summary: Update permissions
      tags:
      - Exports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}:
    delete:
      description: User with a Delete Entity permission can access this method.
      operationId: ExportFolders_DeleteFolder
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "204":
          description: Folder succesfully deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Delete specified folder
      tags:
      - Exports
      x-accepts: application/json
    get:
      description: User with a Get Entity permission can access this method.
      operationId: ExportFolders_GetFolder
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Returns specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get specified folder
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/ToBin:
    delete:
      description: User with a Delete Entity permission can access this method.
      operationId: ExportFolders_MoveFolderToBin
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "204":
          description: Folder succesfully deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Move specified folder to recycle bin
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/Recover:
    post:
      description: User with a Delete Entity permission can access this method.
      operationId: ExportFolders_RecoverFolder
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: recoveryPath
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Folder succesfully restored from bin
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Recover specified folder
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/Breadcrumbs:
    get:
      description: User with a Get Entity permission can access this method.
      operationId: ExportFolders_GetBreadcrumbs
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BreadcrumbsVM'
          description: Returns breadcrumbs parents list (starts from root folder)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get specified folder breadcrumbs
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/size:
    get:
      description: User with a Get Entity permission can access this method.
      operationId: ExportFolders_CalculateFolderSize
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderSizeVM'
          description: Returns specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: "Get specified folder, calculate it's size"
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/getOrCreate:
    get:
      description: User with a Get Entity permission can access this method.
      operationId: ExportFolders_GetOrCreate
      parameters:
      - description: folder name
        explode: true
        in: query
        name: name
        required: false
        schema:
          maxLength: 50
          minLength: 0
          type: string
        style: form
      - description: subscriptionId
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
        style: form
      - description: parent folder id
        explode: true
        in: query
        name: parentId
        required: false
        schema:
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Returns specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get specified folder
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/ListFolders:
    get:
      description: User with a Get Entity permission can access this method.
      operationId: ExportFolders_GetFolders
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: "number of files, that have to be skipped"
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      - description: "number of files, that have to be returned"
        explode: true
        in: query
        name: take
        required: false
        schema:
          default: 10
          format: int32
          maximum: 120
          minimum: 1
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          $ref: '#/components/schemas/FileSorting'
        style: form
      - description: ""
        explode: true
        in: query
        name: desc
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ""
        explode: true
        in: query
        name: searchPattern
        required: false
        schema:
          default: ""
          maxLength: 100
          minLength: 0
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: useRegex
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesVM'
          description: Gets all folders from a specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get all folders from specified folder
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/CountFolders:
    get:
      description: User with a Get Count permission can access this method.
      operationId: ExportFolders_GetFoldersCount
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountVM'
          description: Returns count of folders in a specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get count of folders what contains in a specified folder
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/Root:
    get:
      description: "> Breakchange. Now user model doesn't contain a root folders.\r\
        \nThis method can return error 400 and 404 when subscription is not found."
      operationId: ExportFolders_GetRootFolder
      parameters:
      - explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Gets user's root folder (without parents)
        "400":
          description: Error with the request.
        "404":
          description: Not found subscription
        "403":
          description: No permissions to get root folder
      summary: Get user's root folder (without parents)
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/Move/{folderId}:
    post:
      description: "User with a Update Place permission for a folder and Create Entity\r\
        \nfor a Parent Folder can access this method."
      operationId: ExportFolders_MoveFolder
      parameters:
      - description: moving folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: destination folder id
        explode: false
        in: path
        name: folderId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Folder has been moved to a specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId or parentFolderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Move folder to a specified folder
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/Copy/{folderId}:
    post:
      description: "User with a Update Place permission for a folder and Create Entity\r\
        \nfor a Parent Folder can access this method."
      operationId: ExportFolders_CopyFolder
      parameters:
      - description: moving folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: destination folder id
        explode: false
        in: path
        name: folderId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Folder has been moved to a specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId or parentFolderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Move folder to a specified folder
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/Folder:
    post:
      description: User with a Create Entity permisison can access this method.
      operationId: ExportFolders_PostFolder
      parameters:
      - description: Identifier of parent folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportFolderCreateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/ExportFolderCreateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ExportFolderCreateVM'
        description: create VM
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: New folder has been created)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Parent folder id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: parent folder/subscription not found
      summary: Create folder
      tags:
      - Exports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/Rename:
    put:
      description: User with a Update Name permision can access this method.
      operationId: ExportFolders_RenameFolder
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderRenameVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FolderRenameVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FolderRenameVM'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Folder name has been updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Rename a folder
      tags:
      - Exports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/Icon:
    put:
      description: User with a Update Icon permission can access this method.
      operationId: ExportFolders_UpdateIcon
      parameters:
      - description: Identifier of folder
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderIconVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FolderIconVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FolderIconVM'
        description: Update icon model
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Folder's icon has been updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Update a folder's icon
      tags:
      - Exports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/UpdateTags:
    put:
      description: User with a Update Tags permission can access this method.
      operationId: ExportFolders_UpdateTags
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderTagsUpdateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FolderTagsUpdateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FolderTagsUpdateVM'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Tags has been updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId or Tags is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Update tags
      tags:
      - Exports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Exports/File/{id}:
    delete:
      description: User with Delete permission can access the method.
      operationId: Exports_DeleteFile
      parameters:
      - description: file id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "204":
          description: File succesfully deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          description: Exception thrown
      summary: Delete specified file
      tags:
      - Exports
      x-accepts: application/json
    get:
      operationId: Exports_GetFile
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          description: Server Error
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/File/{id}/Copy/{folderId}:
    post:
      operationId: Exports_CopyFile
      parameters:
      - description: file id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: folder id
        explode: false
        in: path
        name: folderId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
          description: File has been copied
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: fileId or folderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
        "500":
          description: Exception thrown
      summary: Copy file to a specified folder
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/File/{id}/ToBin:
    delete:
      description: User with Delete permission can access the method.
      operationId: Exports_MoveFileToBin
      parameters:
      - description: file id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "204":
          description: File succesfully deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          description: Exception thrown
      summary: Move specified file to recycle bin
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/File/{id}/Recover:
    post:
      description: User with Delete permission can access the method.
      operationId: Exports_RecoverFile
      parameters:
      - description: file id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: recoveryPath
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: File succesfully recovered
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          description: Exception thrown
      summary: Recover specified file from bin
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/File/{id}/History:
    get:
      operationId: Exports_GetFileHistory
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: take
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditActionsVM'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: "Returns list of actions, performed on this file"
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/CountFiles:
    get:
      description: User with Get Count permission can access this method.
      operationId: Exports_GetFilesCount
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountVM'
          description: Returns count of the files in a specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
        "500":
          description: Exception thrown
      summary: Get count of files what contains in a specified folder
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/ListFiles:
    get:
      operationId: Exports_GetFilesList
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: "number of files, that have to be skipped"
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      - description: "number of files, that have to be returned"
        explode: true
        in: query
        name: take
        required: false
        schema:
          default: 10
          format: int32
          maximum: 120
          minimum: 1
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: searchPattern
        required: false
        schema:
          maxLength: 100
          minLength: 0
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          $ref: '#/components/schemas/FileSorting'
        style: form
      - description: ""
        explode: true
        in: query
        name: desc
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ""
        explode: true
        in: query
        name: useRegex
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportsVM'
          description: Returns list of the files from a specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
        "500":
          description: Exception thrown
      summary: "Get all files from specified folder. <br />\r\nUser with Get Entity\
        \ permission can access this method. <br />\r\nThe method will returns minimal\
        \ infomration about the file: <br />\r\nid, name, size, editedTime, createdTime,\
        \ tags, status, statusReason."
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/File/{id}/permissions:
    get:
      operationId: Exports_GetPermissions
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissionsVM'
          description: got permissions successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: id is not valid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: file is not found
      summary: Get all file permissions
      tags:
      - Exports
      x-accepts: application/json
    post:
      operationId: Exports_UpdatePermissions
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateFilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateFilePermissionsVM'
        description: ""
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          description: Server Error
      summary: Update permissions
      tags:
      - Exports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Exports/File/{id}/Move/{folderId}:
    post:
      description: "User with a Update Place permission for a folder and Create Entity\r\
        \nfor a Parent Folder can access this method."
      operationId: Exports_MoveFile
      parameters:
      - description: file id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: folder id
        explode: false
        in: path
        name: folderId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
          description: File has been moved
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: fileId or folderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
        "500":
          description: Exception thrown
      summary: Move file to a specified folder
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/File/{id}/Rename:
    put:
      description: User with Update Name permission can access this method.
      operationId: Exports_RenameFile
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileRenameVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FileRenameVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FileRenameVM'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
          description: File name has been updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FileId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          description: Exception thrown
      summary: Rename a file
      tags:
      - Exports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Exports/File/{id}/Icon:
    put:
      description: User with Update Icon permission can access this method.
      operationId: Exports_UpdateIcon
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileIconVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FileIconVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FileIconVM'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
          description: File's icon has been updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FileId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          description: Exception thrown
      summary: Update a files's icon
      tags:
      - Exports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Exports/File/{id}/UpdateTags:
    put:
      description: User with Update Tags permission can access this method.
      operationId: Exports_UpdateTags
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileTagsUpdateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FileTagsUpdateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FileTagsUpdateVM'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
          description: Tags has been updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FileId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          description: Exception thrown
      summary: Update tags
      tags:
      - Exports
      x-content-type: application/json
      x-accepts: application/json
  /api/manage/v1/Groups/{id}/permissions:
    get:
      operationId: Groups_GetPermissions
      parameters:
      - description: Identifier of group
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPermissionsVM'
          description: Succesfully retured
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Group with this identifier is not found
      summary: Gets group permissions by identifier
      tags:
      - Groups
      x-accepts: application/json
    post:
      operationId: Groups_UpdatePermissions
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupPermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupPermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateGroupPermissionsVM'
        description: ""
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          description: Server Error
      summary: Update permissions
      tags:
      - Groups
      x-content-type: application/json
      x-accepts: application/json
  /api/manage/v1/Groups/{id}:
    delete:
      operationId: Groups_DeleteGroup
      parameters:
      - description: Identifier of group
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "204":
          description: Succesfully delete
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscripiton is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Group with this identifier is not found
        "500":
          description: Exception thrown
      summary: Delete group by identifier
      tags:
      - Groups
      x-accepts: application/json
    get:
      operationId: Groups_GetGroup
      parameters:
      - description: Identifier of group
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupVM'
          description: Succesfully retured
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Group with this identifier is not found
        "500":
          description: Exception thrown
      summary: Gets group by identifier
      tags:
      - Groups
      x-accepts: application/json
  /api/manage/v1/Groups:
    get:
      operationId: Groups_GetGroupList
      parameters:
      - description: How many groups need to skip
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      - description: How many groups need to take
        explode: true
        in: query
        name: take
        required: false
        schema:
          default: 10
          format: int32
          maximum: 120
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsVM'
          description: Succesfully retured
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Current user is not found
      summary: "Returns a list of current user's groups<br />\r\nThis method will\
        \ return following data about groups : <br />\r\nId, Name, Created time (UTC),\
        \ Edited time (UTC), creator id, <br />\r\neditor id, subscription id"
      tags:
      - Groups
      x-accepts: application/json
    post:
      operationId: Groups_CreateGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupVM'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateGroupVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateGroupVM'
        description: Model for creating
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupVM'
          description: Succesfully created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Information from view model is not found
      summary: Create a new user group
      tags:
      - Groups
      x-content-type: application/json
      x-accepts: application/json
  /api/manage/v1/Groups/{id}/rename:
    put:
      operationId: Groups_RenameGroup
      parameters:
      - description: Identifier of group
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameGroupVM'
          text/json:
            schema:
              $ref: '#/components/schemas/RenameGroupVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RenameGroupVM'
        description: Model for renaming
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupVM'
          description: Succesfully renamed
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Group with this identifier is not found
        "500":
          description: Exception thrown
      summary: Rename group by identifier
      tags:
      - Groups
      x-content-type: application/json
      x-accepts: application/json
  /api/manage/v1/Groups/{id}/Users:
    get:
      operationId: GroupUsers_GetUsersInGroup
      parameters:
      - description: Identifier of group
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: how many to skip
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      - description: how many to take
        explode: true
        in: query
        name: take
        required: false
        schema:
          default: 10
          format: int32
          maximum: 120
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUsersVM'
          description: Succesfully retured
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Group with this identifier is not found
        "500":
          description: Exception thrown
      summary: Returns users in the group by identifier
      tags:
      - GroupUsers
      x-accepts: application/json
  /api/manage/v1/Groups/{id}/Users/{userId}:
    delete:
      operationId: GroupUsers_RemoveFromGroup
      parameters:
      - description: Identifier of group
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: Identifier of user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Succesfully removed
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Group with this identifier is not found
        "500":
          description: Exception thrown
      summary: Remove user from the group by identifier
      tags:
      - GroupUsers
      x-accepts: application/json
    put:
      operationId: GroupUsers_AddUserToGroup
      parameters:
      - description: Identifier of group
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: Identifier of user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Succesfully retured
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Group with this identifier is not found
        "500":
          description: Exception thrown
      summary: Add user to the group by identifier
      tags:
      - GroupUsers
      x-accepts: application/json
  /api/manage/v1/Groups/{id}/leave:
    delete:
      operationId: GroupUsers_LeaveFromGroup
      parameters:
      - description: Identifier of group
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "204":
          description: Succesfully removed
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Group with this identifier is not found
        "500":
          description: Exception thrown
      summary: Leave from the group
      tags:
      - GroupUsers
      x-accepts: application/json
  /api/backend/v1/HealthCheck:
    get:
      operationId: HealthCheckData_Get
      responses:
        "200":
          description: Our backend is alive!
      summary: healthcheck
      tags:
      - HealthCheck
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/CountFolderAndFiles:
    get:
      description: User with a Get Count permission can access this method.
      operationId: ReportFolderAndFile_GetCount
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: "string, that must be incuded in file or folder name to be counted\
          \ <br />\r\n            (leave undefined to count all files and folders)"
        explode: true
        in: query
        name: searchPattern
        required: false
        schema:
          maxLength: 100
          minLength: 0
          type: string
        style: form
      - description: set this to true if you want to use regular expression to search
        explode: true
        in: query
        name: useRegex
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountVM'
          description: Returns count of the files in a specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get count of files and folders what contains in a specified folder
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/ListFolderAndFiles:
    get:
      description: User with a Get Entity permission can access this method.
      operationId: ReportFolderAndFile_GetFoldersAndFiles
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: "number of folder and files, that have to be skipped"
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      - description: "number of folder and files, that have to be returned"
        explode: true
        in: query
        name: take
        required: false
        schema:
          default: 10
          format: int32
          maximum: 120
          minimum: 1
          type: integer
        style: form
      - description: indicates a field to sort by
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          $ref: '#/components/schemas/FileSorting'
        style: form
      - description: indicates if sorting is descending
        explode: true
        in: query
        name: desc
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ""
        explode: true
        in: query
        name: searchPattern
        required: false
        schema:
          default: ""
          maxLength: 100
          minLength: 0
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: useRegex
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesVM'
          description: Returns list of the files from a specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
      summary: Get all folders and files from specified folder
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/{subscriptionId}/ListRecycleBinFolderAndFiles:
    get:
      description: User with a Get DeletedFiles permission can access this method.
      operationId: ReportFolderAndFile_GetRecycleBinFoldersAndFiles
      parameters:
      - description: subscription id
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: "number of folder and files, that have to be skipped"
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      - description: "number of folder and files, that have to be returned"
        explode: true
        in: query
        name: take
        required: false
        schema:
          default: 10
          format: int32
          maximum: 120
          minimum: 1
          type: integer
        style: form
      - description: indicates a field to sort by
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          $ref: '#/components/schemas/FileSorting'
        style: form
      - description: indicates if sorting is descending
        explode: true
        in: query
        name: desc
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ""
        explode: true
        in: query
        name: searchPattern
        required: false
        schema:
          default: ""
          maxLength: 100
          minLength: 0
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: useRegex
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesVM'
          description: Returns list of the files from a specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
      summary: Get all folders and files from recycle bin
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/{subscriptionId}/ClearRecycleBin:
    delete:
      description: User with a Delete RecycleBin permission can access this method.
      operationId: ReportFolderAndFile_ClearRecycleBin
      parameters:
      - description: subscription id
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "204":
          description: All folders and files in bin have been deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
      summary: Delete all folders and files from recycle bin
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/{subscriptionId}/RecoverRecycleBin:
    post:
      description: User with a Create RecycleBin permission can access this method.
      operationId: ReportFolderAndFile_RecoverAllFromRecycleBin
      parameters:
      - description: subscription id
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "204":
          description: All folders and files in bin have been restored
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
      summary: Recover all folders and files from recycle bin
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/{subscriptionId}/DeleteFiles:
    post:
      description: User with a Delete permission can access this method.
      operationId: ReportFolderAndFile_DeleteFiles
      parameters:
      - description: id of current subscription
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          text/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
        description: VM with files' ids and params of their destination
      responses:
        "204":
          description: All folders and files have been deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
      summary: Delete folders and files
      tags:
      - Reports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Reports/{subscriptionId}/RecoverFiles:
    post:
      description: User with a SubscriptionCreate permission can access this method.
      operationId: ReportFolderAndFile_RecoverFiles
      parameters:
      - description: id of current subscription
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          text/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
        description: VM with files' ids and params of their destination
      responses:
        "204":
          description: All folders and files have been recovered
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
      summary: Recover folders and files from bin
      tags:
      - Reports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Reports/{subscriptionId}/ToBin:
    post:
      description: User with a Delete permission can access this method.
      operationId: ReportFolderAndFile_MoveFilesToBin
      parameters:
      - description: id of current subscription
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          text/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
        description: VM with files' ids and params of their destination
      responses:
        "204":
          description: All folders and files have been moved to bin
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
      summary: Move folders and files to bin
      tags:
      - Reports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Reports/{subscriptionId}/CopyFiles:
    post:
      description: User with a Get permission for a files and Create permission for
        a destination folder can access this method.
      operationId: ReportFolderAndFile_CopyFiles
      parameters:
      - description: id of current subscription
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          text/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
        description: VM with files' ids and params of their destination
      responses:
        "204":
          description: All folders and files have been copied
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
        "500":
          description: Server Error
      summary: Copy folders and files to a specified folder
      tags:
      - Reports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Reports/{subscriptionId}/MoveFiles:
    post:
      description: User with a Update Place permission for a files and Create permission
        for a destination folder can access this method.
      operationId: ReportFolderAndFile_MoveFiles
      parameters:
      - description: id of current subscription
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          text/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
        description: VM with files' ids and params of their destination
      responses:
        "204":
          description: All folders and files have been moved
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
        "500":
          description: Server Error
      summary: Move folders and files to a specified folder
      tags:
      - Reports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/Export:
    post:
      description: "User with Execute Export permission on report folder and\r\nCreate\
        \ Entity on an export folder can access this method."
      operationId: ReportFolders_Export
      parameters:
      - description: report folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportReportVM'
          text/json:
            schema:
              $ref: '#/components/schemas/ExportReportVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ExportReportVM'
        description: export parameters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Specified report folder has been exported
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Report folder Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Exports folder not found
      summary: Export specified report folder to a specified format
      tags:
      - Reports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/permissions:
    get:
      operationId: ReportFolders_GetPermissions
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissionsVM'
          description: returned permissions
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: id is not valid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folder is not found
      summary: Get all folder permissions
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/{id}/permissions:
    post:
      operationId: ReportFolders_UpdatePermissions
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateFilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateFilePermissionsVM'
        description: ""
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          description: Server Error
      summary: Update permissions
      tags:
      - Reports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}:
    delete:
      description: User with a Delete Entity permission can access this method.
      operationId: ReportFolders_DeleteFolder
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "204":
          description: Folder succesfully deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Delete specified folder
      tags:
      - Reports
      x-accepts: application/json
    get:
      description: User with a Get Entity permission can access this method.
      operationId: ReportFolders_GetFolder
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Returns specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get specified folder
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/ToBin:
    delete:
      description: User with a Delete Entity permission can access this method.
      operationId: ReportFolders_MoveFolderToBin
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "204":
          description: Folder succesfully deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Move specified folder to recycle bin
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/Recover:
    post:
      description: User with a Delete Entity permission can access this method.
      operationId: ReportFolders_RecoverFolder
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: recoveryPath
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Folder succesfully restored from bin
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Recover specified folder
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/Breadcrumbs:
    get:
      description: User with a Get Entity permission can access this method.
      operationId: ReportFolders_GetBreadcrumbs
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BreadcrumbsVM'
          description: Returns breadcrumbs parents list (starts from root folder)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get specified folder breadcrumbs
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/size:
    get:
      description: User with a Get Entity permission can access this method.
      operationId: ReportFolders_CalculateFolderSize
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderSizeVM'
          description: Returns specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: "Get specified folder, calculate it's size"
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/getOrCreate:
    get:
      description: User with a Get Entity permission can access this method.
      operationId: ReportFolders_GetOrCreate
      parameters:
      - description: folder name
        explode: true
        in: query
        name: name
        required: false
        schema:
          maxLength: 50
          minLength: 0
          type: string
        style: form
      - description: subscriptionId
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
        style: form
      - description: parent folder id
        explode: true
        in: query
        name: parentId
        required: false
        schema:
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Returns specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get specified folder
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/ListFolders:
    get:
      description: User with a Get Entity permission can access this method.
      operationId: ReportFolders_GetFolders
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: "number of files, that have to be skipped"
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      - description: "number of files, that have to be returned"
        explode: true
        in: query
        name: take
        required: false
        schema:
          default: 10
          format: int32
          maximum: 120
          minimum: 1
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          $ref: '#/components/schemas/FileSorting'
        style: form
      - description: ""
        explode: true
        in: query
        name: desc
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ""
        explode: true
        in: query
        name: searchPattern
        required: false
        schema:
          default: ""
          maxLength: 100
          minLength: 0
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: useRegex
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesVM'
          description: Gets all folders from a specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get all folders from specified folder
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/CountFolders:
    get:
      description: User with a Get Count permission can access this method.
      operationId: ReportFolders_GetFoldersCount
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountVM'
          description: Returns count of folders in a specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get count of folders what contains in a specified folder
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/Root:
    get:
      description: "> Breakchange. Now user model doesn't contain a root folders.\r\
        \nThis method can return error 400 and 404 when subscription is not found."
      operationId: ReportFolders_GetRootFolder
      parameters:
      - explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Gets user's root folder (without parents)
        "400":
          description: Error with the request.
        "404":
          description: Not found subscription
        "403":
          description: No permissions to get root folder
      summary: Get user's root folder (without parents)
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/Move/{folderId}:
    post:
      description: "User with a Update Place permission for a folder and Create Entity\r\
        \nfor a Parent Folder can access this method."
      operationId: ReportFolders_MoveFolder
      parameters:
      - description: moving folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: destination folder id
        explode: false
        in: path
        name: folderId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Folder has been moved to a specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId or parentFolderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Move folder to a specified folder
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/Copy/{folderId}:
    post:
      description: "User with a Update Place permission for a folder and Create Entity\r\
        \nfor a Parent Folder can access this method."
      operationId: ReportFolders_CopyFolder
      parameters:
      - description: moving folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: destination folder id
        explode: false
        in: path
        name: folderId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Folder has been moved to a specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId or parentFolderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Move folder to a specified folder
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/Folder:
    post:
      description: User with a Create Entity permisison can access this method.
      operationId: ReportFolders_PostFolder
      parameters:
      - description: Identifier of parent folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportFolderCreateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/ReportFolderCreateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReportFolderCreateVM'
        description: create VM
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: New folder has been created)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Parent folder id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: parent folder/subscription not found
      summary: Create folder
      tags:
      - Reports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/Rename:
    put:
      description: User with a Update Name permision can access this method.
      operationId: ReportFolders_RenameFolder
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderRenameVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FolderRenameVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FolderRenameVM'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Folder name has been updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Rename a folder
      tags:
      - Reports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/Icon:
    put:
      description: User with a Update Icon permission can access this method.
      operationId: ReportFolders_UpdateIcon
      parameters:
      - description: Identifier of folder
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderIconVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FolderIconVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FolderIconVM'
        description: Update icon model
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Folder's icon has been updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Update a folder's icon
      tags:
      - Reports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/UpdateTags:
    put:
      description: User with a Update Tags permission can access this method.
      operationId: ReportFolders_UpdateTags
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderTagsUpdateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FolderTagsUpdateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FolderTagsUpdateVM'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Tags has been updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId or Tags is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Update tags
      tags:
      - Reports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Reports/File/{id}/Export:
    post:
      description: "User with Execute Export permission on prepared report and\r\n\
        Create Entity on an export folder can access this method."
      operationId: Reports_Export
      parameters:
      - description: report id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportReportVM'
          text/json:
            schema:
              $ref: '#/components/schemas/ExportReportVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ExportReportVM'
        description: export parameters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
          description: Specified report has been exported
        "204":
          description: Specified report has been exported
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Report Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Exports folder not found
      summary: Export specified report to a specified format
      tags:
      - Reports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Reports/File/{id}/StaticPreview:
    post:
      operationId: Reports_StaticPreview
      parameters:
      - description: template id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreviewReportVM'
          text/json:
            schema:
              $ref: '#/components/schemas/PreviewReportVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PreviewReportVM'
        description: Model with parameters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
          description: Specified template has been prepared
        "204":
          description: Specified template has been prepared
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Template Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Template or folder not found
      summary: "Make preview for the report.\r\nGenerate a new or return exist prepared\
        \ svg files.\r\nIf template was changed will be returned a new.\r\nPass the\
        \ `` parameter to check prepared timestamp"
      tags:
      - Reports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v2/Reports/Folder/{id}/File:
    post:
      description: User with Create Entity permission can access this method.
      operationId: Reports_UploadFileV2
      parameters:
      - description: Identifier of folder
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding:
              TemplateId:
                style: form
              Tags:
                style: form
              Icon:
                style: form
              FileContent:
                style: form
            schema:
              $ref: '#/components/schemas/Reports_UploadFileV2_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
          description: File has been uploaded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: fileVM view model is not valid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folder/subscription is not found
      summary: Alternative api for upload a file to the specified folder!
      tags:
      - Reports
      x-content-type: multipart/form-data
      x-accepts: application/json
  /api/rp/v1/Reports/File/{id}/Copy/{folderId}:
    post:
      operationId: Reports_CopyFile
      parameters:
      - description: file id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: folder id
        explode: false
        in: path
        name: folderId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
          description: File has been copied
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: fileId or folderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
        "500":
          description: Exception thrown
      summary: Copy file to a specified folder
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/File/{id}:
    delete:
      description: User with Delete permission can access the method.
      operationId: Reports_DeleteFile
      parameters:
      - description: file id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "204":
          description: File succesfully deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          description: Exception thrown
      summary: Delete specified file
      tags:
      - Reports
      x-accepts: application/json
    get:
      description: User with Get Entity permission can access this method.
      operationId: Reports_GetFile
      parameters:
      - description: file id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
          description: Returns the specified file
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          description: Exception thrown
      summary: Get specified file
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/File/{id}/ToBin:
    delete:
      description: User with Delete permission can access the method.
      operationId: Reports_MoveFileToBin
      parameters:
      - description: file id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "204":
          description: File succesfully deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          description: Exception thrown
      summary: Move specified file to recycle bin
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/File/{id}/Recover:
    post:
      description: User with Delete permission can access the method.
      operationId: Reports_RecoverFile
      parameters:
      - description: file id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: recoveryPath
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: File succesfully recovered
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          description: Exception thrown
      summary: Recover specified file from bin
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/File/{id}/History:
    get:
      operationId: Reports_GetFileHistory
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: take
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditActionsVM'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: "Returns list of actions, performed on this file"
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/CountFiles:
    get:
      description: User with Get Count permission can access this method.
      operationId: Reports_GetFilesCount
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountVM'
          description: Returns count of the files in a specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
        "500":
          description: Exception thrown
      summary: Get count of files what contains in a specified folder
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/ListFiles:
    get:
      operationId: Reports_GetFilesList
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: "number of files, that have to be skipped"
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      - description: "number of files, that have to be returned"
        explode: true
        in: query
        name: take
        required: false
        schema:
          default: 10
          format: int32
          maximum: 120
          minimum: 1
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: searchPattern
        required: false
        schema:
          maxLength: 100
          minLength: 0
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          $ref: '#/components/schemas/FileSorting'
        style: form
      - description: ""
        explode: true
        in: query
        name: desc
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ""
        explode: true
        in: query
        name: useRegex
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsVM'
          description: Returns list of the files from a specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
        "500":
          description: Exception thrown
      summary: "Get all files from specified folder. <br />\r\nUser with Get Entity\
        \ permission can access this method. <br />\r\nThe method will returns minimal\
        \ infomration about the file: <br />\r\nid, name, size, editedTime, createdTime,\
        \ tags, status, statusReason."
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/File/{id}/permissions:
    get:
      operationId: Reports_GetPermissions
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissionsVM'
          description: got permissions successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: id is not valid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: file is not found
      summary: Get all file permissions
      tags:
      - Reports
      x-accepts: application/json
    post:
      operationId: Reports_UpdatePermissions
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateFilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateFilePermissionsVM'
        description: ""
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          description: Server Error
      summary: Update permissions
      tags:
      - Reports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Reports/File/{id}/Move/{folderId}:
    post:
      description: "User with a Update Place permission for a folder and Create Entity\r\
        \nfor a Parent Folder can access this method."
      operationId: Reports_MoveFile
      parameters:
      - description: file id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: folder id
        explode: false
        in: path
        name: folderId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
          description: File has been moved
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: fileId or folderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
        "500":
          description: Exception thrown
      summary: Move file to a specified folder
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/File/{id}/Rename:
    put:
      description: User with Update Name permission can access this method.
      operationId: Reports_RenameFile
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileRenameVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FileRenameVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FileRenameVM'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
          description: File name has been updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FileId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          description: Exception thrown
      summary: Rename a file
      tags:
      - Reports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Reports/File/{id}/Icon:
    put:
      description: User with Update Icon permission can access this method.
      operationId: Reports_UpdateIcon
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileIconVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FileIconVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FileIconVM'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
          description: File's icon has been updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FileId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          description: Exception thrown
      summary: Update a files's icon
      tags:
      - Reports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Reports/File/{id}/UpdateTags:
    put:
      description: User with Update Tags permission can access this method.
      operationId: Reports_UpdateTags
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileTagsUpdateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FileTagsUpdateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FileTagsUpdateVM'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
          description: Tags has been updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FileId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          description: Exception thrown
      summary: Update tags
      tags:
      - Reports
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/File:
    post:
      deprecated: true
      description: User with Create Entity permission can access this method.
      operationId: Reports_UploadFile
      parameters:
      - description: Identifier of folder
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportCreateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/ReportCreateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReportCreateVM'
        description: file's view model
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
          description: File has been uploaded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: fileVM view model is not valid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folder/subscription is not found
      summary: "Upload a file to the specified folder. The method is deprecated, use\
        \ the UploadFileV2 method instead!"
      tags:
      - Reports
      x-content-type: application/json
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{subscriptionId}/groups:
    get:
      operationId: SubscriptionGroups_GetGroupsList
      parameters:
      - description: subscripiton id
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: user Id (optional)
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsVM'
          description: Everything is all right (list of groups may be empty)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: id is not hex24
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have permisison to get groups from this subscription
            (or in your default (1st) subscription)
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "there is no subscription with provided id found, or user don't\
            \ even have a subscription"
      summary: returns groups of the subscription or subscription user
      tags:
      - SubscriptionGroups
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{subscriptionId}/count:
    get:
      operationId: SubscriptionGroups_CountGroupsAsync
      parameters:
      - description: subscripiton id
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int64
                type: integer
          description: Everything is all right
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: id is not hex24
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have permisison to get groups from this subscription
            (or in your default (1st) subscription)
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "there is no subscription with provided id found, or user don't\
            \ even have a subscription"
      summary: Returns a number of groups in subscription
      tags:
      - SubscriptionGroups
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{subscriptionId}/invites:
    get:
      operationId: SubscriptionInvites_GetInvites
      parameters:
      - description: Idenitifier of subscription
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionInvitesVM'
          description: Succesfully added
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription or user is not found
        "500":
          description: Exception thrown
      summary: "Get list of invites in a subscription,\r\nthe added users will be\
        \ displayed in the list of users of the subscription,\r\nand these users will\
        \ also have an active subscription."
      tags:
      - SubscriptionInvites
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{subscriptionId}/invite:
    post:
      operationId: SubscriptionInvites_CreateInvite
      parameters:
      - description: id
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionInviteVM'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionInviteVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionInviteVM'
        description: create VM
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionInviteVM'
          description: Successfully created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Request is wrong
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not enough permissions
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: there is no subscription with such id
        "500":
          description: exception caught
      summary: Create invite to subscription
      tags:
      - SubscriptionInvites
      x-content-type: application/json
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{subscriptionId}/invite/{accesstoken}:
    delete:
      operationId: SubscriptionInvites_DeleteInvite
      parameters:
      - description: id
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: invite's token
        explode: false
        in: path
        name: accesstoken
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successfully deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Request is wrong
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not enough permissions
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: there is no subscription with such id
        "500":
          description: exception caught
      summary: Rename subscription
      tags:
      - SubscriptionInvites
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{subscriptionId}/invite/{accessToken}/accept:
    get:
      operationId: SubscriptionInvites_AcceptInvite
      parameters:
      - description: Idenitifier of subscription
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: access token of the subscription
        explode: false
        in: path
        name: accessToken
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Succesfully added
        "204":
          description: Succesfully added
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription or user is not found
        "500":
          description: Exception thrown
      summary: "Add a user to the subscription using invite,\r\nthe added users will\
        \ be displayed in the list of users of the subscription,\r\nand these users\
        \ will also have an active subscription."
      tags:
      - SubscriptionInvites
      x-accepts: application/json
  /api/manage/v1/SubscriptionPlans/{id}:
    get:
      operationId: SubscriptionPlans_GetSubscriptionPlan
      parameters:
      - description: Identifier of subsctiption plan
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPlanVM'
          description: Succesfully returned
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription plan with this id is not found
        "500":
          description: Exception thrown
      summary: Returns a subscription plan. Not all subscriptions can be issued for
        customer.
      tags:
      - SubscriptionPlans
      x-accepts: application/json
  /api/manage/v1/SubscriptionPlans:
    get:
      description: "If no active subscription plans, then the endpoint will return\
        \ empty list"
      operationId: SubscriptionPlans_GetSubscriptionPlans
      parameters:
      - description: "Variable for pagination, defautl value is 0"
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      - description: "Variable for pagination, default value is 10"
        explode: true
        in: query
        name: take
        required: false
        schema:
          default: 10
          format: int32
          maximum: 120
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPlansVM'
          description: Succesfully returned
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
      summary: Returns a list of active subscription plans that can be issued to the
        user.
      tags:
      - SubscriptionPlans
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{id}:
    get:
      operationId: Subscriptions_GetSubscription
      parameters:
      - description: Identifier of subscription
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionVM'
          description: Succesfully returned
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is not found
      summary: Returns the subscription by id
      tags:
      - Subscriptions
      x-accepts: application/json
  /api/manage/v1/Subscriptions:
    get:
      operationId: Subscriptions_GetSubscriptions
      parameters:
      - description: "Variable for pagination, defautl value is 0"
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      - description: "Variable for pagination, default value is 10"
        explode: true
        in: query
        name: take
        required: false
        schema:
          default: 10
          format: int32
          maximum: 120
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionsVM'
          description: Succesfully returned
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: unrealistic skip 'n take provided
      summary: Returns a list of all subscriptions of current user
      tags:
      - Subscriptions
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{subscriptionId}/rename:
    put:
      operationId: Subscriptions_RenameSubscription
      parameters:
      - description: id
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameSubscriptionVM'
          text/json:
            schema:
              $ref: '#/components/schemas/RenameSubscriptionVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RenameSubscriptionVM'
        description: rename VM
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionVM'
          description: Successfully renamed
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Request is wrong
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not enough permissions
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: there is no subscription with such id (or user have no permission)
      summary: Rename subscription
      tags:
      - Subscriptions
      x-content-type: application/json
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{subscriptionId}/Locale:
    put:
      operationId: Subscriptions_UpdateLocale
      parameters:
      - description: id
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionLocaleVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionLocaleVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionLocaleVM'
        description: update VM
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionVM'
          description: Successfully renamed
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Request is wrong
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not enough permissions
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: there is no subscription with such id (or user have no permission)
      summary: Update subscription's default locale
      tags:
      - Subscriptions
      x-content-type: application/json
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{subscriptionId}/defaultPermissions:
    get:
      operationId: Subscriptions_GetDefaultPermissions
      parameters:
      - description: id
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPermissionsVM'
          description: Successfully returned
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Request is wrong
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not enough permissions
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: there is no subscription with such id
      summary: Get subscription's default permissions for new entities
      tags:
      - Subscriptions
      x-accepts: application/json
    put:
      operationId: Subscriptions_UpdateDefaultPermissions
      parameters:
      - description: id
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDefaultPermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateDefaultPermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateDefaultPermissionsVM'
        description: update default permissions VM
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPermissionsVM'
          description: Successfully changed
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Request is wrong
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not enough permissions
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: there is no subscription with such id
      summary: Change subscription's default permissions for new entities
      tags:
      - Subscriptions
      x-content-type: application/json
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{id}/permissions:
    get:
      operationId: Subscriptions_GetPermissions
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPermissionsVM'
          description: Succesfully returned
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
      summary: Get permissions for a subscription by id
      tags:
      - Subscriptions
      x-accepts: application/json
    post:
      operationId: Subscriptions_UpdatePermissions
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionPermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionPermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionPermissionsVM'
        description: ""
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          description: Server Error
      summary: Update permissions
      tags:
      - Subscriptions
      x-content-type: application/json
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{subId}/mypermissions:
    get:
      operationId: Subscriptions_GetMyPermissions
      parameters:
      - description: subscription id
        explode: false
        in: path
        name: subId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyPermissionsVM'
          description: Succesfully returned
      summary: Get user's permissions for a subscription by id
      tags:
      - Subscriptions
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{subscriptionId}/users/{userId}:
    delete:
      operationId: SubscriptionUsers_RemoveUser
      parameters:
      - description: Idenitifier of subscription
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: Idenitifier of user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Succesfully deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription id outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription or user is not found
        "500":
          description: Exception thrown
      summary: "Delete a user from the subscription,\r\nthe added users will be displayed\
        \ in the list of users of the subscription,\r\nand these users will also have\
        \ an active subscription."
      tags:
      - SubscriptionUsers
      x-accepts: application/json
    put:
      operationId: SubscriptionUsers_AddUser
      parameters:
      - description: Idenitifier of subscription
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: Idenitifier of user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Succesfully added
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription or user is not found
        "500":
          description: Exception thrown
      summary: "Add a user to the subscription,\r\nthe added users will be displayed\
        \ in the list of users of the subscription,\r\nand these users will also have\
        \ an active subscription."
      tags:
      - SubscriptionUsers
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{subscriptionId}/leave:
    delete:
      operationId: SubscriptionUsers_LeaveSubscripiton
      parameters:
      - description: Idenitifier of subscription
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "204":
          description: Succesfully deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription id outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription or user is not found
        "500":
          description: Exception thrown
      summary: "Allows user to leave subscription,."
      tags:
      - SubscriptionUsers
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{subscriptionId}/users:
    get:
      operationId: SubscriptionUsers_GetUsers
      parameters:
      - description: Idenitifier of subscription
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: How many entities skip
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      - description: How many entities take
        explode: true
        in: query
        name: take
        required: false
        schema:
          default: 10
          format: int32
          maximum: 120
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionUsersVM'
          description: Succesfully returned
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is not found
        "500":
          description: Exception thrown
      summary: Returns all users of subscription
      tags:
      - SubscriptionUsers
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{subscriptionId}/UsersCount:
    get:
      operationId: SubscriptionUsers_CountUsersAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int64
                type: integer
          description: Succesfully returned
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is not found
        "500":
          description: Exception thrown
      summary: Returns a number of users in subscription
      tags:
      - SubscriptionUsers
      x-accepts: application/json
  /api/tasks/v1/Tasks:
    get:
      operationId: Tasks_GetList
      parameters:
      - description: "number of tasks, that have to be skipped"
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      - description: "number of tasks, that have to be returned"
        explode: true
        in: query
        name: take
        required: false
        schema:
          default: 10
          format: int32
          maximum: 120
          minimum: 1
          type: integer
        style: form
      - description: subscription id
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: searchPattern
        required: false
        schema:
          default: ""
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TasksVM'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "500":
          description: Server Error
      summary: Get tasks list
      tags:
      - Tasks
      x-accepts: application/json
    post:
      operationId: Tasks_CreateTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskBaseVM'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateTaskBaseVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateTaskBaseVM'
        description: "task's view model. You have to specify task type (type: \"ExportTemplate\"\
          )"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskBaseVM'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "500":
          description: Server Error
      summary: Create a new task
      tags:
      - Tasks
      x-content-type: application/json
      x-accepts: application/json
  /api/tasks/v1/Tasks/{taskId}:
    delete:
      operationId: Tasks_DeleteTask
      parameters:
      - description: deleting task id
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "500":
          description: Server Error
      summary: Delete a task from a storage
      tags:
      - Tasks
      x-accepts: application/json
    get:
      operationId: Tasks_Get
      parameters:
      - description: a task id
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskBaseVM'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "500":
          description: Server Error
      summary: Get a task by a specified id
      tags:
      - Tasks
      x-accepts: application/json
    put:
      operationId: Tasks_UpdateTask
      parameters:
      - description: updating task id
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskBaseVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskBaseVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateTaskBaseVM'
        description: "task's view model. You have to specify task type (type: \"ExportTemplate\"\
          )"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskBaseVM'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "500":
          description: Server Error
      summary: Update a task
      tags:
      - Tasks
      x-content-type: application/json
      x-accepts: application/json
  /api/tasks/v1/Tasks/{id}/permissions:
    get:
      operationId: Tasks_GetPermissions
      parameters:
      - description: task id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskPermissionsVM'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          description: Server Error
      summary: Get all Task permissions
      tags:
      - Tasks
      x-accepts: application/json
    post:
      operationId: Tasks_UpdatePermissions
      parameters:
      - description: task id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskPermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskPermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateTaskPermissionsVM'
        description: new permissions
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          description: Server Error
      summary: Update permissions
      tags:
      - Tasks
      x-content-type: application/json
      x-accepts: application/json
  /api/tasks/v1/Tasks/{taskId}/rename:
    put:
      operationId: Tasks_RenameTask
      parameters:
      - description: renaming task id
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: task's new Name
        explode: true
        in: query
        name: newName
        required: false
        schema:
          maxLength: 50
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskBaseVM'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "500":
          description: Server Error
      summary: Rename a task
      tags:
      - Tasks
      x-accepts: application/json
  /api/tasks/v1/Tasks/run:
    post:
      operationId: Tasks_RunTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunTaskBaseVM'
          text/json:
            schema:
              $ref: '#/components/schemas/RunTaskBaseVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RunTaskBaseVM'
        description: task's view model
      responses:
        "200":
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "500":
          description: Server Error
      summary: Run a task from request body
      tags:
      - Tasks
      x-content-type: application/json
      x-accepts: application/json
  /api/tasks/v1/Tasks/{taskId}/run:
    post:
      operationId: Tasks_RunTaskById
      parameters:
      - description: task id
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "500":
          description: Server Error
      summary: Run a task by id
      tags:
      - Tasks
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/CountFolderAndFiles:
    get:
      description: User with a Get Count permission can access this method.
      operationId: TemplateFolderAndFile_GetCount
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: "string, that must be incuded in file or folder name to be counted\
          \ <br />\r\n            (leave undefined to count all files and folders)"
        explode: true
        in: query
        name: searchPattern
        required: false
        schema:
          maxLength: 100
          minLength: 0
          type: string
        style: form
      - description: set this to true if you want to use regular expression to search
        explode: true
        in: query
        name: useRegex
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountVM'
          description: Returns count of the files in a specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get count of files and folders what contains in a specified folder
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/ListFolderAndFiles:
    get:
      description: User with a Get Entity permission can access this method.
      operationId: TemplateFolderAndFile_GetFoldersAndFiles
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: "number of folder and files, that have to be skipped"
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      - description: "number of folder and files, that have to be returned"
        explode: true
        in: query
        name: take
        required: false
        schema:
          default: 10
          format: int32
          maximum: 120
          minimum: 1
          type: integer
        style: form
      - description: indicates a field to sort by
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          $ref: '#/components/schemas/FileSorting'
        style: form
      - description: indicates if sorting is descending
        explode: true
        in: query
        name: desc
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ""
        explode: true
        in: query
        name: searchPattern
        required: false
        schema:
          default: ""
          maxLength: 100
          minLength: 0
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: useRegex
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesVM'
          description: Returns list of the files from a specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
      summary: Get all folders and files from specified folder
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/{subscriptionId}/ListRecycleBinFolderAndFiles:
    get:
      description: User with a Get DeletedFiles permission can access this method.
      operationId: TemplateFolderAndFile_GetRecycleBinFoldersAndFiles
      parameters:
      - description: subscription id
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: "number of folder and files, that have to be skipped"
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      - description: "number of folder and files, that have to be returned"
        explode: true
        in: query
        name: take
        required: false
        schema:
          default: 10
          format: int32
          maximum: 120
          minimum: 1
          type: integer
        style: form
      - description: indicates a field to sort by
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          $ref: '#/components/schemas/FileSorting'
        style: form
      - description: indicates if sorting is descending
        explode: true
        in: query
        name: desc
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ""
        explode: true
        in: query
        name: searchPattern
        required: false
        schema:
          default: ""
          maxLength: 100
          minLength: 0
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: useRegex
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesVM'
          description: Returns list of the files from a specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
      summary: Get all folders and files from recycle bin
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/{subscriptionId}/ClearRecycleBin:
    delete:
      description: User with a Delete RecycleBin permission can access this method.
      operationId: TemplateFolderAndFile_ClearRecycleBin
      parameters:
      - description: subscription id
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "204":
          description: All folders and files in bin have been deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
      summary: Delete all folders and files from recycle bin
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/{subscriptionId}/RecoverRecycleBin:
    post:
      description: User with a Create RecycleBin permission can access this method.
      operationId: TemplateFolderAndFile_RecoverAllFromRecycleBin
      parameters:
      - description: subscription id
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "204":
          description: All folders and files in bin have been restored
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
      summary: Recover all folders and files from recycle bin
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/{subscriptionId}/DeleteFiles:
    post:
      description: User with a Delete permission can access this method.
      operationId: TemplateFolderAndFile_DeleteFiles
      parameters:
      - description: id of current subscription
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          text/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
        description: VM with files' ids and params of their destination
      responses:
        "204":
          description: All folders and files have been deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
      summary: Delete folders and files
      tags:
      - Templates
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Templates/{subscriptionId}/RecoverFiles:
    post:
      description: User with a SubscriptionCreate permission can access this method.
      operationId: TemplateFolderAndFile_RecoverFiles
      parameters:
      - description: id of current subscription
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          text/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
        description: VM with files' ids and params of their destination
      responses:
        "204":
          description: All folders and files have been recovered
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
      summary: Recover folders and files from bin
      tags:
      - Templates
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Templates/{subscriptionId}/ToBin:
    post:
      description: User with a Delete permission can access this method.
      operationId: TemplateFolderAndFile_MoveFilesToBin
      parameters:
      - description: id of current subscription
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          text/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
        description: VM with files' ids and params of their destination
      responses:
        "204":
          description: All folders and files have been moved to bin
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
      summary: Move folders and files to bin
      tags:
      - Templates
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Templates/{subscriptionId}/CopyFiles:
    post:
      description: User with a Get permission for a files and Create permission for
        a destination folder can access this method.
      operationId: TemplateFolderAndFile_CopyFiles
      parameters:
      - description: id of current subscription
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          text/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
        description: VM with files' ids and params of their destination
      responses:
        "204":
          description: All folders and files have been copied
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
        "500":
          description: Server Error
      summary: Copy folders and files to a specified folder
      tags:
      - Templates
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Templates/{subscriptionId}/MoveFiles:
    post:
      description: User with a Update Place permission for a files and Create permission
        for a destination folder can access this method.
      operationId: TemplateFolderAndFile_MoveFiles
      parameters:
      - description: id of current subscription
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          text/json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SelectedFilesVM'
        description: VM with files' ids and params of their destination
      responses:
        "204":
          description: All folders and files have been moved
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Payment required, subscription is blocked"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
        "500":
          description: Server Error
      summary: Move folders and files to a specified folder
      tags:
      - Templates
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/Export:
    post:
      description: "User with Execute Export permission on template folder and\r\n\
        Create Entity on an export folder can access this method."
      operationId: TemplateFolders_Export
      parameters:
      - description: template folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportTemplateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/ExportTemplateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ExportTemplateVM'
        description: export parameters (string only)
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Specified template folder has been exported
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Template folder Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Exports folder not found
      summary: Export specified template folder to a specified format
      tags:
      - Templates
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/Prepare:
    post:
      description: "User with Execute Prepare permission on report and\r\nCreate Entity\
        \ on a prepared report folder can access this method."
      operationId: TemplateFolders_Prepare
      parameters:
      - description: template id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepareTemplateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/PrepareTemplateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PrepareTemplateVM'
        description: Template folder prepare view model
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Specified template folder has been prepared
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Template folder Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Template or report folder not found
      summary: Prepare specified template folder to report folder
      tags:
      - Templates
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/permissions:
    get:
      operationId: TemplateFolders_GetPermissions
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissionsVM'
          description: returned permissions
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: id is not valid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folder is not found
      summary: Get all folder permissions
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/{id}/permissions:
    post:
      operationId: TemplateFolders_UpdatePermissions
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateFilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateFilePermissionsVM'
        description: ""
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          description: Server Error
      summary: Update permissions
      tags:
      - Templates
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}:
    delete:
      description: User with a Delete Entity permission can access this method.
      operationId: TemplateFolders_DeleteFolder
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "204":
          description: Folder succesfully deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Delete specified folder
      tags:
      - Templates
      x-accepts: application/json
    get:
      description: User with a Get Entity permission can access this method.
      operationId: TemplateFolders_GetFolder
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Returns specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get specified folder
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/ToBin:
    delete:
      description: User with a Delete Entity permission can access this method.
      operationId: TemplateFolders_MoveFolderToBin
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "204":
          description: Folder succesfully deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Move specified folder to recycle bin
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/Recover:
    post:
      description: User with a Delete Entity permission can access this method.
      operationId: TemplateFolders_RecoverFolder
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: recoveryPath
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Folder succesfully restored from bin
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Recover specified folder
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/Breadcrumbs:
    get:
      description: User with a Get Entity permission can access this method.
      operationId: TemplateFolders_GetBreadcrumbs
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BreadcrumbsVM'
          description: Returns breadcrumbs parents list (starts from root folder)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get specified folder breadcrumbs
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/size:
    get:
      description: User with a Get Entity permission can access this method.
      operationId: TemplateFolders_CalculateFolderSize
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderSizeVM'
          description: Returns specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: "Get specified folder, calculate it's size"
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/getOrCreate:
    get:
      description: User with a Get Entity permission can access this method.
      operationId: TemplateFolders_GetOrCreate
      parameters:
      - description: folder name
        explode: true
        in: query
        name: name
        required: false
        schema:
          maxLength: 50
          minLength: 0
          type: string
        style: form
      - description: subscriptionId
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
        style: form
      - description: parent folder id
        explode: true
        in: query
        name: parentId
        required: false
        schema:
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Returns specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get specified folder
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/ListFolders:
    get:
      description: User with a Get Entity permission can access this method.
      operationId: TemplateFolders_GetFolders
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: "number of files, that have to be skipped"
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      - description: "number of files, that have to be returned"
        explode: true
        in: query
        name: take
        required: false
        schema:
          default: 10
          format: int32
          maximum: 120
          minimum: 1
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          $ref: '#/components/schemas/FileSorting'
        style: form
      - description: ""
        explode: true
        in: query
        name: desc
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ""
        explode: true
        in: query
        name: searchPattern
        required: false
        schema:
          default: ""
          maxLength: 100
          minLength: 0
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: useRegex
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesVM'
          description: Gets all folders from a specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get all folders from specified folder
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/CountFolders:
    get:
      description: User with a Get Count permission can access this method.
      operationId: TemplateFolders_GetFoldersCount
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountVM'
          description: Returns count of folders in a specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get count of folders what contains in a specified folder
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/Root:
    get:
      description: "> Breakchange. Now user model doesn't contain a root folders.\r\
        \nThis method can return error 400 and 404 when subscription is not found."
      operationId: TemplateFolders_GetRootFolder
      parameters:
      - explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Gets user's root folder (without parents)
        "400":
          description: Error with the request.
        "404":
          description: Not found subscription
        "403":
          description: No permissions to get root folder
      summary: Get user's root folder (without parents)
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/Move/{folderId}:
    post:
      description: "User with a Update Place permission for a folder and Create Entity\r\
        \nfor a Parent Folder can access this method."
      operationId: TemplateFolders_MoveFolder
      parameters:
      - description: moving folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: destination folder id
        explode: false
        in: path
        name: folderId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Folder has been moved to a specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId or parentFolderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Move folder to a specified folder
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/Copy/{folderId}:
    post:
      description: "User with a Update Place permission for a folder and Create Entity\r\
        \nfor a Parent Folder can access this method."
      operationId: TemplateFolders_CopyFolder
      parameters:
      - description: moving folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: destination folder id
        explode: false
        in: path
        name: folderId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Folder has been moved to a specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId or parentFolderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Move folder to a specified folder
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/Folder:
    post:
      description: User with a Create Entity permisison can access this method.
      operationId: TemplateFolders_PostFolder
      parameters:
      - description: Identifier of parent folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateFolderCreateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/TemplateFolderCreateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TemplateFolderCreateVM'
        description: create VM
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: New folder has been created)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Parent folder id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: parent folder/subscription not found
      summary: Create folder
      tags:
      - Templates
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/Rename:
    put:
      description: User with a Update Name permision can access this method.
      operationId: TemplateFolders_RenameFolder
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderRenameVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FolderRenameVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FolderRenameVM'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Folder name has been updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Rename a folder
      tags:
      - Templates
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/Icon:
    put:
      description: User with a Update Icon permission can access this method.
      operationId: TemplateFolders_UpdateIcon
      parameters:
      - description: Identifier of folder
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderIconVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FolderIconVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FolderIconVM'
        description: Update icon model
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Folder's icon has been updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Update a folder's icon
      tags:
      - Templates
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/UpdateTags:
    put:
      description: User with a Update Tags permission can access this method.
      operationId: TemplateFolders_UpdateTags
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderTagsUpdateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FolderTagsUpdateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FolderTagsUpdateVM'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Tags has been updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId or Tags is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Update tags
      tags:
      - Templates
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Templates/File/{id}/Export:
    post:
      description: "User with Execute Export permission on prepared report and\r\n\
        Create Entity on an export folder can access this method."
      operationId: Templates_Export
      parameters:
      - description: template id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportTemplateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/ExportTemplateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ExportTemplateVM'
        description: export parameters (string only)
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
          description: Specified report has been exported
        "204":
          description: Specified report has been exported
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Report Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Exports folder not found
      summary: Export specified report template to a specified format
      tags:
      - Templates
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Templates/File/{id}/Prepare:
    post:
      description: "User with Execute Prepare permission on report and\r\nCreate Entity\
        \ on a prepared report folder can access this method."
      operationId: Templates_Prepare
      parameters:
      - description: template id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepareTemplateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/PrepareTemplateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PrepareTemplateVM'
        description: Template prepare view model
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
          description: Specified template has been prepared
        "204":
          description: Specified template has been prepared
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Report Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Template or folder not found
      summary: Prepare specified template to report
      tags:
      - Templates
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v2/Templates/File/{id}/Content:
    put:
      operationId: Templates_UpdateContentV2
      parameters:
      - description: template id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding:
              FileContent:
                style: form
            schema:
              $ref: '#/components/schemas/Templates_UpdateContentV2_request'
      responses:
        "204":
          description: No Content
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
      summary: Updates contnet of the template.
      tags:
      - Templates
      x-content-type: multipart/form-data
      x-accepts: application/json
  /api/rp/v1/Templates/File/{id}/Content:
    put:
      deprecated: true
      operationId: Templates_UpdateContent
      parameters:
      - description: template id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFileContentVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateFileContentVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateFileContentVM'
        description: "VM with only byte[] with new content"
      responses:
        "204":
          description: No Content
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
      summary: "Updates contnet of the template. The method is deprecated, use the\
        \ UpdateContentV2 method instead!"
      tags:
      - Templates
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Templates/File/{id}/StaticPreview:
    post:
      operationId: Templates_StaticPreview
      parameters:
      - description: template id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreviewTemplateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/PreviewTemplateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PreviewTemplateVM'
        description: Model with parameters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
          description: Specified template has been prepared
        "204":
          description: Specified template has been prepared
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Template Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Template or folder not found
      summary: "Make preview for the report.\r\nGenerate a new or return exist prepared\
        \ svg files.\r\nIf template was changed will be returned a new.\r\nPass the\
        \ `` parameter to check prepared timestamp"
      tags:
      - Templates
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v2/Templates/Folder/{id}/File:
    post:
      description: User with Create Entity permission can access this method.
      operationId: Templates_UploadFileV2
      parameters:
      - description: Identifier of folder
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding:
              Tags:
                style: form
              Icon:
                style: form
              FileContent:
                style: form
            schema:
              $ref: '#/components/schemas/Templates_UploadFileV2_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
          description: File has been uploaded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: fileVM view model is not valid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folder/subscription is not found
      summary: Alternative api for upload a file to the specified folder!
      tags:
      - Templates
      x-content-type: multipart/form-data
      x-accepts: application/json
  /api/rp/v1/Templates/File/{id}/Copy/{folderId}:
    post:
      operationId: Templates_CopyFile
      parameters:
      - description: file id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: folder id
        explode: false
        in: path
        name: folderId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
          description: File has been copied
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: fileId or folderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
        "500":
          description: Exception thrown
      summary: Copy file to a specified folder
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/File/{id}:
    delete:
      description: User with Delete permission can access the method.
      operationId: Templates_DeleteFile
      parameters:
      - description: file id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "204":
          description: File succesfully deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          description: Exception thrown
      summary: Delete specified file
      tags:
      - Templates
      x-accepts: application/json
    get:
      description: User with Get Entity permission can access this method.
      operationId: Templates_GetFile
      parameters:
      - description: file id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
          description: Returns the specified file
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          description: Exception thrown
      summary: Get specified file
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/File/{id}/ToBin:
    delete:
      description: User with Delete permission can access the method.
      operationId: Templates_MoveFileToBin
      parameters:
      - description: file id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "204":
          description: File succesfully deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          description: Exception thrown
      summary: Move specified file to recycle bin
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/File/{id}/Recover:
    post:
      description: User with Delete permission can access the method.
      operationId: Templates_RecoverFile
      parameters:
      - description: file id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: recoveryPath
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: File succesfully recovered
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          description: Exception thrown
      summary: Recover specified file from bin
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/File/{id}/History:
    get:
      operationId: Templates_GetFileHistory
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: take
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditActionsVM'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: "Returns list of actions, performed on this file"
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/CountFiles:
    get:
      description: User with Get Count permission can access this method.
      operationId: Templates_GetFilesCount
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountVM'
          description: Returns count of the files in a specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
        "500":
          description: Exception thrown
      summary: Get count of files what contains in a specified folder
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/ListFiles:
    get:
      operationId: Templates_GetFilesList
      parameters:
      - description: folder id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: "number of files, that have to be skipped"
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      - description: "number of files, that have to be returned"
        explode: true
        in: query
        name: take
        required: false
        schema:
          default: 10
          format: int32
          maximum: 120
          minimum: 1
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: searchPattern
        required: false
        schema:
          maxLength: 100
          minLength: 0
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          $ref: '#/components/schemas/FileSorting'
        style: form
      - description: ""
        explode: true
        in: query
        name: desc
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ""
        explode: true
        in: query
        name: useRegex
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesVM'
          description: Returns list of the files from a specified folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
        "500":
          description: Exception thrown
      summary: "Get all files from specified folder. <br />\r\nUser with Get Entity\
        \ permission can access this method. <br />\r\nThe method will returns minimal\
        \ infomration about the file: <br />\r\nid, name, size, editedTime, createdTime,\
        \ tags, status, statusReason."
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/File/{id}/permissions:
    get:
      operationId: Templates_GetPermissions
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissionsVM'
          description: got permissions successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: id is not valid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: file is not found
      summary: Get all file permissions
      tags:
      - Templates
      x-accepts: application/json
    post:
      operationId: Templates_UpdatePermissions
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateFilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateFilePermissionsVM'
        description: ""
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          description: Server Error
      summary: Update permissions
      tags:
      - Templates
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Templates/File/{id}/Move/{folderId}:
    post:
      description: "User with a Update Place permission for a folder and Create Entity\r\
        \nfor a Parent Folder can access this method."
      operationId: Templates_MoveFile
      parameters:
      - description: file id
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      - description: folder id
        explode: false
        in: path
        name: folderId
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
          description: File has been moved
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: fileId or folderId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
        "500":
          description: Exception thrown
      summary: Move file to a specified folder
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/File/{id}/Rename:
    put:
      description: User with Update Name permission can access this method.
      operationId: Templates_RenameFile
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileRenameVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FileRenameVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FileRenameVM'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
          description: File name has been updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FileId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          description: Exception thrown
      summary: Rename a file
      tags:
      - Templates
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Templates/File/{id}/Icon:
    put:
      description: User with Update Icon permission can access this method.
      operationId: Templates_UpdateIcon
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileIconVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FileIconVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FileIconVM'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
          description: File's icon has been updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FileId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          description: Exception thrown
      summary: Update a files's icon
      tags:
      - Templates
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Templates/File/{id}/UpdateTags:
    put:
      description: User with Update Tags permission can access this method.
      operationId: Templates_UpdateTags
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileTagsUpdateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FileTagsUpdateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FileTagsUpdateVM'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
          description: Tags has been updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FileId is null
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          description: Exception thrown
      summary: Update tags
      tags:
      - Templates
      x-content-type: application/json
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/File:
    post:
      deprecated: true
      description: User with Create Entity permission can access this method.
      operationId: Templates_UploadFile
      parameters:
      - description: Identifier of folder
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateCreateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/TemplateCreateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TemplateCreateVM'
        description: file's view model
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
          description: File has been uploaded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: fileVM view model is not valid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folder/subscription is not found
      summary: "Upload a file to the specified folder. The method is deprecated, use\
        \ the UploadFileV2 method instead!"
      tags:
      - Templates
      x-content-type: application/json
      x-accepts: application/json
  /api/manage/v1/notifications:
    delete:
      operationId: UserNotifications_ClearNotifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClearNotificationsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/ClearNotificationsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ClearNotificationsVM'
        description: ""
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: Use this endpoint to "clear" your notifications
      tags:
      - UserNotifications
      x-content-type: application/json
      x-accepts: application/json
    get:
      operationId: UserNotifications_GetNotifications
      parameters:
      - explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: take
        required: false
        schema:
          default: 5
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          default: ""
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditActionsVM'
          description: Success
        "204":
          description: No Content
      summary: Use this endpoint to recieve notifications
      tags:
      - UserNotifications
      x-accepts: application/json
  /api/manage/v1/UserProfile:
    get:
      operationId: UserProfile_GetMyProfile
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileVM'
          description: Succesfully returned
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Return current profile of the current user
      tags:
      - UserProfile
      x-accepts: application/json
    put:
      description: This method is only allowed for local sign in via intranet
      operationId: UserProfile_UpdateMyProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserProfileVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateUserProfileVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateUserProfileVM'
        description: ""
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "200":
          description: Succesfully updated
      summary: Update profile of the current user
      tags:
      - UserProfile
      x-content-type: application/json
      x-accepts: application/json
  /api/manage/v1/UserProfile/{userId}:
    get:
      operationId: UserProfile_GetUserProfile
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          pattern: "(^000000000000000000000000$|^[0-9a-f]{24}$|^([0-9a-f]{8}([-][0-9a-f]{4}){3}[-][0-9a-f]{12})$)"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileVM'
          description: Succesfully returned
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User not found
      summary: "Return user profile by user identifier.\r\nIf the user did not provide\
        \ information about himself or blocked, then the endpoint will return an empty\
        \ model. (only id)"
      tags:
      - UserProfile
      x-accepts: application/json
  /api/manage/v1/UserSettings:
    get:
      operationId: UserSettings_GetCurrentUserSettings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettingsVM'
          description: Succesfully returned
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User not found
      summary: Return current user settings.
      tags:
      - UserSettings
      x-accepts: application/json
    put:
      operationId: UserSettings_UpdateMySettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserSettingsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateUserSettingsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateUserSettingsVM'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettingsVM'
          description: Succesfully updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
      summary: Update settings of the current user
      tags:
      - UserSettings
      x-content-type: application/json
      x-accepts: application/json
  /api/manage/v1/UserSettings/accept:
    post:
      operationId: UserSettings_AcceptAgreements
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptAgreementsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/AcceptAgreementsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AcceptAgreementsVM'
        description: ""
      responses:
        "204":
          description: No Content
      summary: Use this endpoint to accept current version of service license agreement
      tags:
      - UserSettings
      x-content-type: application/json
      x-accepts: application/json
components:
  schemas:
    AcceptAgreementsVM:
      additionalProperties: false
      example:
        slaAccepted: true
      properties:
        slaAccepted:
          type: boolean
      type: object
    AdminExportFolderCreateVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/AdminFolderCreateVM'
      type: object
    AdminFolderCreateVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/FolderCreateVM'
      discriminator:
        mapping:
          AdminFolderCreateVM: '#/components/schemas/AdminFolderCreateVM'
          AdminExportFolderCreateVM: '#/components/schemas/AdminExportFolderCreateVM'
          AdminReportFolderCreateVM: '#/components/schemas/AdminReportFolderCreateVM'
          AdminTemplateFolderCreateVM: '#/components/schemas/AdminTemplateFolderCreateVM'
        propertyName: $t
      properties:
        parentId:
          minLength: 1
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        ownerId:
          minLength: 1
          pattern: "(^[0-9a-f]{24}$|^([0-9a-f]{8}([-][0-9a-f]{4}){3}[-][0-9a-f]{12})$)"
          type: string
        force:
          type: boolean
        $t:
          type: string
      required:
      - $t
      - ownerId
      - parentId
      type: object
    AdminReportFolderCreateVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/AdminFolderCreateVM'
      type: object
    AdminSubscriptionVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/SubscriptionVM'
      properties:
        defaultPermissions:
          $ref: '#/components/schemas/DefaultPermissionsVM'
        ownerId:
          nullable: true
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
      type: object
    AdminTemplateFolderCreateVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/AdminFolderCreateVM'
      type: object
    ApiKeyVM:
      additionalProperties: false
      example:
        expired: 2000-01-23T04:56:07.000+00:00
        description: description
        value: value
      properties:
        value:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        expired:
          format: date-time
          type: string
      type: object
    ApiKeysVM:
      additionalProperties: false
      example:
        apiKeys:
        - expired: 2000-01-23T04:56:07.000+00:00
          description: description
          value: value
        - expired: 2000-01-23T04:56:07.000+00:00
          description: description
          value: value
        count: 0
      properties:
        apiKeys:
          items:
            $ref: '#/components/schemas/ApiKeyVM'
          nullable: true
          type: array
        count:
          format: int64
          type: integer
      type: object
    AppMixins:
      additionalProperties: false
      example:
        head: head
        body: body
      properties:
        head:
          nullable: true
          type: string
        body:
          nullable: true
          type: string
      type: object
    AuditActionVM:
      additionalProperties: false
      discriminator:
        mapping:
          AuditFilePropertyChangedVM: '#/components/schemas/AuditFilePropertyChangedVM'
          AuditSubscriptionActionVM: '#/components/schemas/AuditSubscriptionActionVM'
          AuditTaskActionVM: '#/components/schemas/AuditTaskActionVM'
        propertyName: $t
      example:
        $t: $t
        creatorUserId: creatorUserId
        name: name
        createdTime: 2000-01-23T04:56:07.000+00:00
        entityId: entityId
        id: id
        subscriptionId: subscriptionId
        type: null
        userId: userId
        adminAction: true
      properties:
        userId:
          nullable: true
          type: string
        entityId:
          nullable: true
          type: string
        subscriptionId:
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/AuditType'
        id:
          nullable: true
          type: string
        createdTime:
          format: date-time
          type: string
        creatorUserId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        adminAction:
          type: boolean
        $t:
          type: string
      required:
      - $t
      type: object
    AuditActionsVM:
      additionalProperties: false
      example:
        take: 6
        hasMore: true
        skip: 0
        items:
        - $t: $t
          creatorUserId: creatorUserId
          name: name
          createdTime: 2000-01-23T04:56:07.000+00:00
          entityId: entityId
          id: id
          subscriptionId: subscriptionId
          type: null
          userId: userId
          adminAction: true
        - $t: $t
          creatorUserId: creatorUserId
          name: name
          createdTime: 2000-01-23T04:56:07.000+00:00
          entityId: entityId
          id: id
          subscriptionId: subscriptionId
          type: null
          userId: userId
          adminAction: true
      properties:
        items:
          items:
            $ref: '#/components/schemas/AuditActionVM'
          nullable: true
          type: array
        hasMore:
          type: boolean
        skip:
          format: int32
          type: integer
        take:
          format: int32
          type: integer
      type: object
    AuditFilePropertyChangedVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/AuditActionVM'
      properties:
        propertyName:
          nullable: true
          type: string
        oldValue:
          nullable: true
        newValue:
          nullable: true
        entityType:
          $ref: '#/components/schemas/EntityType'
      type: object
    AuditSubscriptionActionVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/AuditActionVM'
      properties:
        periodStart:
          format: date-time
          type: string
        periodEnd:
          format: date-time
          type: string
        planId:
          nullable: true
          type: string
      type: object
    AuditTaskActionVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/AuditActionVM'
      properties:
        messageId:
          nullable: true
          type: string
        fileName:
          nullable: true
          type: string
      type: object
    AuditType:
      enum:
      - Task_Created_ExportTemplate
      - Task_Created_ExportReport
      - Task_Created_PrepareTemplate
      - Task_Created_Fetch
      - Task_Created_Email
      - Task_Created_Webhook
      - Task_Deleted_ExportTemplate
      - Task_Deleted_ExportReport
      - Task_Deleted_PrepareTemplate
      - Task_Deleted_Fetch
      - Task_Deleted_Email
      - Task_Deleted_Webhook
      - Task_Updated_ExportTemplate
      - Task_Updated_ExportReport
      - Task_Updated_PrepareTemplate
      - Task_Updated_Fetch
      - Task_Updated_Email
      - Task_Updated_Webhook
      - Task_InQueue_ExportTemplate
      - Task_InQueue_ExportReport
      - Task_InQueue_PrepareTemplate
      - Task_InQueue_Fetch
      - Task_InQueue_Email
      - Task_InQueue_Webhook
      - Task_InProcess_ExportTemplate
      - Task_InProcess_ExportReport
      - Task_InProcess_PrepareTemplate
      - Task_InProcess_Fetch
      - Task_InProcess_Email
      - Task_InProcess_Webhook
      - Task_Success_ExportTemplate
      - Task_Success_ExportReport
      - Task_Success_PrepareTemplate
      - Task_Success_Fetch
      - Task_Success_Email
      - Task_Success_Webhook
      - Task_Failed_ExportTemplate
      - Task_Failed_ExportReport
      - Task_Failed_PrepareTemplate
      - Task_Failed_Fetch
      - Task_Failed_Email
      - Task_Failed_Webhook
      - Task_Created_ThumbnailReport
      - Task_Deleted_ThumbnailReport
      - Task_Updated_ThumbnailReport
      - Task_InQueue_ThumbnailReport
      - Task_InProcess_ThumbnailReport
      - Task_Success_ThumbnailReport
      - Task_Fail_ThumbnailReport
      - Task_Created_ThumbnailTemplate
      - Task_Deleted_ThumbnailTemplate
      - Task_Updated_ThumbnailTemplate
      - Task_InQueue_ThumbnailTemplate
      - Task_InProcess_ThumbnailTemplate
      - Task_Success_ThumbnailTemplate
      - Task_Fail_ThumbnailTemplate
      - Subscription_Renewed
      - Subscription_Created
      - File_Renamed
      - File_Content_Updated
      - File_Deleted
      - File_Moved
      - File_Copied
      - File_Tags_Updated
      - File_Permissions_Updated
      - File_Restored
      - File_MovedToBin
      - File_Updated
      - Task_Created_FTPUpload
      - Task_Deleted_FTPUpload
      - Task_Updated_FTPUpload
      - Task_InQueue_FTPUpload
      - Task_InProcess_FTPUpload
      - Task_Success_FTPUpload
      - Task_Fail_FTPUpload
      - File_Created
      type: string
      x-typeName: FastReport.Cloud.Enums.AuditType
    AuthConfigVM:
      additionalProperties: false
      example:
        useLocal: true
        useOpenId: true
        authority: authority
      properties:
        useLocal:
          type: boolean
        useOpenId:
          type: boolean
        authority:
          nullable: true
          type: string
      type: object
    BreadcrumbsModel:
      additionalProperties: false
      example:
        name: name
        id: id
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    BreadcrumbsVM:
      additionalProperties: false
      example:
        breadcrumbs:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        breadcrumbs:
          items:
            $ref: '#/components/schemas/BreadcrumbsModel'
          nullable: true
          type: array
      type: object
    ClearNotificationsVM:
      additionalProperties: false
      example:
        update: true
      properties:
        update:
          type: boolean
      type: object
    ContactGroupVM:
      additionalProperties: false
      example:
        creatorUserId: creatorUserId
        editedTime: 2000-01-23T04:56:07.000+00:00
        editorUserId: editorUserId
        name: name
        createdTime: 2000-01-23T04:56:07.000+00:00
        id: id
        subscriptionId: subscriptionId
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        subscriptionId:
          nullable: true
          type: string
        createdTime:
          format: date-time
          type: string
        creatorUserId:
          nullable: true
          type: string
        editedTime:
          format: date-time
          type: string
        editorUserId:
          nullable: true
          type: string
      type: object
    ContactGroupsVM:
      additionalProperties: false
      example:
        take: 6
        count: 1
        groups:
        - creatorUserId: creatorUserId
          editedTime: 2000-01-23T04:56:07.000+00:00
          editorUserId: editorUserId
          name: name
          createdTime: 2000-01-23T04:56:07.000+00:00
          id: id
          subscriptionId: subscriptionId
        - creatorUserId: creatorUserId
          editedTime: 2000-01-23T04:56:07.000+00:00
          editorUserId: editorUserId
          name: name
          createdTime: 2000-01-23T04:56:07.000+00:00
          id: id
          subscriptionId: subscriptionId
        skip: 0
      properties:
        groups:
          items:
            $ref: '#/components/schemas/ContactGroupVM'
          nullable: true
          type: array
        skip:
          format: int32
          type: integer
        take:
          format: int32
          type: integer
        count:
          format: int64
          type: integer
      type: object
    ContactVM:
      additionalProperties: false
      example:
        creatorUserId: creatorUserId
        editedTime: 2000-01-23T04:56:07.000+00:00
        editorUserId: editorUserId
        name: name
        groups:
        - groups
        - groups
        createdTime: 2000-01-23T04:56:07.000+00:00
        id: id
        subscriptionId: subscriptionId
        email: email
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        groups:
          items:
            type: string
          nullable: true
          type: array
        subscriptionId:
          nullable: true
          type: string
        createdTime:
          format: date-time
          type: string
        creatorUserId:
          nullable: true
          type: string
        editedTime:
          format: date-time
          type: string
        editorUserId:
          nullable: true
          type: string
      type: object
    ContactsVM:
      additionalProperties: false
      example:
        take: 6
        count: 1
        skip: 0
        contacts:
        - creatorUserId: creatorUserId
          editedTime: 2000-01-23T04:56:07.000+00:00
          editorUserId: editorUserId
          name: name
          groups:
          - groups
          - groups
          createdTime: 2000-01-23T04:56:07.000+00:00
          id: id
          subscriptionId: subscriptionId
          email: email
        - creatorUserId: creatorUserId
          editedTime: 2000-01-23T04:56:07.000+00:00
          editorUserId: editorUserId
          name: name
          groups:
          - groups
          - groups
          createdTime: 2000-01-23T04:56:07.000+00:00
          id: id
          subscriptionId: subscriptionId
          email: email
      properties:
        contacts:
          items:
            $ref: '#/components/schemas/ContactVM'
          nullable: true
          type: array
        skip:
          format: int32
          type: integer
        take:
          format: int32
          type: integer
        count:
          format: int64
          type: integer
      type: object
    CountVM:
      additionalProperties: false
      example:
        count: 0
      properties:
        count:
          format: int64
          type: integer
      type: object
    CreateApiKeyVM:
      additionalProperties: false
      example:
        expired: 2000-01-23T04:56:07.000+00:00
        description: description
      properties:
        description:
          maxLength: 300
          minLength: 0
          nullable: true
          type: string
        expired:
          format: date-time
          type: string
      required:
      - expired
      type: object
    CreateContactGroupVM:
      additionalProperties: false
      example:
        name: name
        subscriptionId: subscriptionId
      properties:
        name:
          minLength: 1
          type: string
        subscriptionId:
          nullable: true
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
      required:
      - name
      type: object
    CreateContactVM:
      additionalProperties: false
      example:
        name: name
        groups:
        - groups
        - groups
        - groups
        - groups
        - groups
        subscriptionId: subscriptionId
        email: email
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        groups:
          items:
            type: string
          maxItems: 10
          nullable: true
          type: array
        subscriptionId:
          nullable: true
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
      type: object
    CreateDataSourceAdminVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/CreateDataSourceVM'
      properties:
        ownerId:
          minLength: 1
          pattern: "(^[0-9a-f]{24}$|^([0-9a-f]{8}([-][0-9a-f]{4}){3}[-][0-9a-f]{12})$)"
          type: string
      required:
      - ownerId
      type: object
    CreateDataSourceVM:
      additionalProperties: false
      discriminator:
        mapping:
          CreateDataSourceAdminVM: '#/components/schemas/CreateDataSourceAdminVM'
          CreateDataSourceVM: '#/components/schemas/CreateDataSourceVM'
        propertyName: $t
      example:
        connectionString: connectionString
        $t: $t
        name: name
        subscriptionId: subscriptionId
        connectionType: null
      properties:
        name:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        connectionString:
          maxLength: 5000
          minLength: 0
          type: string
        subscriptionId:
          minLength: 1
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        connectionType:
          $ref: '#/components/schemas/DataSourceConnectionType'
        $t:
          type: string
      required:
      - $t
      - connectionString
      - subscriptionId
      type: object
    CreateEmailTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/CreateTransportTaskBaseVM'
      properties:
        body:
          maxLength: 384000
          minLength: 1
          nullable: true
          type: string
        enableSsl:
          type: boolean
        from:
          format: email
          nullable: true
          type: string
        isBodyHtml:
          type: boolean
        password:
          maxLength: 300
          minLength: 5
          nullable: true
          type: string
        port:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        server:
          maxLength: 5000
          minLength: 1
          nullable: true
          type: string
        subject:
          maxLength: 1000
          minLength: 1
          nullable: true
          type: string
        to:
          items:
            type: string
          maxItems: 200
          nullable: true
          type: array
        username:
          maxLength: 100
          minLength: 1
          nullable: true
          type: string
      type: object
    CreateExportReportTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/CreateTransformTaskBaseVM'
      discriminator:
        mapping:
          CreateExportReportTaskVM: '#/components/schemas/CreateExportReportTaskVM'
          CreateExportTemplateTaskVM: '#/components/schemas/CreateExportTemplateTaskVM'
        propertyName: $t
      properties:
        exportParameters:
          additionalProperties:
            nullable: true
            type: string
          maxLength: 200
          nullable: true
          type: object
        format:
          $ref: '#/components/schemas/ExportFormat'
        pagesCount:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        $t:
          type: string
      required:
      - $t
      type: object
    CreateExportTemplateTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/CreateExportReportTaskVM'
      properties:
        reportParameters:
          additionalProperties:
            nullable: true
            type: string
          maxLength: 200
          nullable: true
          type: object
      type: object
    CreateFTPUploadTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/CreateTransportTaskBaseVM'
      properties:
        archive:
          type: boolean
        archiveName:
          nullable: true
          type: string
        destinationFolder:
          nullable: true
          type: string
        ftpHost:
          maxLength: 400
          minLength: 1
          nullable: true
          type: string
        ftpPassword:
          maxLength: 300
          minLength: 4
          nullable: true
          type: string
        ftpPort:
          format: int32
          type: integer
        ftpUsername:
          maxLength: 300
          minLength: 1
          nullable: true
          type: string
        useSFTP:
          type: boolean
      type: object
    CreateFetchTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/CreateTaskBaseVM'
      properties:
        dataSourceId:
          nullable: true
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
      type: object
    CreateGroupAdminVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/CreateGroupVM'
      properties:
        ownerId:
          nullable: true
          type: string
      type: object
    CreateGroupVM:
      additionalProperties: false
      discriminator:
        mapping:
          CreateGroupAdminVM: '#/components/schemas/CreateGroupAdminVM'
          CreateGroupVM: '#/components/schemas/CreateGroupVM'
        propertyName: $t
      example:
        $t: $t
        name: name
        subscriptionId: subscriptionId
      properties:
        name:
          maxLength: 50
          minLength: 1
          type: string
        subscriptionId:
          nullable: true
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        $t:
          type: string
      required:
      - $t
      - name
      type: object
    CreatePrepareTemplateTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/CreateTransformTaskBaseVM'
      properties:
        exports:
          items:
            $ref: '#/components/schemas/CreateExportReportTaskVM'
          maxItems: 10
          nullable: true
          type: array
        pagesCount:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        reportParameters:
          additionalProperties:
            nullable: true
            type: string
          maxLength: 200
          nullable: true
          type: object
      type: object
    CreateSubscriptionInviteVM:
      additionalProperties: false
      example:
        durable: true
        expiredDate: 2000-01-23T04:56:07.000+00:00
        usages: 171976544
      properties:
        usages:
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        durable:
          type: boolean
        expiredDate:
          format: date-time
          type: string
      type: object
    CreateTaskBaseVM:
      additionalProperties: false
      discriminator:
        mapping:
          CreateEmailTaskVM: '#/components/schemas/CreateEmailTaskVM'
          CreateWebhookTaskVM: '#/components/schemas/CreateWebhookTaskVM'
          CreateExportReportTaskVM: '#/components/schemas/CreateExportReportTaskVM'
          CreateExportTemplateTaskVM: '#/components/schemas/CreateExportTemplateTaskVM'
          CreatePrepareTemplateTaskVM: '#/components/schemas/CreatePrepareTemplateTaskVM'
          CreateFetchTaskVM: '#/components/schemas/CreateFetchTaskVM'
          CreateThumbnailReportTaskVM: '#/components/schemas/CreateThumbnailReportTaskVM'
          CreateThumbnailTemplateTaskVM: '#/components/schemas/CreateThumbnailTemplateTaskVM'
          CreateFTPUploadTaskVM: '#/components/schemas/CreateFTPUploadTaskVM'
        propertyName: $t
      example:
        cronExpression: cronExpression
        $t: $t
        delayedRunTime: 2000-01-23T04:56:07.000+00:00
        name: name
        subscriptionId: subscriptionId
      properties:
        cronExpression:
          nullable: true
          type: string
        delayedRunTime:
          format: date-time
          nullable: true
          type: string
        name:
          maxLength: 50
          minLength: 1
          nullable: true
          type: string
        subscriptionId:
          nullable: true
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
        $t:
          type: string
      required:
      - $t
      type: object
    CreateThumbnailReportTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/CreateTaskBaseVM'
      properties:
        reportId:
          nullable: true
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
      type: object
    CreateThumbnailTemplateTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/CreateTaskBaseVM'
      properties:
        templateId:
          nullable: true
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
      type: object
    CreateTransformTaskBaseVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/CreateTaskBaseVM'
      discriminator:
        mapping:
          CreateExportReportTaskVM: '#/components/schemas/CreateExportReportTaskVM'
          CreateExportTemplateTaskVM: '#/components/schemas/CreateExportTemplateTaskVM'
          CreatePrepareTemplateTaskVM: '#/components/schemas/CreatePrepareTemplateTaskVM'
        propertyName: $t
      properties:
        inputFile:
          $ref: '#/components/schemas/InputFileVM'
        locale:
          nullable: true
          pattern: "^[a-zA-Z]{2,4}(-[a-zA-Z]{2,4}){0,2}$"
          type: string
        outputFile:
          $ref: '#/components/schemas/OutputFileVM'
        transports:
          items:
            $ref: '#/components/schemas/CreateTransportTaskBaseVM'
          maxItems: 10
          nullable: true
          type: array
        $t:
          type: string
      required:
      - $t
      type: object
    CreateTransportTaskBaseVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/CreateTaskBaseVM'
      discriminator:
        mapping:
          CreateEmailTaskVM: '#/components/schemas/CreateEmailTaskVM'
          CreateWebhookTaskVM: '#/components/schemas/CreateWebhookTaskVM'
          CreateFTPUploadTaskVM: '#/components/schemas/CreateFTPUploadTaskVM'
        propertyName: $t
      properties:
        inputFile:
          $ref: '#/components/schemas/InputFileVM'
        $t:
          type: string
      required:
      - $t
      type: object
    CreateWebhookTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/CreateTransportTaskBaseVM'
      properties:
        headers:
          additionalProperties:
            nullable: true
            type: string
          maxLength: 100
          nullable: true
          type: object
        url:
          format: uri
          maxLength: 5000
          minLength: 1
          nullable: true
          type: string
      type: object
    DataSourceAdministrate:
      enum:
      - 0
      - 1
      - 2
      - 4
      - 8
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - Owner
      - Group
      - Other
      - Anon
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.DataSourcesPermissionsEnums.DataSourceAdministrate
    DataSourceConnectionType:
      enum:
      - JSON
      - MSSQL
      - CSV
      - XML
      - MySQL
      - Postgres
      - OracleDB
      - FirebirdDB
      - MongoDB
      - ClickHouse
      type: string
      x-typeName: FastReport.Cloud.Enums.DataSourceConnectionType
    DataSourceCreate:
      enum:
      - 0
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.DataSourcesPermissionsEnums.DataSourceCreate
    DataSourceCreateDataSourceGetDataSourceUpdateDataSourceDeleteDataSourceExecuteDataSourceAdministratePermission:
      additionalProperties: false
      properties:
        create:
          $ref: '#/components/schemas/DataSourceCreate'
        delete:
          $ref: '#/components/schemas/DataSourceDelete'
        execute:
          $ref: '#/components/schemas/DataSourceExecute'
        get:
          $ref: '#/components/schemas/DataSourceGet'
        update:
          $ref: '#/components/schemas/DataSourceUpdate'
        administrate:
          $ref: '#/components/schemas/DataSourceAdministrate'
      type: object
    DataSourceDelete:
      enum:
      - 0
      - 1
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - Entity
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.DataSourcesPermissionsEnums.DataSourceDelete
    DataSourceExecute:
      enum:
      - 0
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.DataSourcesPermissionsEnums.DataSourceExecute
    DataSourceGet:
      enum:
      - 0
      - 1
      - 2
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - Entity
      - Permission
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.DataSourcesPermissionsEnums.DataSourceGet
    DataSourcePermission:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/DataSourceCreateDataSourceGetDataSourceUpdateDataSourceDeleteDataSourceExecuteDataSourceAdministratePermission'
      example:
        get: null
        create: null
        update: null
        administrate: null
        delete: null
        execute: null
      type: object
    ? DataSourcePermissionDataSourceCreateDataSourceGetDataSourceUpdateDataSourceDeleteDataSourceExecuteDataSourceAdministratePermissions
    : additionalProperties: false
      properties:
        ownerId:
          nullable: true
          pattern: "(^[0-9a-f]{24}$|^([0-9a-f]{8}([-][0-9a-f]{4}){3}[-][0-9a-f]{12})$)"
          type: string
        owner:
          $ref: '#/components/schemas/DataSourcePermission'
        groups:
          additionalProperties:
            $ref: '#/components/schemas/DataSourcePermission'
          maxLength: 20
          nullable: true
          type: object
        other:
          $ref: '#/components/schemas/DataSourcePermission'
        anon:
          $ref: '#/components/schemas/DataSourcePermission'
      type: object
    DataSourcePermissions:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/DataSourcePermissionDataSourceCreateDataSourceGetDataSourceUpdateDataSourceDeleteDataSourceExecuteDataSourceAdministratePermissions'
      example:
        owner:
          get: null
          create: null
          update: null
          administrate: null
          delete: null
          execute: null
        anon:
          get: null
          create: null
          update: null
          administrate: null
          delete: null
          execute: null
        other:
          get: null
          create: null
          update: null
          administrate: null
          delete: null
          execute: null
        groups:
          key:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
        ownerId: ownerId
      type: object
    DataSourcePermissionsVM:
      additionalProperties: false
      example:
        permissions:
          owner:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          anon:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          other:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          groups:
            key:
              get: null
              create: null
              update: null
              administrate: null
              delete: null
              execute: null
          ownerId: ownerId
      properties:
        permissions:
          $ref: '#/components/schemas/DataSourcePermissions'
      type: object
    DataSourceSorting:
      enum:
      - None
      - CreatedTime
      - EditedTime
      - Name
      type: string
      x-typeName: FastReport.Cloud.Enums.Sorting.DataSourceSorting
    DataSourceStatus:
      enum:
      - Connected
      - Error
      - Updating
      type: string
      x-typeName: FastReport.Cloud.Enums.DataSourceStatus
    DataSourceUpdate:
      enum:
      - 0
      - 1
      - 2
      - 4
      - 8
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - Name
      - SubscriptionId
      - DataStructure
      - ConnectionString
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.DataSourcesPermissionsEnums.DataSourceUpdate
    DataSourceVM:
      additionalProperties: false
      example:
        connectionString: connectionString
        creatorUserId: creatorUserId
        editedTime: 2000-01-23T04:56:07.000+00:00
        editorUserId: editorUserId
        name: name
        errorMessage: errorMessage
        createdTime: 2000-01-23T04:56:07.000+00:00
        id: id
        dataStructure: dataStructure
        subscriptionId: subscriptionId
        connectionType: null
        status: null
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        connectionType:
          $ref: '#/components/schemas/DataSourceConnectionType'
        connectionString:
          nullable: true
          type: string
        dataStructure:
          nullable: true
          type: string
        subscriptionId:
          nullable: true
          type: string
        editedTime:
          format: date-time
          type: string
        editorUserId:
          nullable: true
          type: string
        createdTime:
          format: date-time
          type: string
        creatorUserId:
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/DataSourceStatus'
        errorMessage:
          nullable: true
          type: string
      type: object
    DataSourcesVM:
      additionalProperties: false
      example:
        take: 1
        count: 0
        skip: 6
        dataSources:
        - connectionString: connectionString
          creatorUserId: creatorUserId
          editedTime: 2000-01-23T04:56:07.000+00:00
          editorUserId: editorUserId
          name: name
          errorMessage: errorMessage
          createdTime: 2000-01-23T04:56:07.000+00:00
          id: id
          dataStructure: dataStructure
          subscriptionId: subscriptionId
          connectionType: null
          status: null
        - connectionString: connectionString
          creatorUserId: creatorUserId
          editedTime: 2000-01-23T04:56:07.000+00:00
          editorUserId: editorUserId
          name: name
          errorMessage: errorMessage
          createdTime: 2000-01-23T04:56:07.000+00:00
          id: id
          dataStructure: dataStructure
          subscriptionId: subscriptionId
          connectionType: null
          status: null
      properties:
        dataSources:
          items:
            $ref: '#/components/schemas/DataSourceVM'
          nullable: true
          type: array
        count:
          format: int64
          type: integer
        skip:
          format: int32
          type: integer
        take:
          format: int32
          type: integer
      type: object
    DefaultPermissionsVM:
      additionalProperties: false
      example:
        taskPermissions:
          owner:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          anon:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          other:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          groups:
            key:
              get: null
              create: null
              update: null
              administrate: null
              delete: null
              execute: null
          ownerId: ownerId
        groupPermissions:
          owner:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          anon:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          other:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          groups:
            key:
              get: null
              create: null
              update: null
              administrate: null
              delete: null
              execute: null
          ownerId: ownerId
        filePermissions:
          owner:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          anon:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          other:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          groups:
            key:
              get: null
              create: null
              update: null
              administrate: null
              delete: null
              execute: null
          ownerId: ownerId
        dataSourcePermissions:
          owner:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          anon:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          other:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          groups:
            key:
              get: null
              create: null
              update: null
              administrate: null
              delete: null
              execute: null
          ownerId: ownerId
      properties:
        filePermissions:
          $ref: '#/components/schemas/FilePermissions'
        dataSourcePermissions:
          $ref: '#/components/schemas/DataSourcePermissions'
        groupPermissions:
          $ref: '#/components/schemas/GroupPermissions'
        taskPermissions:
          $ref: '#/components/schemas/TaskPermissions'
      type: object
    DeleteApiKeyVM:
      additionalProperties: false
      example:
        apiKey: apiKey
      properties:
        apiKey:
          minLength: 1
          type: string
      required:
      - apiKey
      type: object
    EmailTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/TransportTaskBaseVM'
      properties:
        body:
          maxLength: 384000
          minLength: 1
          nullable: true
          type: string
        enableSsl:
          type: boolean
        from:
          format: email
          nullable: true
          type: string
        isBodyHtml:
          type: boolean
        port:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        server:
          maxLength: 5000
          minLength: 1
          nullable: true
          type: string
        subject:
          maxLength: 1000
          minLength: 1
          nullable: true
          type: string
        to:
          format: email
          items:
            type: string
          maxItems: 200
          nullable: true
          type: array
        username:
          maxLength: 100
          minLength: 1
          nullable: true
          type: string
      type: object
    EntityType:
      enum:
      - None
      - Template
      - TemplateFolder
      - Report
      - ReportFolder
      - Export
      - ExportFolder
      type: string
      x-typeName: FastReport.Cloud.Base.Enums.EntityType
    ExportCreateAdminVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/ExportCreateVM'
      properties:
        ownerId:
          minLength: 1
          pattern: "(^[0-9a-f]{24}$|^([0-9a-f]{8}([-][0-9a-f]{4}){3}[-][0-9a-f]{12})$)"
          type: string
        parentId:
          minLength: 1
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
      required:
      - ownerId
      - parentId
      type: object
    ExportCreateVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/FileCreateVM'
      discriminator:
        mapping:
          ExportCreateVM: '#/components/schemas/ExportCreateVM'
          ExportCreateAdminVM: '#/components/schemas/ExportCreateAdminVM'
        propertyName: $t
      properties:
        templateId:
          nullable: true
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
        reportId:
          nullable: true
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
        $t:
          type: string
      required:
      - $t
      type: object
    ExportFolderCreateVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/FolderCreateVM'
      example:
        $t: $t
        name: name
        icon: icon
        tags:
        - tags
        - tags
        - tags
      type: object
    ExportFormat:
      enum:
      - Pdf
      - Html
      - Mht
      - Image
      - Biff8
      - Csv
      - Dbf
      - Json
      - LaTeX
      - Odt
      - Ods
      - Docx
      - Pptx
      - Xlsx
      - Xps
      - Ppml
      - PS
      - Richtext
      - Svg
      - Text
      - Xaml
      - Xml
      - Zpl
      type: string
      x-typeName: FastReport.Cloud.Enums.ExportFormat
    ExportReportTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/TransformTaskBaseVM'
      discriminator:
        mapping:
          ExportReportTaskVM: '#/components/schemas/ExportReportTaskVM'
          ExportTemplateTaskVM: '#/components/schemas/ExportTemplateTaskVM'
        propertyName: $t
      properties:
        exportParameters:
          additionalProperties:
            nullable: true
            type: string
          maxLength: 200
          nullable: true
          type: object
        format:
          $ref: '#/components/schemas/ExportFormat'
        pagesCount:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        $t:
          type: string
      required:
      - $t
      type: object
    ExportReportVM:
      additionalProperties: false
      example:
        fileName: fileName
        pagesCount: 171976544
        format: null
        exportParameters:
          key: exportParameters
        locale: locale
        folderId: folderId
      properties:
        fileName:
          maxLength: 250
          minLength: 0
          nullable: true
          type: string
        folderId:
          nullable: true
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
        locale:
          nullable: true
          pattern: "^[a-zA-Z]{2,4}(-[a-zA-Z]{2,4}){0,2}$"
          type: string
        pagesCount:
          format: int32
          maximum: 2147483647
          minimum: 0
          nullable: true
          type: integer
        format:
          $ref: '#/components/schemas/ExportFormat'
        exportParameters:
          additionalProperties:
            nullable: true
            type: string
          maxLength: 200
          nullable: true
          type: object
      type: object
    ExportTemplateTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/ExportReportTaskVM'
      properties:
        reportParameters:
          additionalProperties:
            nullable: true
            type: string
          maxLength: 200
          nullable: true
          type: object
      type: object
    ExportTemplateVM:
      additionalProperties: false
      example:
        fileName: fileName
        pagesCount: 171976544
        format: null
        exportParameters:
          key: exportParameters
        reportParameters:
          key: reportParameters
        locale: locale
        folderId: folderId
      properties:
        fileName:
          maxLength: 250
          minLength: 0
          nullable: true
          type: string
        folderId:
          nullable: true
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
        locale:
          nullable: true
          pattern: "^[a-zA-Z]{2,4}(-[a-zA-Z]{2,4}){0,2}$"
          type: string
        pagesCount:
          format: int32
          maximum: 2147483647
          minimum: 0
          nullable: true
          type: integer
        format:
          $ref: '#/components/schemas/ExportFormat'
        exportParameters:
          additionalProperties:
            nullable: true
            type: string
          maxLength: 200
          nullable: true
          type: object
        reportParameters:
          additionalProperties:
            nullable: true
            type: string
          maxLength: 200
          nullable: true
          type: object
      type: object
    ExportVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/FileVM'
      example:
        reportId: reportId
        format: null
        templateId: templateId
      properties:
        format:
          $ref: '#/components/schemas/ExportFormat'
        reportId:
          nullable: true
          type: string
        templateId:
          nullable: true
          type: string
      type: object
    ExportVMFilesVMBase:
      additionalProperties: false
      properties:
        files:
          items:
            $ref: '#/components/schemas/ExportVM'
          nullable: true
          type: array
        count:
          format: int64
          type: integer
        skip:
          format: int32
          type: integer
        take:
          format: int32
          type: integer
      type: object
    ExportsVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/ExportVMFilesVMBase'
      example:
        take: 1
        count: 0
        files:
        - reportId: reportId
          format: null
          templateId: templateId
        - reportId: reportId
          format: null
          templateId: templateId
        skip: 6
      type: object
    FTPUploadTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/TransportTaskBaseVM'
      properties:
        archive:
          type: boolean
        archiveName:
          nullable: true
          type: string
        destinationFolder:
          nullable: true
          type: string
        ftpHost:
          maxLength: 300
          minLength: 1
          nullable: true
          type: string
        ftpPort:
          format: int32
          type: integer
        ftpUsername:
          maxLength: 300
          minLength: 1
          nullable: true
          type: string
        useSFTP:
          type: boolean
      type: object
    FetchTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/TaskBaseVM'
      properties:
        dataSourceId:
          nullable: true
          type: string
      type: object
    FileAdministrate:
      enum:
      - 0
      - 1
      - 2
      - 4
      - 8
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - Owner
      - Group
      - Other
      - Anon
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.FilePermissionsEnums.FileAdministrate
    FileCreate:
      enum:
      - 0
      - 1
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - Entity
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.FilePermissionsEnums.FileCreate
    FileCreateFileGetFileUpdateFileDeleteFileExecuteFileAdministratePermission:
      additionalProperties: false
      properties:
        create:
          $ref: '#/components/schemas/FileCreate'
        delete:
          $ref: '#/components/schemas/FileDelete'
        execute:
          $ref: '#/components/schemas/FileExecute'
        get:
          $ref: '#/components/schemas/FileGet'
        update:
          $ref: '#/components/schemas/FileUpdate'
        administrate:
          $ref: '#/components/schemas/FileAdministrate'
      type: object
    FileCreateVM:
      additionalProperties: false
      discriminator:
        mapping:
          ExportCreateVM: '#/components/schemas/ExportCreateVM'
          FileCreateVM: '#/components/schemas/FileCreateVM'
          ReportCreateVM: '#/components/schemas/ReportCreateVM'
          TemplateCreateVM: '#/components/schemas/TemplateCreateVM'
          TemplateCreateAdminVM: '#/components/schemas/TemplateCreateAdminVM'
          ReportCreateAdminVM: '#/components/schemas/ReportCreateAdminVM'
          ExportCreateAdminVM: '#/components/schemas/ExportCreateAdminVM'
        propertyName: $t
      properties:
        name:
          maxLength: 250
          minLength: 0
          nullable: true
          type: string
        tags:
          items:
            type: string
          maxItems: 3
          maxLength: 50
          minLength: 1
          nullable: true
          type: array
        icon:
          format: byte
          maxLength: 65536
          nullable: true
          type: string
        content:
          format: byte
          maxLength: 100000000
          nullable: true
          type: string
        $t:
          type: string
      required:
      - $t
      type: object
    FileDelete:
      enum:
      - 0
      - 1
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - Entity
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.FilePermissionsEnums.FileDelete
    FileExecute:
      enum:
      - 0
      - 1
      - 2
      - 4
      - 8
      - 16
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - Export
      - Prepare
      - Design
      - Thumbnail
      - Preview
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.FilePermissionsEnums.FileExecute
    FileGet:
      enum:
      - 0
      - 1
      - 2
      - 4
      - 8
      - 16
      - 32
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - Entity
      - Count
      - Download
      - Permission
      - Thumbnail
      - History
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.FilePermissionsEnums.FileGet
    FileIconVM:
      additionalProperties: false
      example:
        icon: icon
      properties:
        icon:
          format: byte
          nullable: true
          type: string
      type: object
    FileKind:
      enum:
      - Template
      - Report
      - Export
      type: string
      x-typeName: FastReport.Cloud.Models.Messages.FileKind
    FilePermission:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/FileCreateFileGetFileUpdateFileDeleteFileExecuteFileAdministratePermission'
      example:
        get: null
        create: null
        update: null
        administrate: null
        delete: null
        execute: null
      type: object
    FilePermissionFileCreateFileGetFileUpdateFileDeleteFileExecuteFileAdministratePermissions:
      additionalProperties: false
      properties:
        ownerId:
          nullable: true
          pattern: "(^[0-9a-f]{24}$|^([0-9a-f]{8}([-][0-9a-f]{4}){3}[-][0-9a-f]{12})$)"
          type: string
        owner:
          $ref: '#/components/schemas/FilePermission'
        groups:
          additionalProperties:
            $ref: '#/components/schemas/FilePermission'
          maxLength: 20
          nullable: true
          type: object
        other:
          $ref: '#/components/schemas/FilePermission'
        anon:
          $ref: '#/components/schemas/FilePermission'
      type: object
    FilePermissions:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/FilePermissionFileCreateFileGetFileUpdateFileDeleteFileExecuteFileAdministratePermissions'
      example:
        owner:
          get: null
          create: null
          update: null
          administrate: null
          delete: null
          execute: null
        anon:
          get: null
          create: null
          update: null
          administrate: null
          delete: null
          execute: null
        other:
          get: null
          create: null
          update: null
          administrate: null
          delete: null
          execute: null
        groups:
          key:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
        ownerId: ownerId
      type: object
    FilePermissionsVM:
      additionalProperties: false
      example:
        permissions:
          owner:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          anon:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          other:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          groups:
            key:
              get: null
              create: null
              update: null
              administrate: null
              delete: null
              execute: null
          ownerId: ownerId
      properties:
        permissions:
          $ref: '#/components/schemas/FilePermissions'
      type: object
    FileRenameVM:
      additionalProperties: false
      example:
        name: name
      properties:
        name:
          maxLength: 50
          minLength: 1
          nullable: true
          type: string
      type: object
    FileSorting:
      enum:
      - None
      - CreatedTime
      - EditedTime
      - Size
      - Name
      type: string
      x-typeName: FastReport.Cloud.Enums.Sorting.FileSorting
    FileStatus:
      enum:
      - None
      - InQueue
      - InProcess
      - Success
      - Failed
      type: string
      x-typeName: FastReport.Cloud.Enums.FileStatus
    FileStatusReason:
      enum:
      - None
      - AllRight
      - Hang
      - Error
      - NotFound
      - NotEnoughSpace
      - ExportStarted
      - PreparationStarted
      - CrashLoop
      type: string
      x-typeName: FastReport.Cloud.Enums.FileStatusReason
    FileTagsUpdateVM:
      additionalProperties: false
      example:
        tags:
        - tags
        - tags
        - tags
      properties:
        tags:
          items:
            type: string
          maxItems: 3
          maxLength: 50
          minLength: 1
          nullable: true
          type: array
      type: object
    FileType:
      enum:
      - File
      - Folder
      type: string
      x-typeName: FastReport.Cloud.ViewModels.Files.FileType
    FileUpdate:
      enum:
      - 0
      - 1
      - 2
      - 4
      - 8
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - Place
      - Name
      - Icon
      - Tags
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.FilePermissionsEnums.FileUpdate
    FileVM:
      additionalProperties: false
      discriminator:
        mapping:
          ExportVM: '#/components/schemas/ExportVM'
          FileVM: '#/components/schemas/FileVM'
          ReportVM: '#/components/schemas/ReportVM'
          TemplateVM: '#/components/schemas/TemplateVM'
        propertyName: $t
      example:
        creatorUserId: creatorUserId
        icon: icon
        errorMessage: errorMessage
        type: null
        parentId: parentId
        tags:
        - tags
        - tags
        $t: $t
        editedTime: 2000-01-23T04:56:07.000+00:00
        statusReason: null
        size: 0
        isDeleted: true
        editorUserId: editorUserId
        name: name
        createdTime: 2000-01-23T04:56:07.000+00:00
        id: id
        subscriptionId: subscriptionId
        status: null
      properties:
        id:
          nullable: true
          type: string
        createdTime:
          format: date-time
          type: string
        creatorUserId:
          nullable: true
          type: string
        editedTime:
          format: date-time
          type: string
        editorUserId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        parentId:
          nullable: true
          type: string
        tags:
          items:
            type: string
          nullable: true
          type: array
        icon:
          format: byte
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/FileType'
        size:
          format: int64
          type: integer
        subscriptionId:
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/FileStatus'
        statusReason:
          $ref: '#/components/schemas/FileStatusReason'
        errorMessage:
          nullable: true
          type: string
        isDeleted:
          type: boolean
        $t:
          type: string
      required:
      - $t
      type: object
    FileVMFilesVMBase:
      additionalProperties: false
      properties:
        files:
          items:
            $ref: '#/components/schemas/FileVM'
          nullable: true
          type: array
        count:
          format: int64
          type: integer
        skip:
          format: int32
          type: integer
        take:
          format: int32
          type: integer
      type: object
    FilesVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/FileVMFilesVMBase'
      example:
        take: 5
        count: 6
        files:
        - creatorUserId: creatorUserId
          icon: icon
          errorMessage: errorMessage
          type: null
          parentId: parentId
          tags:
          - tags
          - tags
          $t: $t
          editedTime: 2000-01-23T04:56:07.000+00:00
          statusReason: null
          size: 0
          isDeleted: true
          editorUserId: editorUserId
          name: name
          createdTime: 2000-01-23T04:56:07.000+00:00
          id: id
          subscriptionId: subscriptionId
          status: null
        - creatorUserId: creatorUserId
          icon: icon
          errorMessage: errorMessage
          type: null
          parentId: parentId
          tags:
          - tags
          - tags
          $t: $t
          editedTime: 2000-01-23T04:56:07.000+00:00
          statusReason: null
          size: 0
          isDeleted: true
          editorUserId: editorUserId
          name: name
          createdTime: 2000-01-23T04:56:07.000+00:00
          id: id
          subscriptionId: subscriptionId
          status: null
        skip: 1
      type: object
    FolderCreateVM:
      additionalProperties: false
      discriminator:
        mapping:
          AdminFolderCreateVM: '#/components/schemas/AdminFolderCreateVM'
          ExportFolderCreateVM: '#/components/schemas/ExportFolderCreateVM'
          FolderCreateVM: '#/components/schemas/FolderCreateVM'
          ReportFolderCreateVM: '#/components/schemas/ReportFolderCreateVM'
          TemplateFolderCreateVM: '#/components/schemas/TemplateFolderCreateVM'
          AdminExportFolderCreateVM: '#/components/schemas/AdminExportFolderCreateVM'
          AdminReportFolderCreateVM: '#/components/schemas/AdminReportFolderCreateVM'
          AdminTemplateFolderCreateVM: '#/components/schemas/AdminTemplateFolderCreateVM'
        propertyName: $t
      properties:
        name:
          maxLength: 250
          minLength: 1
          nullable: true
          type: string
        tags:
          items:
            type: string
          maxItems: 3
          maxLength: 50
          minLength: 1
          nullable: true
          type: array
        icon:
          format: byte
          maxLength: 65536
          nullable: true
          type: string
        $t:
          type: string
      required:
      - $t
      type: object
    FolderIconVM:
      additionalProperties: false
      example:
        icon: icon
      properties:
        icon:
          format: byte
          maxLength: 65536
          type: string
      required:
      - icon
      type: object
    FolderRenameVM:
      additionalProperties: false
      example:
        name: name
      properties:
        name:
          maxLength: 250
          minLength: 1
          type: string
      required:
      - name
      type: object
    FolderSizeVM:
      additionalProperties: false
      example:
        documentsCount: 1
        size: 0
        realSize: 6
      properties:
        size:
          format: int64
          type: integer
        realSize:
          format: int64
          type: integer
        documentsCount:
          format: int64
          type: integer
      type: object
    FolderTagsUpdateVM:
      additionalProperties: false
      example:
        tags:
        - tags
        - tags
        - tags
      properties:
        tags:
          items:
            type: string
          maxItems: 3
          maxLength: 50
          minLength: 1
          nullable: true
          type: array
      type: object
    FrontendApp:
      additionalProperties: false
      example:
        mixins:
          head: head
          body: body
      properties:
        mixins:
          $ref: '#/components/schemas/AppMixins'
      type: object
    GroupAdministrate:
      enum:
      - 0
      - 1
      - 2
      - 4
      - 8
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - Owner
      - Group
      - Other
      - Anon
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.GroupPermissionsEnums.GroupAdministrate
    GroupCreate:
      enum:
      - 0
      - 1
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - User
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.GroupPermissionsEnums.GroupCreate
    GroupCreateGroupGetGroupUpdateGroupDeleteGroupExecuteGroupAdministratePermission:
      additionalProperties: false
      properties:
        create:
          $ref: '#/components/schemas/GroupCreate'
        delete:
          $ref: '#/components/schemas/GroupDelete'
        execute:
          $ref: '#/components/schemas/GroupExecute'
        get:
          $ref: '#/components/schemas/GroupGet'
        update:
          $ref: '#/components/schemas/GroupUpdate'
        administrate:
          $ref: '#/components/schemas/GroupAdministrate'
      type: object
    GroupDelete:
      enum:
      - 0
      - 1
      - 2
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - Entity
      - User
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.GroupPermissionsEnums.GroupDelete
    GroupExecute:
      enum:
      - 0
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.GroupPermissionsEnums.GroupExecute
    GroupGet:
      enum:
      - 0
      - 1
      - 2
      - 4
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - Entity
      - User
      - Permission
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.GroupPermissionsEnums.GroupGet
    GroupPermission:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/GroupCreateGroupGetGroupUpdateGroupDeleteGroupExecuteGroupAdministratePermission'
      example:
        get: null
        create: null
        update: null
        administrate: null
        delete: null
        execute: null
      type: object
    GroupPermissionGroupCreateGroupGetGroupUpdateGroupDeleteGroupExecuteGroupAdministratePermissions:
      additionalProperties: false
      properties:
        ownerId:
          nullable: true
          pattern: "(^[0-9a-f]{24}$|^([0-9a-f]{8}([-][0-9a-f]{4}){3}[-][0-9a-f]{12})$)"
          type: string
        owner:
          $ref: '#/components/schemas/GroupPermission'
        groups:
          additionalProperties:
            $ref: '#/components/schemas/GroupPermission'
          maxLength: 20
          nullable: true
          type: object
        other:
          $ref: '#/components/schemas/GroupPermission'
        anon:
          $ref: '#/components/schemas/GroupPermission'
      type: object
    GroupPermissions:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/GroupPermissionGroupCreateGroupGetGroupUpdateGroupDeleteGroupExecuteGroupAdministratePermissions'
      example:
        owner:
          get: null
          create: null
          update: null
          administrate: null
          delete: null
          execute: null
        anon:
          get: null
          create: null
          update: null
          administrate: null
          delete: null
          execute: null
        other:
          get: null
          create: null
          update: null
          administrate: null
          delete: null
          execute: null
        groups:
          key:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
        ownerId: ownerId
      type: object
    GroupPermissionsVM:
      additionalProperties: false
      example:
        permissions:
          owner:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          anon:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          other:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          groups:
            key:
              get: null
              create: null
              update: null
              administrate: null
              delete: null
              execute: null
          ownerId: ownerId
      properties:
        permissions:
          $ref: '#/components/schemas/GroupPermissions'
      type: object
    GroupUpdate:
      enum:
      - 0
      - 1
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - Name
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.GroupPermissionsEnums.GroupUpdate
    GroupUserVM:
      additionalProperties: false
      example:
        userId: userId
      properties:
        userId:
          nullable: true
          type: string
      type: object
    GroupUsersVM:
      additionalProperties: false
      example:
        take: 6
        count: 0
        skip: 1
        users:
        - userId: userId
        - userId: userId
      properties:
        users:
          items:
            $ref: '#/components/schemas/GroupUserVM'
          nullable: true
          type: array
        count:
          format: int64
          type: integer
        take:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
      type: object
    GroupVM:
      additionalProperties: false
      example:
        name: name
        id: id
        subscriptionId: subscriptionId
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        subscriptionId:
          nullable: true
          type: string
      type: object
    GroupsVM:
      additionalProperties: false
      example:
        take: 1
        count: 0
        groups:
        - name: name
          id: id
          subscriptionId: subscriptionId
        - name: name
          id: id
          subscriptionId: subscriptionId
        skip: 6
      properties:
        groups:
          items:
            $ref: '#/components/schemas/GroupVM'
          nullable: true
          type: array
        count:
          format: int64
          type: integer
        skip:
          format: int32
          type: integer
        take:
          format: int32
          type: integer
      type: object
    HttpValidationProblemDetails:
      additionalProperties: {}
      allOf:
      - $ref: '#/components/schemas/ProblemDetails'
      properties:
        errors:
          additionalProperties:
            items:
              type: string
            type: array
          readOnly: true
          type: object
      type: object
    InputFileVM:
      additionalProperties: false
      properties:
        entityId:
          nullable: true
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        type:
          $ref: '#/components/schemas/FileKind'
      type: object
    InvitedUser:
      additionalProperties: false
      example:
        userId: userId
        invitedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        userId:
          nullable: true
          type: string
        invitedAt:
          format: date-time
          type: string
      type: object
    MyPermissionsVM:
      additionalProperties: false
      example:
        datasources:
          get: null
          create: null
          update: null
          administrate: null
          delete: null
          execute: null
        files:
          get: null
          create: null
          update: null
          administrate: null
          delete: null
          execute: null
        groups:
          get: null
          create: null
          update: null
          administrate: null
          delete: null
          execute: null
        subscription:
          get: null
          create: null
          update: null
          administrate: null
          delete: null
          execute: null
        tasks:
          get: null
          create: null
          update: null
          administrate: null
          delete: null
          execute: null
      properties:
        subscription:
          $ref: '#/components/schemas/SubscriptionPermission'
        files:
          $ref: '#/components/schemas/FilePermission'
        datasources:
          $ref: '#/components/schemas/DataSourcePermission'
        groups:
          $ref: '#/components/schemas/GroupPermission'
        tasks:
          $ref: '#/components/schemas/TaskPermission'
      type: object
    OutputFileVM:
      additionalProperties: false
      properties:
        fileName:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        folderId:
          nullable: true
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
        type:
          $ref: '#/components/schemas/FileKind'
        isTemporary:
          type: boolean
      type: object
    PrepareTemplateTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/TransformTaskBaseVM'
      properties:
        exportIds:
          items:
            type: string
          nullable: true
          type: array
        pagesCount:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        reportParameters:
          additionalProperties:
            nullable: true
            type: string
          maxLength: 200
          nullable: true
          type: object
      type: object
    PrepareTemplateVM:
      additionalProperties: false
      example:
        pagesCount: 171976544
        name: name
        reportParameters:
          key: reportParameters
        locale: locale
        folderId: folderId
      properties:
        name:
          maxLength: 250
          minLength: 1
          nullable: true
          type: string
        locale:
          nullable: true
          pattern: "^[a-zA-Z]{2,4}(-[a-zA-Z]{2,4}){0,2}$"
          type: string
        folderId:
          nullable: true
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
        pagesCount:
          format: int32
          maximum: 2147483647
          minimum: 0
          nullable: true
          type: integer
        reportParameters:
          additionalProperties:
            nullable: true
            type: string
          maxLength: 200
          nullable: true
          type: object
      type: object
    PreviewReportVM:
      additionalProperties: false
      example:
        locale: locale
        cacheTolerance: 0.8008281904610115
      properties:
        locale:
          nullable: true
          pattern: "^[a-zA-Z]{2,4}(-[a-zA-Z]{2,4}){0,2}$"
          type: string
        cacheTolerance:
          default: 300
          format: double
          type: number
      type: object
    PreviewTemplateVM:
      additionalProperties: false
      example:
        reportParameters:
          key: reportParameters
        locale: locale
        cacheTolerance: 0.8008281904610115
      properties:
        locale:
          nullable: true
          pattern: "^[a-zA-Z]{2,4}(-[a-zA-Z]{2,4}){0,2}$"
          type: string
        reportParameters:
          additionalProperties:
            nullable: true
            type: string
          maxLength: 200
          nullable: true
          type: object
        cacheTolerance:
          default: 300
          format: double
          type: number
      type: object
    ProblemDetails:
      additionalProperties: {}
      example:
        instance: instance
        detail: detail
        type: type
        title: title
        status: 6
      properties:
        type:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        status:
          format: int32
          nullable: true
          type: integer
        detail:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
      type: object
    ProfileVisibility:
      enum:
      - 0
      - 1
      - 2
      - 4
      format: int32
      type: integer
      x-enumNames:
      - None
      - Email
      - Username
      - Name
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.ProfileVisibility
    RenameDataSourceVM:
      additionalProperties: false
      example:
        name: name
      properties:
        name:
          maxLength: 50
          minLength: 1
          type: string
      required:
      - name
      type: object
    RenameGroupVM:
      additionalProperties: false
      example:
        name: name
      properties:
        name:
          maxLength: 50
          minLength: 1
          type: string
      required:
      - name
      type: object
    RenameSubscriptionVM:
      additionalProperties: false
      example:
        name: name
      properties:
        name:
          maxLength: 50
          minLength: 1
          type: string
      required:
      - name
      type: object
    ReportCreateAdminVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/ReportCreateVM'
      properties:
        ownerId:
          minLength: 1
          pattern: "(^[0-9a-f]{24}$|^([0-9a-f]{8}([-][0-9a-f]{4}){3}[-][0-9a-f]{12})$)"
          type: string
        parentId:
          minLength: 1
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
      required:
      - ownerId
      - parentId
      type: object
    ReportCreateVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/FileCreateVM'
      discriminator:
        mapping:
          ReportCreateVM: '#/components/schemas/ReportCreateVM'
          ReportCreateAdminVM: '#/components/schemas/ReportCreateAdminVM'
        propertyName: $t
      example:
        $t: $t
        templateId: templateId
      properties:
        templateId:
          nullable: true
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
        $t:
          type: string
      required:
      - $t
      type: object
    ReportFolderCreateVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/FolderCreateVM'
      example:
        $t: $t
        name: name
        icon: icon
        tags:
        - tags
        - tags
        - tags
      type: object
    ReportInfo:
      additionalProperties: false
      example:
        saveMode: null
        author: author
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        modified: 2000-01-23T04:56:07.000+00:00
        previewPictureRatio: 0.8008282
        tag: tag
        savePreviewPicture: true
        version: version
        creatorVersion: creatorVersion
        picture: picture
      properties:
        author:
          nullable: true
          type: string
        created:
          format: date-time
          type: string
        creatorVersion:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        modified:
          format: date-time
          type: string
        name:
          nullable: true
          type: string
        picture:
          format: byte
          nullable: true
          type: string
        previewPictureRatio:
          format: float
          type: number
        saveMode:
          $ref: '#/components/schemas/SaveMode'
        savePreviewPicture:
          type: boolean
        tag:
          nullable: true
          type: string
        version:
          nullable: true
          type: string
      type: object
    ReportVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/FileVM'
      example:
        reportInfo:
          saveMode: null
          author: author
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          modified: 2000-01-23T04:56:07.000+00:00
          previewPictureRatio: 0.8008282
          tag: tag
          savePreviewPicture: true
          version: version
          creatorVersion: creatorVersion
          picture: picture
        templateId: templateId
      properties:
        templateId:
          nullable: true
          type: string
        reportInfo:
          $ref: '#/components/schemas/ReportInfo'
      type: object
    ReportVMFilesVMBase:
      additionalProperties: false
      properties:
        files:
          items:
            $ref: '#/components/schemas/ReportVM'
          nullable: true
          type: array
        count:
          format: int64
          type: integer
        skip:
          format: int32
          type: integer
        take:
          format: int32
          type: integer
      type: object
    ReportsVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/ReportVMFilesVMBase'
      example:
        take: 1
        count: 0
        files:
        - reportInfo:
            saveMode: null
            author: author
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            description: description
            modified: 2000-01-23T04:56:07.000+00:00
            previewPictureRatio: 0.8008282
            tag: tag
            savePreviewPicture: true
            version: version
            creatorVersion: creatorVersion
            picture: picture
          templateId: templateId
        - reportInfo:
            saveMode: null
            author: author
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            description: description
            modified: 2000-01-23T04:56:07.000+00:00
            previewPictureRatio: 0.8008282
            tag: tag
            savePreviewPicture: true
            version: version
            creatorVersion: creatorVersion
            picture: picture
          templateId: templateId
        skip: 6
      type: object
    RunEmailTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/RunTransportTaskBaseVM'
      properties:
        body:
          maxLength: 384000
          minLength: 1
          nullable: true
          type: string
        enableSsl:
          type: boolean
        from:
          format: email
          nullable: true
          type: string
        isBodyHtml:
          type: boolean
        password:
          maxLength: 300
          minLength: 5
          nullable: true
          type: string
        port:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        server:
          maxLength: 5000
          minLength: 1
          nullable: true
          type: string
        subject:
          maxLength: 1000
          minLength: 1
          nullable: true
          type: string
        to:
          items:
            type: string
          maxItems: 200
          minItems: 1
          type: array
        username:
          maxLength: 100
          minLength: 1
          nullable: true
          type: string
      required:
      - to
      type: object
    RunExportReportTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/RunTransformTaskBaseVM'
      discriminator:
        mapping:
          RunExportReportTaskVM: '#/components/schemas/RunExportReportTaskVM'
          RunExportTemplateTaskVM: '#/components/schemas/RunExportTemplateTaskVM'
        propertyName: $t
      properties:
        exportParameters:
          additionalProperties:
            nullable: true
            type: string
          maxLength: 200
          nullable: true
          type: object
        format:
          $ref: '#/components/schemas/ExportFormat'
        pagesCount:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        $t:
          type: string
      required:
      - $t
      type: object
    RunExportTemplateTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/RunExportReportTaskVM'
      properties:
        reportParameters:
          additionalProperties:
            nullable: true
            type: string
          maxLength: 200
          nullable: true
          type: object
      type: object
    RunFTPUploadTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/RunTransportTaskBaseVM'
      properties:
        archive:
          type: boolean
        archiveName:
          nullable: true
          type: string
        destinationFolder:
          nullable: true
          type: string
        ftpHost:
          maxLength: 400
          minLength: 1
          nullable: true
          type: string
        ftpPassword:
          maxLength: 300
          minLength: 4
          nullable: true
          type: string
        ftpPort:
          format: int32
          type: integer
        ftpUsername:
          maxLength: 300
          minLength: 1
          nullable: true
          type: string
        useSFTP:
          type: boolean
      type: object
    RunFetchTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/RunTaskBaseVM'
      properties:
        dataSourceId:
          nullable: true
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
      type: object
    RunInputFileVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/InputFileVM'
      properties:
        content:
          format: byte
          maxLength: 10000000
          nullable: true
          type: string
        fileName:
          maxLength: 250
          minLength: 1
          nullable: true
          type: string
      type: object
    RunPrepareTemplateTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/RunTransformTaskBaseVM'
      properties:
        exports:
          items:
            $ref: '#/components/schemas/RunExportReportTaskVM'
          maxItems: 10
          nullable: true
          type: array
        pagesCount:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        reportParameters:
          additionalProperties:
            nullable: true
            type: string
          maxLength: 200
          nullable: true
          type: object
      type: object
    RunTaskBaseVM:
      additionalProperties: false
      discriminator:
        mapping:
          RunFetchTaskVM: '#/components/schemas/RunFetchTaskVM'
          RunThumbnailReportTaskVM: '#/components/schemas/RunThumbnailReportTaskVM'
          RunThumbnailTemplateTaskVM: '#/components/schemas/RunThumbnailTemplateTaskVM'
          RunEmailTaskVM: '#/components/schemas/RunEmailTaskVM'
          RunWebhookTaskVM: '#/components/schemas/RunWebhookTaskVM'
          RunExportReportTaskVM: '#/components/schemas/RunExportReportTaskVM'
          RunExportTemplateTaskVM: '#/components/schemas/RunExportTemplateTaskVM'
          RunPrepareTemplateTaskVM: '#/components/schemas/RunPrepareTemplateTaskVM'
          RunFTPUploadTaskVM: '#/components/schemas/RunFTPUploadTaskVM'
        propertyName: $t
      example:
        $t: $t
        subscriptionId: subscriptionId
      properties:
        subscriptionId:
          nullable: true
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
        $t:
          type: string
      required:
      - $t
      type: object
    RunThumbnailReportTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/RunTaskBaseVM'
      properties:
        reportId:
          nullable: true
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
      type: object
    RunThumbnailTemplateTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/RunTaskBaseVM'
      properties:
        templateId:
          nullable: true
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
      type: object
    RunTransformTaskBaseVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/RunTaskBaseVM'
      discriminator:
        mapping:
          RunExportReportTaskVM: '#/components/schemas/RunExportReportTaskVM'
          RunExportTemplateTaskVM: '#/components/schemas/RunExportTemplateTaskVM'
          RunPrepareTemplateTaskVM: '#/components/schemas/RunPrepareTemplateTaskVM'
        propertyName: $t
      properties:
        inputFile:
          $ref: '#/components/schemas/RunInputFileVM'
        locale:
          nullable: true
          pattern: "^[a-zA-Z]{2,4}(-[a-zA-Z]{2,4}){0,2}$"
          type: string
        outputFile:
          $ref: '#/components/schemas/OutputFileVM'
        transports:
          items:
            $ref: '#/components/schemas/RunTransportTaskBaseVM'
          maxItems: 10
          nullable: true
          type: array
        $t:
          type: string
      required:
      - $t
      type: object
    RunTransportTaskBaseVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/RunTaskBaseVM'
      discriminator:
        mapping:
          RunEmailTaskVM: '#/components/schemas/RunEmailTaskVM'
          RunWebhookTaskVM: '#/components/schemas/RunWebhookTaskVM'
          RunFTPUploadTaskVM: '#/components/schemas/RunFTPUploadTaskVM'
        propertyName: $t
      properties:
        inputFile:
          $ref: '#/components/schemas/RunInputFileVM'
        $t:
          type: string
      required:
      - $t
      type: object
    RunWebhookTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/RunTransportTaskBaseVM'
      properties:
        headers:
          additionalProperties:
            nullable: true
            type: string
          maxLength: 100
          nullable: true
          type: object
        url:
          format: uri
          maxLength: 5000
          minLength: 1
          nullable: true
          type: string
      type: object
    SaveMode:
      enum:
      - All
      - Original
      - User
      - Role
      - Security
      - Deny
      - Custom
      type: string
      x-typeName: FastReport.Cloud.Enums.SaveMode
    SelectedFilesVM:
      additionalProperties: false
      example:
        path: path
        isBin: true
        useRegex: true
        folders:
        - folders
        - folders
        isAllSelected: true
        searchPattern: searchPattern
        files:
        - files
        - files
        folderId: folderId
      properties:
        isAllSelected:
          type: boolean
        folderId:
          nullable: true
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        searchPattern:
          nullable: true
          type: string
        useRegex:
          type: boolean
        files:
          items:
            type: string
          nullable: true
          type: array
        folders:
          items:
            type: string
          nullable: true
          type: array
        path:
          nullable: true
          type: string
        isBin:
          type: boolean
      type: object
    ServerConfigurationVM:
      additionalProperties: false
      example:
        copyright: copyright
        homePageLink: homePageLink
        auth:
          useLocal: true
          useOpenId: true
          authority: authority
        firstStepsVideoLink: firstStepsVideoLink
        aboutLink: aboutLink
        title: title
        invariantLocale: invariantLocale
        slaLink: slaLink
        updateWorkspaceLink: updateWorkspaceLink
        corporateServerMode: true
        logoLink: logoLink
        lastSLAVersion: 2000-01-23T04:56:07.000+00:00
        authServerName: authServerName
        isDisabled: true
        designerForAnons: true
        frontend:
          mixins:
            head: head
            body: body
      properties:
        title:
          nullable: true
          type: string
        logoLink:
          nullable: true
          type: string
        copyright:
          nullable: true
          type: string
        corporateServerMode:
          type: boolean
        lastSLAVersion:
          format: date-time
          nullable: true
          type: string
        isDisabled:
          type: boolean
        frontend:
          $ref: '#/components/schemas/FrontendApp'
        invariantLocale:
          nullable: true
          type: string
        auth:
          $ref: '#/components/schemas/AuthConfigVM'
        designerForAnons:
          type: boolean
        slaLink:
          nullable: true
          type: string
        firstStepsVideoLink:
          nullable: true
          type: string
        aboutLink:
          nullable: true
          type: string
        homePageLink:
          nullable: true
          type: string
        authServerName:
          nullable: true
          type: string
        updateWorkspaceLink:
          nullable: true
          type: string
      type: object
    SubscriptionAdministrate:
      enum:
      - 0
      - 1
      - 2
      - 4
      - 8
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - Owner
      - Group
      - Other
      - Anon
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.SubscriptionPermissionsEnums.SubscriptionAdministrate
    SubscriptionCreate:
      enum:
      - 0
      - 1
      - 2
      - 4
      - 8
      - 16
      - 32
      - 64
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - Users
      - Groups
      - DataSources
      - Invites
      - Tasks
      - RecycleBin
      - Contacts
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.SubscriptionPermissionsEnums.SubscriptionCreate
    SubscriptionCreateSubscriptionGetSubscriptionUpdateSubscriptionDeleteSubscriptionExecuteSubscriptionAdministratePermission:
      additionalProperties: false
      properties:
        create:
          $ref: '#/components/schemas/SubscriptionCreate'
        delete:
          $ref: '#/components/schemas/SubscriptionDelete'
        execute:
          $ref: '#/components/schemas/SubscriptionExecute'
        get:
          $ref: '#/components/schemas/SubscriptionGet'
        update:
          $ref: '#/components/schemas/SubscriptionUpdate'
        administrate:
          $ref: '#/components/schemas/SubscriptionAdministrate'
      type: object
    SubscriptionDelete:
      enum:
      - 0
      - 1
      - 2
      - 4
      - 8
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - Users
      - Invites
      - RecycleBin
      - Contacts
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.SubscriptionPermissionsEnums.SubscriptionDelete
    SubscriptionExecute:
      enum:
      - 0
      - 4
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - Tasks
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.SubscriptionPermissionsEnums.SubscriptionExecute
    SubscriptionFolder:
      additionalProperties: false
      example:
        bytesUsed: 0
        folderId: folderId
      properties:
        folderId:
          nullable: true
          type: string
        bytesUsed:
          format: int64
          type: integer
      type: object
    SubscriptionGet:
      enum:
      - 0
      - 1
      - 2
      - 4
      - 8
      - 16
      - 32
      - 64
      - 128
      - 256
      - 512
      - 1024
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - Entity
      - Users
      - Permission
      - RootDirectory
      - DataSources
      - Groups
      - DefaultPermissions
      - Invites
      - Tasks
      - DeletedFiles
      - Contacts
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.SubscriptionPermissionsEnums.SubscriptionGet
    SubscriptionInviteVM:
      additionalProperties: false
      example:
        durable: true
        creatorUserId: creatorUserId
        expiredDate: 2000-01-23T04:56:07.000+00:00
        addedUsers:
        - userId: userId
          invitedAt: 2000-01-23T04:56:07.000+00:00
        - userId: userId
          invitedAt: 2000-01-23T04:56:07.000+00:00
        usages: 0
        accessToken: accessToken
      properties:
        usages:
          format: int64
          type: integer
        durable:
          type: boolean
        accessToken:
          nullable: true
          type: string
        expiredDate:
          format: date-time
          type: string
        addedUsers:
          items:
            $ref: '#/components/schemas/InvitedUser'
          nullable: true
          type: array
        creatorUserId:
          nullable: true
          type: string
      type: object
    SubscriptionInvitesVM:
      additionalProperties: false
      example:
        count: 6
        invites:
        - durable: true
          creatorUserId: creatorUserId
          expiredDate: 2000-01-23T04:56:07.000+00:00
          addedUsers:
          - userId: userId
            invitedAt: 2000-01-23T04:56:07.000+00:00
          - userId: userId
            invitedAt: 2000-01-23T04:56:07.000+00:00
          usages: 0
          accessToken: accessToken
        - durable: true
          creatorUserId: creatorUserId
          expiredDate: 2000-01-23T04:56:07.000+00:00
          addedUsers:
          - userId: userId
            invitedAt: 2000-01-23T04:56:07.000+00:00
          - userId: userId
            invitedAt: 2000-01-23T04:56:07.000+00:00
          usages: 0
          accessToken: accessToken
      properties:
        invites:
          items:
            $ref: '#/components/schemas/SubscriptionInviteVM'
          nullable: true
          type: array
        count:
          format: int64
          type: integer
      type: object
    SubscriptionPeriodVM:
      additionalProperties: false
      example:
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        plan:
          onlineDesigner: true
          exportsSpaceLimit: 5
          displayName: displayName
          maxUsersCount: 9
          templatesSpaceLimit: 1
          fileUploadSizeLimit: 2
          isActive: true
          dataSourceLimit: 7
          isDemo: true
          urlToBuy: urlToBuy
          pageLimit: 2
          readonlyTimeLimit: 6
          unlimitedPage: true
          reportsSpaceLimit: 5
          timePeriod: 0
          id: id
          groupLimit: 3
          timePeriodType: ""
          readonlyTimeLimitType: null
          tasks:
            prepare: true
            thumbnailReport: true
            fetchData: true
            exportTemplate: true
            exportReport: true
            uploadToFTP: true
            sendViaWebhook: true
            sendViaEmail: true
            thumbnailTemplate: true
      properties:
        startTime:
          format: date-time
          type: string
        endTime:
          format: date-time
          type: string
        plan:
          $ref: '#/components/schemas/SubscriptionPlanVM'
      type: object
    SubscriptionPermission:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/SubscriptionCreateSubscriptionGetSubscriptionUpdateSubscriptionDeleteSubscriptionExecuteSubscriptionAdministratePermission'
      example:
        get: null
        create: null
        update: null
        administrate: null
        delete: null
        execute: null
      type: object
    ? SubscriptionPermissionSubscriptionCreateSubscriptionGetSubscriptionUpdateSubscriptionDeleteSubscriptionExecuteSubscriptionAdministratePermissions
    : additionalProperties: false
      properties:
        ownerId:
          nullable: true
          pattern: "(^[0-9a-f]{24}$|^([0-9a-f]{8}([-][0-9a-f]{4}){3}[-][0-9a-f]{12})$)"
          type: string
        owner:
          $ref: '#/components/schemas/SubscriptionPermission'
        groups:
          additionalProperties:
            $ref: '#/components/schemas/SubscriptionPermission'
          maxLength: 20
          nullable: true
          type: object
        other:
          $ref: '#/components/schemas/SubscriptionPermission'
        anon:
          $ref: '#/components/schemas/SubscriptionPermission'
      type: object
    SubscriptionPermissions:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/SubscriptionPermissionSubscriptionCreateSubscriptionGetSubscriptionUpdateSubscriptionDeleteSubscriptionExecuteSubscriptionAdministratePermissions'
      example:
        owner:
          get: null
          create: null
          update: null
          administrate: null
          delete: null
          execute: null
        anon:
          get: null
          create: null
          update: null
          administrate: null
          delete: null
          execute: null
        other:
          get: null
          create: null
          update: null
          administrate: null
          delete: null
          execute: null
        groups:
          key:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
        ownerId: ownerId
      type: object
    SubscriptionPermissionsVM:
      additionalProperties: false
      example:
        permissions:
          owner:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          anon:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          other:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          groups:
            key:
              get: null
              create: null
              update: null
              administrate: null
              delete: null
              execute: null
          ownerId: ownerId
      properties:
        permissions:
          $ref: '#/components/schemas/SubscriptionPermissions'
      type: object
    SubscriptionPlanVM:
      additionalProperties: false
      example:
        onlineDesigner: true
        exportsSpaceLimit: 5
        displayName: displayName
        maxUsersCount: 9
        templatesSpaceLimit: 1
        fileUploadSizeLimit: 2
        isActive: true
        dataSourceLimit: 7
        isDemo: true
        urlToBuy: urlToBuy
        pageLimit: 2
        readonlyTimeLimit: 6
        unlimitedPage: true
        reportsSpaceLimit: 5
        timePeriod: 0
        id: id
        groupLimit: 3
        timePeriodType: ""
        readonlyTimeLimitType: null
        tasks:
          prepare: true
          thumbnailReport: true
          fetchData: true
          exportTemplate: true
          exportReport: true
          uploadToFTP: true
          sendViaWebhook: true
          sendViaEmail: true
          thumbnailTemplate: true
      properties:
        id:
          nullable: true
          type: string
        isActive:
          nullable: true
          type: boolean
        displayName:
          nullable: true
          type: string
        timePeriodType:
          allOf:
          - $ref: '#/components/schemas/TimePeriodType'
          nullable: true
          required:
          - "false"
        timePeriod:
          format: int32
          nullable: true
          type: integer
        readonlyTimeLimitType:
          $ref: '#/components/schemas/TimePeriodType'
        readonlyTimeLimit:
          format: int32
          type: integer
        templatesSpaceLimit:
          format: int64
          nullable: true
          type: integer
        reportsSpaceLimit:
          format: int64
          nullable: true
          type: integer
        exportsSpaceLimit:
          format: int64
          nullable: true
          type: integer
        fileUploadSizeLimit:
          format: int64
          nullable: true
          type: integer
        dataSourceLimit:
          format: int32
          nullable: true
          type: integer
        maxUsersCount:
          format: int32
          nullable: true
          type: integer
        groupLimit:
          format: int32
          nullable: true
          type: integer
        onlineDesigner:
          nullable: true
          type: boolean
        isDemo:
          nullable: true
          type: boolean
        urlToBuy:
          nullable: true
          type: string
        unlimitedPage:
          type: boolean
        pageLimit:
          format: int32
          type: integer
        tasks:
          $ref: '#/components/schemas/TaskSettingsVM'
      type: object
    SubscriptionPlansVM:
      additionalProperties: false
      example:
        take: 1
        subscriptionPlans:
        - onlineDesigner: true
          exportsSpaceLimit: 5
          displayName: displayName
          maxUsersCount: 9
          templatesSpaceLimit: 1
          fileUploadSizeLimit: 2
          isActive: true
          dataSourceLimit: 7
          isDemo: true
          urlToBuy: urlToBuy
          pageLimit: 2
          readonlyTimeLimit: 6
          unlimitedPage: true
          reportsSpaceLimit: 5
          timePeriod: 0
          id: id
          groupLimit: 3
          timePeriodType: ""
          readonlyTimeLimitType: null
          tasks:
            prepare: true
            thumbnailReport: true
            fetchData: true
            exportTemplate: true
            exportReport: true
            uploadToFTP: true
            sendViaWebhook: true
            sendViaEmail: true
            thumbnailTemplate: true
        - onlineDesigner: true
          exportsSpaceLimit: 5
          displayName: displayName
          maxUsersCount: 9
          templatesSpaceLimit: 1
          fileUploadSizeLimit: 2
          isActive: true
          dataSourceLimit: 7
          isDemo: true
          urlToBuy: urlToBuy
          pageLimit: 2
          readonlyTimeLimit: 6
          unlimitedPage: true
          reportsSpaceLimit: 5
          timePeriod: 0
          id: id
          groupLimit: 3
          timePeriodType: ""
          readonlyTimeLimitType: null
          tasks:
            prepare: true
            thumbnailReport: true
            fetchData: true
            exportTemplate: true
            exportReport: true
            uploadToFTP: true
            sendViaWebhook: true
            sendViaEmail: true
            thumbnailTemplate: true
        count: 0
        skip: 6
      properties:
        subscriptionPlans:
          items:
            $ref: '#/components/schemas/SubscriptionPlanVM'
          nullable: true
          type: array
        count:
          format: int64
          type: integer
        skip:
          format: int32
          type: integer
        take:
          format: int32
          type: integer
      type: object
    SubscriptionUpdate:
      enum:
      - 0
      - 1
      - 4
      - 8
      - 16
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - Name
      - DefaultPermissions
      - Locale
      - Contacts
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.SubscriptionPermissionsEnums.SubscriptionUpdate
    SubscriptionUserVM:
      additionalProperties: false
      example:
        groups:
        - name: name
          id: id
          subscriptionId: subscriptionId
        - name: name
          id: id
          subscriptionId: subscriptionId
        userId: userId
      properties:
        userId:
          nullable: true
          type: string
        groups:
          items:
            $ref: '#/components/schemas/GroupVM'
          nullable: true
          type: array
      type: object
    SubscriptionUsersVM:
      additionalProperties: false
      example:
        take: 6
        count: 0
        skip: 1
        users:
        - groups:
          - name: name
            id: id
            subscriptionId: subscriptionId
          - name: name
            id: id
            subscriptionId: subscriptionId
          userId: userId
        - groups:
          - name: name
            id: id
            subscriptionId: subscriptionId
          - name: name
            id: id
            subscriptionId: subscriptionId
          userId: userId
      properties:
        users:
          items:
            $ref: '#/components/schemas/SubscriptionUserVM'
          nullable: true
          type: array
        count:
          format: int64
          type: integer
        take:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
      type: object
    SubscriptionVM:
      additionalProperties: false
      discriminator:
        mapping:
          SubscriptionVM: '#/components/schemas/SubscriptionVM'
          AdminSubscriptionVM: '#/components/schemas/AdminSubscriptionVM'
        propertyName: $t
      example:
        exportsFolder:
          bytesUsed: 0
          folderId: folderId
        $t: $t
        current:
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          plan:
            onlineDesigner: true
            exportsSpaceLimit: 5
            displayName: displayName
            maxUsersCount: 9
            templatesSpaceLimit: 1
            fileUploadSizeLimit: 2
            isActive: true
            dataSourceLimit: 7
            isDemo: true
            urlToBuy: urlToBuy
            pageLimit: 2
            readonlyTimeLimit: 6
            unlimitedPage: true
            reportsSpaceLimit: 5
            timePeriod: 0
            id: id
            groupLimit: 3
            timePeriodType: ""
            readonlyTimeLimitType: null
            tasks:
              prepare: true
              thumbnailReport: true
              fetchData: true
              exportTemplate: true
              exportReport: true
              uploadToFTP: true
              sendViaWebhook: true
              sendViaEmail: true
              thumbnailTemplate: true
        templatesFolder:
          bytesUsed: 0
          folderId: folderId
        old:
        - startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          plan:
            onlineDesigner: true
            exportsSpaceLimit: 5
            displayName: displayName
            maxUsersCount: 9
            templatesSpaceLimit: 1
            fileUploadSizeLimit: 2
            isActive: true
            dataSourceLimit: 7
            isDemo: true
            urlToBuy: urlToBuy
            pageLimit: 2
            readonlyTimeLimit: 6
            unlimitedPage: true
            reportsSpaceLimit: 5
            timePeriod: 0
            id: id
            groupLimit: 3
            timePeriodType: ""
            readonlyTimeLimitType: null
            tasks:
              prepare: true
              thumbnailReport: true
              fetchData: true
              exportTemplate: true
              exportReport: true
              uploadToFTP: true
              sendViaWebhook: true
              sendViaEmail: true
              thumbnailTemplate: true
        - startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          plan:
            onlineDesigner: true
            exportsSpaceLimit: 5
            displayName: displayName
            maxUsersCount: 9
            templatesSpaceLimit: 1
            fileUploadSizeLimit: 2
            isActive: true
            dataSourceLimit: 7
            isDemo: true
            urlToBuy: urlToBuy
            pageLimit: 2
            readonlyTimeLimit: 6
            unlimitedPage: true
            reportsSpaceLimit: 5
            timePeriod: 0
            id: id
            groupLimit: 3
            timePeriodType: ""
            readonlyTimeLimitType: null
            tasks:
              prepare: true
              thumbnailReport: true
              fetchData: true
              exportTemplate: true
              exportReport: true
              uploadToFTP: true
              sendViaWebhook: true
              sendViaEmail: true
              thumbnailTemplate: true
        name: name
        reportsFolder:
          bytesUsed: 0
          folderId: folderId
        id: id
        locale: locale
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        locale:
          nullable: true
          type: string
        current:
          $ref: '#/components/schemas/SubscriptionPeriodVM'
        old:
          items:
            $ref: '#/components/schemas/SubscriptionPeriodVM'
          nullable: true
          type: array
        templatesFolder:
          $ref: '#/components/schemas/SubscriptionFolder'
        reportsFolder:
          $ref: '#/components/schemas/SubscriptionFolder'
        exportsFolder:
          $ref: '#/components/schemas/SubscriptionFolder'
        $t:
          type: string
      required:
      - $t
      type: object
    SubscriptionsVM:
      additionalProperties: false
      example:
        take: 1
        subscriptions:
        - exportsFolder:
            bytesUsed: 0
            folderId: folderId
          $t: $t
          current:
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            plan:
              onlineDesigner: true
              exportsSpaceLimit: 5
              displayName: displayName
              maxUsersCount: 9
              templatesSpaceLimit: 1
              fileUploadSizeLimit: 2
              isActive: true
              dataSourceLimit: 7
              isDemo: true
              urlToBuy: urlToBuy
              pageLimit: 2
              readonlyTimeLimit: 6
              unlimitedPage: true
              reportsSpaceLimit: 5
              timePeriod: 0
              id: id
              groupLimit: 3
              timePeriodType: ""
              readonlyTimeLimitType: null
              tasks:
                prepare: true
                thumbnailReport: true
                fetchData: true
                exportTemplate: true
                exportReport: true
                uploadToFTP: true
                sendViaWebhook: true
                sendViaEmail: true
                thumbnailTemplate: true
          templatesFolder:
            bytesUsed: 0
            folderId: folderId
          old:
          - startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            plan:
              onlineDesigner: true
              exportsSpaceLimit: 5
              displayName: displayName
              maxUsersCount: 9
              templatesSpaceLimit: 1
              fileUploadSizeLimit: 2
              isActive: true
              dataSourceLimit: 7
              isDemo: true
              urlToBuy: urlToBuy
              pageLimit: 2
              readonlyTimeLimit: 6
              unlimitedPage: true
              reportsSpaceLimit: 5
              timePeriod: 0
              id: id
              groupLimit: 3
              timePeriodType: ""
              readonlyTimeLimitType: null
              tasks:
                prepare: true
                thumbnailReport: true
                fetchData: true
                exportTemplate: true
                exportReport: true
                uploadToFTP: true
                sendViaWebhook: true
                sendViaEmail: true
                thumbnailTemplate: true
          - startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            plan:
              onlineDesigner: true
              exportsSpaceLimit: 5
              displayName: displayName
              maxUsersCount: 9
              templatesSpaceLimit: 1
              fileUploadSizeLimit: 2
              isActive: true
              dataSourceLimit: 7
              isDemo: true
              urlToBuy: urlToBuy
              pageLimit: 2
              readonlyTimeLimit: 6
              unlimitedPage: true
              reportsSpaceLimit: 5
              timePeriod: 0
              id: id
              groupLimit: 3
              timePeriodType: ""
              readonlyTimeLimitType: null
              tasks:
                prepare: true
                thumbnailReport: true
                fetchData: true
                exportTemplate: true
                exportReport: true
                uploadToFTP: true
                sendViaWebhook: true
                sendViaEmail: true
                thumbnailTemplate: true
          name: name
          reportsFolder:
            bytesUsed: 0
            folderId: folderId
          id: id
          locale: locale
        - exportsFolder:
            bytesUsed: 0
            folderId: folderId
          $t: $t
          current:
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            plan:
              onlineDesigner: true
              exportsSpaceLimit: 5
              displayName: displayName
              maxUsersCount: 9
              templatesSpaceLimit: 1
              fileUploadSizeLimit: 2
              isActive: true
              dataSourceLimit: 7
              isDemo: true
              urlToBuy: urlToBuy
              pageLimit: 2
              readonlyTimeLimit: 6
              unlimitedPage: true
              reportsSpaceLimit: 5
              timePeriod: 0
              id: id
              groupLimit: 3
              timePeriodType: ""
              readonlyTimeLimitType: null
              tasks:
                prepare: true
                thumbnailReport: true
                fetchData: true
                exportTemplate: true
                exportReport: true
                uploadToFTP: true
                sendViaWebhook: true
                sendViaEmail: true
                thumbnailTemplate: true
          templatesFolder:
            bytesUsed: 0
            folderId: folderId
          old:
          - startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            plan:
              onlineDesigner: true
              exportsSpaceLimit: 5
              displayName: displayName
              maxUsersCount: 9
              templatesSpaceLimit: 1
              fileUploadSizeLimit: 2
              isActive: true
              dataSourceLimit: 7
              isDemo: true
              urlToBuy: urlToBuy
              pageLimit: 2
              readonlyTimeLimit: 6
              unlimitedPage: true
              reportsSpaceLimit: 5
              timePeriod: 0
              id: id
              groupLimit: 3
              timePeriodType: ""
              readonlyTimeLimitType: null
              tasks:
                prepare: true
                thumbnailReport: true
                fetchData: true
                exportTemplate: true
                exportReport: true
                uploadToFTP: true
                sendViaWebhook: true
                sendViaEmail: true
                thumbnailTemplate: true
          - startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            plan:
              onlineDesigner: true
              exportsSpaceLimit: 5
              displayName: displayName
              maxUsersCount: 9
              templatesSpaceLimit: 1
              fileUploadSizeLimit: 2
              isActive: true
              dataSourceLimit: 7
              isDemo: true
              urlToBuy: urlToBuy
              pageLimit: 2
              readonlyTimeLimit: 6
              unlimitedPage: true
              reportsSpaceLimit: 5
              timePeriod: 0
              id: id
              groupLimit: 3
              timePeriodType: ""
              readonlyTimeLimitType: null
              tasks:
                prepare: true
                thumbnailReport: true
                fetchData: true
                exportTemplate: true
                exportReport: true
                uploadToFTP: true
                sendViaWebhook: true
                sendViaEmail: true
                thumbnailTemplate: true
          name: name
          reportsFolder:
            bytesUsed: 0
            folderId: folderId
          id: id
          locale: locale
        count: 0
        skip: 6
      properties:
        subscriptions:
          items:
            $ref: '#/components/schemas/SubscriptionVM'
          nullable: true
          type: array
        count:
          format: int64
          type: integer
        skip:
          format: int32
          type: integer
        take:
          format: int32
          type: integer
      type: object
    TaskAdministrate:
      enum:
      - 0
      - 1
      - 2
      - 4
      - 8
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - Owner
      - Group
      - Other
      - Anon
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.TaskPermissionsEnums.TaskAdministrate
    TaskBaseVM:
      additionalProperties: false
      discriminator:
        mapping:
          FetchTaskVM: '#/components/schemas/FetchTaskVM'
          ThumbnailReportTaskVM: '#/components/schemas/ThumbnailReportTaskVM'
          ThumbnailTemplateTaskVM: '#/components/schemas/ThumbnailTemplateTaskVM'
          EmailTaskVM: '#/components/schemas/EmailTaskVM'
          WebhookTaskVM: '#/components/schemas/WebhookTaskVM'
          ExportReportTaskVM: '#/components/schemas/ExportReportTaskVM'
          ExportTemplateTaskVM: '#/components/schemas/ExportTemplateTaskVM'
          PrepareTemplateTaskVM: '#/components/schemas/PrepareTemplateTaskVM'
          FTPUploadTaskVM: '#/components/schemas/FTPUploadTaskVM'
        propertyName: $t
      example:
        cronExpression: cronExpression
        $t: $t
        delayedRunTime: 2000-01-23T04:56:07.000+00:00
        delayedWasRunTime: 2000-01-23T04:56:07.000+00:00
        recurrentWasRunTime: 2000-01-23T04:56:07.000+00:00
        recurrentRunTime: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        subscriptionId: subscriptionId
      properties:
        cronExpression:
          nullable: true
          type: string
        delayedRunTime:
          format: date-time
          nullable: true
          type: string
        delayedWasRunTime:
          format: date-time
          nullable: true
          type: string
        id:
          nullable: true
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        name:
          maxLength: 50
          minLength: 1
          nullable: true
          type: string
        recurrentRunTime:
          format: date-time
          nullable: true
          type: string
        recurrentWasRunTime:
          format: date-time
          nullable: true
          type: string
        subscriptionId:
          nullable: true
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
        $t:
          type: string
      required:
      - $t
      type: object
    TaskCreate:
      enum:
      - 0
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.TaskPermissionsEnums.TaskCreate
    TaskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission:
      additionalProperties: false
      properties:
        create:
          $ref: '#/components/schemas/TaskCreate'
        delete:
          $ref: '#/components/schemas/TaskDelete'
        execute:
          $ref: '#/components/schemas/TaskExecute'
        get:
          $ref: '#/components/schemas/TaskGet'
        update:
          $ref: '#/components/schemas/TaskUpdate'
        administrate:
          $ref: '#/components/schemas/TaskAdministrate'
      type: object
    TaskDelete:
      enum:
      - 0
      - 1
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - Entity
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.TaskPermissionsEnums.TaskDelete
    TaskExecute:
      enum:
      - 0
      - 1
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - Entity
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.TaskPermissionsEnums.TaskExecute
    TaskGet:
      enum:
      - 0
      - 1
      - 2
      - 4
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - Entity
      - Count
      - Permission
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.TaskPermissionsEnums.TaskGet
    TaskPermission:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/TaskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission'
      example:
        get: null
        create: null
        update: null
        administrate: null
        delete: null
        execute: null
      type: object
    TaskPermissionTaskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermissions:
      additionalProperties: false
      properties:
        ownerId:
          nullable: true
          pattern: "(^[0-9a-f]{24}$|^([0-9a-f]{8}([-][0-9a-f]{4}){3}[-][0-9a-f]{12})$)"
          type: string
        owner:
          $ref: '#/components/schemas/TaskPermission'
        groups:
          additionalProperties:
            $ref: '#/components/schemas/TaskPermission'
          maxLength: 20
          nullable: true
          type: object
        other:
          $ref: '#/components/schemas/TaskPermission'
        anon:
          $ref: '#/components/schemas/TaskPermission'
      type: object
    TaskPermissions:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/TaskPermissionTaskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermissions'
      example:
        owner:
          get: null
          create: null
          update: null
          administrate: null
          delete: null
          execute: null
        anon:
          get: null
          create: null
          update: null
          administrate: null
          delete: null
          execute: null
        other:
          get: null
          create: null
          update: null
          administrate: null
          delete: null
          execute: null
        groups:
          key:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
        ownerId: ownerId
      type: object
    TaskPermissionsVM:
      additionalProperties: false
      example:
        permissions:
          owner:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          anon:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          other:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          groups:
            key:
              get: null
              create: null
              update: null
              administrate: null
              delete: null
              execute: null
          ownerId: ownerId
      properties:
        permissions:
          $ref: '#/components/schemas/TaskPermissions'
      type: object
    TaskSettingsVM:
      additionalProperties: false
      example:
        prepare: true
        thumbnailReport: true
        fetchData: true
        exportTemplate: true
        exportReport: true
        uploadToFTP: true
        sendViaWebhook: true
        sendViaEmail: true
        thumbnailTemplate: true
      properties:
        prepare:
          nullable: true
          type: boolean
        exportTemplate:
          nullable: true
          type: boolean
        exportReport:
          nullable: true
          type: boolean
        sendViaEmail:
          nullable: true
          type: boolean
        uploadToFTP:
          nullable: true
          type: boolean
        sendViaWebhook:
          nullable: true
          type: boolean
        fetchData:
          nullable: true
          type: boolean
        thumbnailReport:
          nullable: true
          type: boolean
        thumbnailTemplate:
          nullable: true
          type: boolean
      type: object
    TaskUpdate:
      enum:
      - 0
      - 1
      - 2
      - -1
      format: int32
      type: integer
      x-enumNames:
      - None
      - Name
      - Entity
      - All
      x-enumFlags: true
      x-typeName: FastReport.Cloud.Enums.TaskPermissionsEnums.TaskUpdate
    TasksVM:
      additionalProperties: false
      example:
        take: 1
        count: 0
        skip: 6
        tasks:
        - cronExpression: cronExpression
          $t: $t
          delayedRunTime: 2000-01-23T04:56:07.000+00:00
          delayedWasRunTime: 2000-01-23T04:56:07.000+00:00
          recurrentWasRunTime: 2000-01-23T04:56:07.000+00:00
          recurrentRunTime: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
          subscriptionId: subscriptionId
        - cronExpression: cronExpression
          $t: $t
          delayedRunTime: 2000-01-23T04:56:07.000+00:00
          delayedWasRunTime: 2000-01-23T04:56:07.000+00:00
          recurrentWasRunTime: 2000-01-23T04:56:07.000+00:00
          recurrentRunTime: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
          subscriptionId: subscriptionId
      properties:
        count:
          format: int64
          type: integer
        skip:
          format: int32
          type: integer
        take:
          format: int32
          type: integer
        tasks:
          items:
            $ref: '#/components/schemas/TaskBaseVM'
          nullable: true
          type: array
      type: object
    TemplateCreateAdminVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/TemplateCreateVM'
      properties:
        ownerId:
          minLength: 1
          pattern: "(^[0-9a-f]{24}$|^([0-9a-f]{8}([-][0-9a-f]{4}){3}[-][0-9a-f]{12})$)"
          type: string
        parentId:
          minLength: 1
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
      required:
      - ownerId
      - parentId
      type: object
    TemplateCreateVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/FileCreateVM'
      discriminator:
        mapping:
          TemplateCreateVM: '#/components/schemas/TemplateCreateVM'
          TemplateCreateAdminVM: '#/components/schemas/TemplateCreateAdminVM'
        propertyName: $t
      example:
        $t: $t
      properties:
        $t:
          type: string
      required:
      - $t
      type: object
    TemplateFolderCreateVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/FolderCreateVM'
      example:
        $t: $t
        name: name
        icon: icon
        tags:
        - tags
        - tags
        - tags
      type: object
    TemplateVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/FileVM'
      example:
        reportInfo:
          saveMode: null
          author: author
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          modified: 2000-01-23T04:56:07.000+00:00
          previewPictureRatio: 0.8008282
          tag: tag
          savePreviewPicture: true
          version: version
          creatorVersion: creatorVersion
          picture: picture
      properties:
        reportInfo:
          $ref: '#/components/schemas/ReportInfo'
      type: object
    TemplateVMFilesVMBase:
      additionalProperties: false
      properties:
        files:
          items:
            $ref: '#/components/schemas/TemplateVM'
          nullable: true
          type: array
        count:
          format: int64
          type: integer
        skip:
          format: int32
          type: integer
        take:
          format: int32
          type: integer
      type: object
    TemplatesVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/TemplateVMFilesVMBase'
      example:
        take: 1
        count: 0
        files:
        - reportInfo:
            saveMode: null
            author: author
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            description: description
            modified: 2000-01-23T04:56:07.000+00:00
            previewPictureRatio: 0.8008282
            tag: tag
            savePreviewPicture: true
            version: version
            creatorVersion: creatorVersion
            picture: picture
        - reportInfo:
            saveMode: null
            author: author
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            description: description
            modified: 2000-01-23T04:56:07.000+00:00
            previewPictureRatio: 0.8008282
            tag: tag
            savePreviewPicture: true
            version: version
            creatorVersion: creatorVersion
            picture: picture
        skip: 6
      type: object
    ThumbnailReportTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/TaskBaseVM'
      properties:
        reportId:
          nullable: true
          type: string
      type: object
    ThumbnailTemplateTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/TaskBaseVM'
      properties:
        templateId:
          nullable: true
          type: string
      type: object
    TimePeriodType:
      enum:
      - Second
      - Minute
      - Hour
      - Day
      - Week
      - Month
      - Year
      type: string
      x-typeName: FastReport.Cloud.Enums.TimePeriodType
    TransformTaskBaseVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/TaskBaseVM'
      discriminator:
        mapping:
          ExportReportTaskVM: '#/components/schemas/ExportReportTaskVM'
          ExportTemplateTaskVM: '#/components/schemas/ExportTemplateTaskVM'
          PrepareTemplateTaskVM: '#/components/schemas/PrepareTemplateTaskVM'
        propertyName: $t
      properties:
        inputFile:
          $ref: '#/components/schemas/InputFileVM'
        locale:
          nullable: true
          pattern: "^[a-zA-Z]{2,4}(-[a-zA-Z]{2,4}){0,2}$"
          type: string
        outputFile:
          $ref: '#/components/schemas/OutputFileVM'
        transportIds:
          items:
            type: string
          nullable: true
          type: array
        $t:
          type: string
      required:
      - $t
      type: object
    TransportTaskBaseVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/TaskBaseVM'
      discriminator:
        mapping:
          EmailTaskVM: '#/components/schemas/EmailTaskVM'
          WebhookTaskVM: '#/components/schemas/WebhookTaskVM'
          FTPUploadTaskVM: '#/components/schemas/FTPUploadTaskVM'
        propertyName: $t
      properties:
        inputFile:
          $ref: '#/components/schemas/InputFileVM'
        $t:
          type: string
      required:
      - $t
      type: object
    UpdateContactGroupVM:
      additionalProperties: false
      example:
        name: name
        subscriptionId: subscriptionId
      properties:
        name:
          minLength: 1
          type: string
        subscriptionId:
          nullable: true
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
      required:
      - name
      type: object
    UpdateContactVM:
      additionalProperties: false
      example:
        name: name
        groups:
        - groups
        - groups
        - groups
        - groups
        - groups
        subscriptionId: subscriptionId
        email: email
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        groups:
          items:
            type: string
          maxItems: 10
          nullable: true
          type: array
        subscriptionId:
          nullable: true
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
      type: object
    UpdateDataSourceConnectionStringVM:
      additionalProperties: false
      example:
        connectionString: connectionString
      properties:
        connectionString:
          maxLength: 5000
          minLength: 0
          type: string
      required:
      - connectionString
      type: object
    UpdateDataSourcePermissionsVM:
      additionalProperties: false
      example:
        newPermissions:
          owner:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          anon:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          other:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          groups:
            key:
              get: null
              create: null
              update: null
              administrate: null
              delete: null
              execute: null
          ownerId: ownerId
        administrate: null
      properties:
        newPermissions:
          $ref: '#/components/schemas/DataSourcePermissions'
        administrate:
          $ref: '#/components/schemas/DataSourceAdministrate'
      required:
      - administrate
      - newPermissions
      type: object
    UpdateDataSourceSubscriptionVM:
      additionalProperties: false
      example:
        subscriptionId: subscriptionId
      properties:
        subscriptionId:
          minLength: 1
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
      required:
      - subscriptionId
      type: object
    UpdateDefaultPermissionsVM:
      additionalProperties: false
      example:
        taskPermissions:
          administrate: null
          newPermissions:
            owner:
              get: null
              create: null
              update: null
              administrate: null
              delete: null
              execute: null
            anon:
              get: null
              create: null
              update: null
              administrate: null
              delete: null
              execute: null
            other:
              get: null
              create: null
              update: null
              administrate: null
              delete: null
              execute: null
            groups:
              key:
                get: null
                create: null
                update: null
                administrate: null
                delete: null
                execute: null
            ownerId: ownerId
        groupPermissions:
          newPermissions:
            owner:
              get: null
              create: null
              update: null
              administrate: null
              delete: null
              execute: null
            anon:
              get: null
              create: null
              update: null
              administrate: null
              delete: null
              execute: null
            other:
              get: null
              create: null
              update: null
              administrate: null
              delete: null
              execute: null
            groups:
              key:
                get: null
                create: null
                update: null
                administrate: null
                delete: null
                execute: null
            ownerId: ownerId
          administrate: null
        filePermissions:
          newPermissions:
            owner:
              get: null
              create: null
              update: null
              administrate: null
              delete: null
              execute: null
            anon:
              get: null
              create: null
              update: null
              administrate: null
              delete: null
              execute: null
            other:
              get: null
              create: null
              update: null
              administrate: null
              delete: null
              execute: null
            groups:
              key:
                get: null
                create: null
                update: null
                administrate: null
                delete: null
                execute: null
            ownerId: ownerId
          administrate: null
        dataSourcePermissions:
          newPermissions:
            owner:
              get: null
              create: null
              update: null
              administrate: null
              delete: null
              execute: null
            anon:
              get: null
              create: null
              update: null
              administrate: null
              delete: null
              execute: null
            other:
              get: null
              create: null
              update: null
              administrate: null
              delete: null
              execute: null
            groups:
              key:
                get: null
                create: null
                update: null
                administrate: null
                delete: null
                execute: null
            ownerId: ownerId
          administrate: null
      properties:
        filePermissions:
          $ref: '#/components/schemas/UpdateFilePermissionsVM'
        groupPermissions:
          $ref: '#/components/schemas/UpdateGroupPermissionsVM'
        dataSourcePermissions:
          $ref: '#/components/schemas/UpdateDataSourcePermissionsVM'
        taskPermissions:
          $ref: '#/components/schemas/UpdateTaskPermissionsVM'
      type: object
    UpdateEmailTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/UpdateTransportTaskBaseVM'
      properties:
        body:
          maxLength: 384000
          minLength: 0
          nullable: true
          type: string
        enableSsl:
          nullable: true
          type: boolean
        from:
          format: email
          nullable: true
          type: string
        isBodyHtml:
          nullable: true
          type: boolean
        password:
          maxLength: 300
          minLength: 5
          nullable: true
          type: string
        port:
          format: int32
          nullable: true
          type: integer
        server:
          maxLength: 5000
          minLength: 1
          nullable: true
          type: string
        subject:
          maxLength: 1000
          minLength: 0
          nullable: true
          type: string
        to:
          items:
            type: string
          maxItems: 200
          nullable: true
          type: array
        username:
          maxLength: 100
          minLength: 1
          nullable: true
          type: string
      type: object
    UpdateExportReportTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/UpdateTransformTaskBaseVM'
      discriminator:
        mapping:
          UpdateExportReportTaskVM: '#/components/schemas/UpdateExportReportTaskVM'
          UpdateExportTemplateTaskVM: '#/components/schemas/UpdateExportTemplateTaskVM'
        propertyName: $t
      properties:
        exportParameters:
          additionalProperties:
            nullable: true
            type: string
          maxLength: 200
          nullable: true
          type: object
        format:
          allOf:
          - $ref: '#/components/schemas/ExportFormat'
          nullable: true
          required:
          - "false"
        pagesCount:
          format: int32
          maximum: 2147483647
          minimum: 0
          nullable: true
          type: integer
        $t:
          type: string
      required:
      - $t
      type: object
    UpdateExportTemplateTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/UpdateExportReportTaskVM'
      properties:
        reportParameters:
          additionalProperties:
            nullable: true
            type: string
          maxLength: 200
          nullable: true
          type: object
      type: object
    UpdateFTPUploadTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/UpdateTransportTaskBaseVM'
      properties:
        archive:
          nullable: true
          type: boolean
        archiveName:
          nullable: true
          type: string
        destinationFolder:
          nullable: true
          type: string
        ftpHost:
          maxLength: 400
          minLength: 1
          nullable: true
          type: string
        ftpPassword:
          maxLength: 300
          minLength: 4
          nullable: true
          type: string
        ftpPort:
          format: int32
          nullable: true
          type: integer
        ftpUsername:
          maxLength: 300
          minLength: 1
          nullable: true
          type: string
        useSFTP:
          nullable: true
          type: boolean
      type: object
    UpdateFetchTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/UpdateTaskBaseVM'
      properties:
        dataSourceId:
          nullable: true
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
      type: object
    UpdateFileContentVM:
      additionalProperties: false
      example:
        content: content
      properties:
        content:
          format: byte
          maxLength: 10000000
          type: string
      required:
      - content
      type: object
    UpdateFilePermissionsVM:
      additionalProperties: false
      example:
        newPermissions:
          owner:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          anon:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          other:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          groups:
            key:
              get: null
              create: null
              update: null
              administrate: null
              delete: null
              execute: null
          ownerId: ownerId
        administrate: null
      properties:
        newPermissions:
          $ref: '#/components/schemas/FilePermissions'
        administrate:
          $ref: '#/components/schemas/FileAdministrate'
      required:
      - administrate
      - newPermissions
      type: object
    UpdateGroupPermissionsVM:
      additionalProperties: false
      example:
        newPermissions:
          owner:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          anon:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          other:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          groups:
            key:
              get: null
              create: null
              update: null
              administrate: null
              delete: null
              execute: null
          ownerId: ownerId
        administrate: null
      properties:
        newPermissions:
          $ref: '#/components/schemas/GroupPermissions'
        administrate:
          $ref: '#/components/schemas/GroupAdministrate'
      required:
      - administrate
      - newPermissions
      type: object
    UpdatePrepareTemplateTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/UpdateTransformTaskBaseVM'
      properties:
        exportIds:
          items:
            type: string
          maxItems: 10
          nullable: true
          type: array
        pagesCount:
          format: int32
          maximum: 2147483647
          minimum: 0
          nullable: true
          type: integer
        reportParameters:
          additionalProperties:
            nullable: true
            type: string
          maxLength: 200
          nullable: true
          type: object
      type: object
    UpdateSubscriptionLocaleVM:
      additionalProperties: false
      example:
        locale: locale
      properties:
        locale:
          minLength: 1
          pattern: "^[a-zA-Z]{2,4}(-[a-zA-Z]{2,4}){0,2}$"
          type: string
      required:
      - locale
      type: object
    UpdateSubscriptionPermissionsVM:
      additionalProperties: false
      example:
        newPermissions:
          owner:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          anon:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          other:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          groups:
            key:
              get: null
              create: null
              update: null
              administrate: null
              delete: null
              execute: null
          ownerId: ownerId
        administrate: null
      properties:
        newPermissions:
          $ref: '#/components/schemas/SubscriptionPermissions'
        administrate:
          $ref: '#/components/schemas/SubscriptionAdministrate'
      required:
      - administrate
      - newPermissions
      type: object
    UpdateTaskBaseVM:
      additionalProperties: false
      discriminator:
        mapping:
          UpdateTaskBaseVM: '#/components/schemas/UpdateTaskBaseVM'
          UpdateFetchTaskVM: '#/components/schemas/UpdateFetchTaskVM'
          UpdateThumbnailReportTaskVM: '#/components/schemas/UpdateThumbnailReportTaskVM'
          UpdateThumbnailTemplateTaskVM: '#/components/schemas/UpdateThumbnailTemplateTaskVM'
          UpdateEmailTaskVM: '#/components/schemas/UpdateEmailTaskVM'
          UpdateWebhookTaskVM: '#/components/schemas/UpdateWebhookTaskVM'
          UpdateExportReportTaskVM: '#/components/schemas/UpdateExportReportTaskVM'
          UpdateExportTemplateTaskVM: '#/components/schemas/UpdateExportTemplateTaskVM'
          UpdatePrepareTemplateTaskVM: '#/components/schemas/UpdatePrepareTemplateTaskVM'
          UpdateFTPUploadTaskVM: '#/components/schemas/UpdateFTPUploadTaskVM'
        propertyName: $t
      example:
        cronExpression: cronExpression
        $t: $t
        delayedRunTime: 2000-01-23T04:56:07.000+00:00
        name: name
      properties:
        cronExpression:
          nullable: true
          type: string
        delayedRunTime:
          format: date-time
          nullable: true
          type: string
        name:
          maxLength: 50
          minLength: 1
          nullable: true
          type: string
        $t:
          type: string
      required:
      - $t
      type: object
    UpdateTaskPermissionsVM:
      additionalProperties: false
      example:
        administrate: null
        newPermissions:
          owner:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          anon:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          other:
            get: null
            create: null
            update: null
            administrate: null
            delete: null
            execute: null
          groups:
            key:
              get: null
              create: null
              update: null
              administrate: null
              delete: null
              execute: null
          ownerId: ownerId
      properties:
        administrate:
          $ref: '#/components/schemas/TaskAdministrate'
        newPermissions:
          $ref: '#/components/schemas/TaskPermissions'
      required:
      - administrate
      - newPermissions
      type: object
    UpdateThumbnailReportTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/UpdateTaskBaseVM'
      properties:
        reportId:
          nullable: true
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
      type: object
    UpdateThumbnailTemplateTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/UpdateTaskBaseVM'
      properties:
        templateId:
          nullable: true
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
      type: object
    UpdateTransformTaskBaseVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/UpdateTaskBaseVM'
      discriminator:
        mapping:
          UpdateExportReportTaskVM: '#/components/schemas/UpdateExportReportTaskVM'
          UpdateExportTemplateTaskVM: '#/components/schemas/UpdateExportTemplateTaskVM'
          UpdatePrepareTemplateTaskVM: '#/components/schemas/UpdatePrepareTemplateTaskVM'
        propertyName: $t
      properties:
        inputFile:
          $ref: '#/components/schemas/InputFileVM'
        locale:
          nullable: true
          pattern: "^[a-zA-Z]{2,4}(-[a-zA-Z]{2,4}){0,2}$"
          type: string
        outputFile:
          $ref: '#/components/schemas/OutputFileVM'
        transportIds:
          items:
            type: string
          maxItems: 10
          nullable: true
          type: array
        $t:
          type: string
      required:
      - $t
      type: object
    UpdateTransportTaskBaseVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/UpdateTaskBaseVM'
      discriminator:
        mapping:
          UpdateEmailTaskVM: '#/components/schemas/UpdateEmailTaskVM'
          UpdateWebhookTaskVM: '#/components/schemas/UpdateWebhookTaskVM'
          UpdateFTPUploadTaskVM: '#/components/schemas/UpdateFTPUploadTaskVM'
        propertyName: $t
      properties:
        inputFile:
          $ref: '#/components/schemas/InputFileVM'
        $t:
          type: string
      required:
      - $t
      type: object
    UpdateUserProfileVM:
      additionalProperties: false
      example:
        passwordNew2: passwordNew2
        name: name
        email: email
        passwordNew: passwordNew
        username: username
      properties:
        name:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        username:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        email:
          format: email
          maxLength: 250
          minLength: 0
          nullable: true
          type: string
        passwordNew:
          maxLength: 255
          minLength: 5
          nullable: true
          type: string
        passwordNew2:
          maxLength: 255
          minLength: 5
          nullable: true
          type: string
      type: object
    UpdateUserSettingsVM:
      additionalProperties: false
      example:
        subscribedNotifications:
        - null
        - null
        profileVisibility: ""
        defaultSubscription: defaultSubscription
        showHiddenFilesAndFolders: true
      properties:
        profileVisibility:
          allOf:
          - $ref: '#/components/schemas/ProfileVisibility'
          nullable: true
          required:
          - "false"
        defaultSubscription:
          nullable: true
          type: string
        showHiddenFilesAndFolders:
          nullable: true
          type: boolean
        subscribedNotifications:
          items:
            $ref: '#/components/schemas/AuditType'
          nullable: true
          type: array
      type: object
    UpdateWebhookTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/UpdateTransportTaskBaseVM'
      properties:
        headers:
          additionalProperties:
            nullable: true
            type: string
          maxLength: 100
          nullable: true
          type: object
        url:
          format: uri
          maxLength: 5000
          minLength: 1
          nullable: true
          type: string
      type: object
    UserProfileVM:
      additionalProperties: false
      example:
        isReadOnly: true
        name: name
        id: id
        email: email
        username: username
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        username:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        isReadOnly:
          type: boolean
      type: object
    UserSettingsVM:
      additionalProperties: false
      example:
        subscribedNotifications:
        - null
        - null
        profileVisibility: null
        defaultSubscription: defaultSubscription
        showHiddenFilesAndFolders: true
        slaAcceptedDateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        profileVisibility:
          $ref: '#/components/schemas/ProfileVisibility'
        defaultSubscription:
          nullable: true
          pattern: "^[A-Fa-f0-9]{24}$"
          type: string
        showHiddenFilesAndFolders:
          type: boolean
        slaAcceptedDateTime:
          format: date-time
          nullable: true
          type: string
        subscribedNotifications:
          items:
            $ref: '#/components/schemas/AuditType'
          nullable: true
          type: array
      type: object
    WebhookTaskVM:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/TransportTaskBaseVM'
      properties:
        headers:
          additionalProperties:
            nullable: true
            type: string
          nullable: true
          type: object
        url:
          format: uri
          maxLength: 5000
          minLength: 1
          nullable: true
          type: string
      type: object
    Reports_UploadFileV2_request:
      properties:
        TemplateId:
          nullable: true
          pattern: "(^$)|(^[A-Fa-f0-9]{24}$)"
          type: string
        Tags:
          items:
            type: string
          maxItems: 3
          maxLength: 50
          minLength: 1
          nullable: true
          type: array
        Icon:
          format: binary
          nullable: true
          type: string
        FileContent:
          format: binary
          type: string
      required:
      - FileContent
      type: object
    Templates_UpdateContentV2_request:
      properties:
        FileContent:
          format: binary
          type: string
      required:
      - FileContent
      type: object
    Templates_UploadFileV2_request:
      properties:
        Tags:
          items:
            type: string
          maxItems: 3
          maxLength: 50
          minLength: 1
          nullable: true
          type: array
        Icon:
          format: binary
          nullable: true
          type: string
        FileContent:
          format: binary
          type: string
      required:
      - FileContent
      type: object
  securitySchemes:
    JWT:
      bearerFormat: JWT
      description: "JWT Authorization header using the Bearer scheme. Example: \"\
        Authorization: Bearer {token}\""
      scheme: bearer
      type: http
    ApiKey:
      description: Put `apikey` in user name and apikey value in the password
      scheme: basic
      type: http

