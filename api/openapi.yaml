openapi: 3.0.1
info:
  title: FastReport Cloud
  version: v1
servers:
- url: /
security:
- JWT: []
  ApiKey: []
paths:
  /download/e/{id}/thumbnail:
    get:
      operationId: Download_GetExportThumbnail
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            text/json:
              schema:
                format: binary
                type: string
          description: Specified thumbnail was found
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad id provided
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is blocked
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not enough permissions for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Specified thumbnail was not found or user do not has access
            to it
      summary: Returns export's thumbnail
      tags:
      - Download
      x-accepts: application/json
  /download/e/{id}:
    get:
      operationId: Download_GetExport
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            text/json:
              schema:
                format: binary
                type: string
          description: Specified file was found
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad id provided
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is blocked
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not enough permissions for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Specified file was not found or user do not has access to the
            file
      summary: Returns a export file with specified id
      tags:
      - Download
      x-accepts: application/json
  /download/es/{archiveName}:
    get:
      operationId: Download_GetExports
      parameters:
      - description: ids separated with a ',' sign
        in: query
        name: ids
        schema:
          type: string
      - description: name of the created archive
        in: path
        name: archiveName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            text/json:
              schema:
                format: binary
                type: string
          description: Specified file was found
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad id provided
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is blocked
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not enough permissions for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Specified file was not found or user do not has access to the
            file
      summary: Returns a zip archive with selected ids
      tags:
      - Download
      x-accepts: application/json
  /download/r/{id}/thumbnail:
    get:
      operationId: Download_GetReportThumbnail
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            text/json:
              schema:
                format: binary
                type: string
          description: Specified thumbnail was found
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad id provided
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is blocked
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not enough permissions for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Specified thumbnail was not found or user do not has access
            to it
      summary: Returns report's thumbnail
      tags:
      - Download
      x-accepts: application/json
  /download/r/{id}:
    get:
      operationId: Download_GetReport
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            text/json:
              schema:
                format: binary
                type: string
          description: Specified file was found
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: bad id provided
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is blocked
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not enough permissions
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Specified file was not found or user do not has access to the
            file
      summary: Returns a prepared file with specified id
      tags:
      - Download
      x-accepts: application/json
  /download/rs/{archiveName}:
    get:
      operationId: Download_GetReports
      parameters:
      - description: ids separated with a ',' sign
        in: query
        name: ids
        schema:
          type: string
      - description: name of the created archive
        in: path
        name: archiveName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            text/json:
              schema:
                format: binary
                type: string
          description: File has been downloaded
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: wrong parameters provided
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is blocked
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: files is not found
      summary: Returns a zip archive with selected files
      tags:
      - Download
      x-accepts: application/json
  /download/t/{id}:
    get:
      operationId: Download_GetTemplate
      parameters:
      - description: template id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            text/json:
              schema:
                format: binary
                type: string
          description: Specified file was found
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: bad id provided
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is blocked
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not enough permissions
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Specified file was not found or user do not has access to the
            file
      summary: Returns a report file with specified id
      tags:
      - Download
      x-accepts: application/json
  /download/ts/{archiveName}:
    get:
      operationId: Download_GetTemplates
      parameters:
      - description: ids separated with a ',' sign
        in: query
        name: ids
        schema:
          type: string
      - description: name of the created archive
        in: path
        name: archiveName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            text/json:
              schema:
                format: binary
                type: string
          description: File has been downloaded
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: wrong parameters provided
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is blocked
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: files is not found
      summary: Returns a zip archive with selected files
      tags:
      - Download
      x-accepts: application/json
  /download/v{version}/HealthCheck:
    get:
      operationId: HealthCheckResultsProvider_Get
      parameters:
      - in: path
        name: version
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Success
      summary: Returns Ok
      tags:
      - HealthCheck
      x-accepts: application/json
  /api/data/v1/DataSources:
    get:
      operationId: DataSources_GetAvailableDataSources
      parameters:
      - description: subscription id
        in: query
        name: subscriptionId
        schema:
          type: string
      - description: how many data sources will be skipped
        in: query
        name: skip
        schema:
          default: 0
          format: int32
          type: integer
      - description: how many data sources will be taken
        in: query
        name: take
        schema:
          default: 10
          format: int32
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DataSourcesVM'
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourcesVM'
            text/json:
              schema:
                $ref: '#/components/schemas/DataSourcesVM'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: "Returns all of the data sources, that current user have permission\
        \ for in a subscription\r\nif subscription id is null, returns all data sources,\
        \ that current user have permission for"
      tags:
      - DataSources
      x-accepts: application/json
    post:
      operationId: DataSources_CreateDataSource
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateDataSourceVM'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataSourceVM'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateDataSourceVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateDataSourceVM'
        description: create viewmodel
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DataSourceVM'
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceVM'
            text/json:
              schema:
                $ref: '#/components/schemas/DataSourceVM'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Create new data source
      tags:
      - DataSources
      x-codegen-request-body-name: viewModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/data/v1/DataSources/{id}:
    delete:
      operationId: DataSources_DeleteDataSource
      parameters:
      - description: data source id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Delete data source by id
      tags:
      - DataSources
      x-accepts: application/json
    get:
      operationId: DataSources_GetDataSource
      parameters:
      - description: data source id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DataSourceVM'
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceVM'
            text/json:
              schema:
                $ref: '#/components/schemas/DataSourceVM'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Get data source by id
      tags:
      - DataSources
      x-accepts: application/json
  /api/data/v1/DataSources/{id}/rename:
    put:
      operationId: DataSources_RenameDataSource
      parameters:
      - description: data source id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RenameDataSourceVM'
          application/json:
            schema:
              $ref: '#/components/schemas/RenameDataSourceVM'
          text/json:
            schema:
              $ref: '#/components/schemas/RenameDataSourceVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RenameDataSourceVM'
        description: rename viewmodel
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DataSourceVM'
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceVM'
            text/json:
              schema:
                $ref: '#/components/schemas/DataSourceVM'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Rename data source by id
      tags:
      - DataSources
      x-codegen-request-body-name: renameModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/data/v1/DataSources/{id}/ConnectionString:
    put:
      operationId: DataSources_UpdateConnectionString
      parameters:
      - description: data source id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateDataSourceConnectionStringVM'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataSourceConnectionStringVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateDataSourceConnectionStringVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateDataSourceConnectionStringVM'
        description: update viewmodel
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DataSourceVM'
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceVM'
            text/json:
              schema:
                $ref: '#/components/schemas/DataSourceVM'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Update data source's connection string by id
      tags:
      - DataSources
      x-codegen-request-body-name: updateModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/data/v1/DataSources/{id}/fetch:
    get:
      operationId: DataSources_FetchData
      parameters:
      - description: datasource's id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: This should connect to a database and set data structure
      tags:
      - DataSources
      x-accepts: application/json
  /api/data/v1/DataSources/{id}/updateSubscription:
    put:
      operationId: DataSources_UpdateSubscriptionDataSource
      parameters:
      - description: data source id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateDataSourceSubscriptionVM'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataSourceSubscriptionVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateDataSourceSubscriptionVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateDataSourceSubscriptionVM'
        description: update subscription viewmodel
        required: false
      responses:
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Update data source's subscription
      tags:
      - DataSources
      x-codegen-request-body-name: updatesubscriptionModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/data/v1/DataSources/{id}/permissions:
    delete:
      operationId: DataSources_RevokePermission
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DataSourcePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/DataSourcePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/DataSourcePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DataSourcePermissionsVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DataSourcePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourcePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/DataSourcePermissions'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content: {}
          description: Server Error
      tags:
      - DataSources
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
    get:
      operationId: DataSources_GetPermissions
      parameters:
      - description: data source id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DataSourcePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourcePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/DataSourcePermissions'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Get all Data source permissions
      tags:
      - DataSources
      x-accepts: application/json
    put:
      operationId: DataSources_AddPermission
      parameters:
      - description: data source id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DataSourcePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/DataSourcePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/DataSourcePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DataSourcePermissionsVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DataSourcePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourcePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/DataSourcePermissions'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Add Permission
      tags:
      - DataSources
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/data/v1/HealthCheck:
    get:
      operationId: HealthCheckData_Get
      responses:
        "200":
          content: {}
          description: Report processor is alive!
      summary: healthcheck
      tags:
      - HealthCheck
      x-accepts: application/json
  /api/admin/v1/ApiKeys/{userId}:
    delete:
      operationId: AdminApiKeys_DeleteApiKey
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteApiKeyVM'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteApiKeyVM'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteApiKeyVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteApiKeyVM'
        required: false
      responses:
        "204":
          content: {}
          description: Succesfully deleted
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Apikey or user is not found
      summary: Delete an apikey
      tags:
      - AdminApiKeys
      x-codegen-request-body-name: model
      x-contentType: application/json-patch+json
      x-accepts: application/json
    get:
      description: Always work, it should make only 200 response.
      operationId: AdminApiKeys_GetApiKeys
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiKeysVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiKeysVM'
          description: Succesfully retured
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
      summary: Returns list with all api keys of a specified user
      tags:
      - AdminApiKeys
      x-accepts: application/json
    post:
      operationId: AdminApiKeys_CreateApiKey
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateApiKeyVM'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiKeyVM'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateApiKeyVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateApiKeyVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiKeyVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiKeyVM'
          description: Succesfully created
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: user is not found
      summary: Create a new apikey, 5 apikeys for user. Hardcoded for ddos.
      tags:
      - AdminApiKeys
      x-codegen-request-body-name: model
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/DataSource:
    get:
      operationId: AdminDataSource_GetDataSources
      parameters:
      - description: how many datasources will be skiped
        in: query
        name: skip
        schema:
          format: int32
          type: integer
      - description: how many datasources will be taken
        in: query
        name: take
        schema:
          format: int32
          type: integer
      - description: Subscription Id
        in: query
        name: subscriptionId
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DataSourcesVM'
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourcesVM'
            text/json:
              schema:
                $ref: '#/components/schemas/DataSourcesVM'
          description: Succesfully retured
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
      summary: Get list of datasources from database
      tags:
      - AdminDataSource
      x-accepts: application/json
    post:
      operationId: AdminDataSource_CreateDataSource
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateDataSourceAdminVM'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataSourceAdminVM'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateDataSourceAdminVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateDataSourceAdminVM'
        description: create VM
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DataSourceVM'
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceVM'
            text/json:
              schema:
                $ref: '#/components/schemas/DataSourceVM'
          description: Succesfully created
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Datasource is not found
      summary: Create new data source
      tags:
      - AdminDataSource
      x-codegen-request-body-name: createVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/DataSource/{id}:
    delete:
      operationId: AdminDataSource_DeleteDataSource
      parameters:
      - description: datasource's id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Succesfully deleted
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Datasource is not found
      summary: Delete datasource by id
      tags:
      - AdminDataSource
      x-accepts: application/json
    get:
      operationId: AdminDataSource_GetDataSource
      parameters:
      - description: datasource's id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DataSourceVM'
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceVM'
            text/json:
              schema:
                $ref: '#/components/schemas/DataSourceVM'
          description: Succesfully retured
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Datasource is not found
      summary: Get datasource by id
      tags:
      - AdminDataSource
      x-accepts: application/json
    put:
      operationId: AdminDataSource_UpdateDataSource
      parameters:
      - description: datasource's id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateDataSourceVM'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataSourceVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateDataSourceVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateDataSourceVM'
        description: update VM
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DataSourceVM'
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceVM'
            text/json:
              schema:
                $ref: '#/components/schemas/DataSourceVM'
          description: Succesfully updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Datasource is not found
      summary: Update datasource with update VM
      tags:
      - AdminDataSource
      x-codegen-request-body-name: updateVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/DataSource/{id}/fetch:
    get:
      operationId: AdminDataSource_FetchData
      parameters:
      - description: datasource's id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: This should connect to a database and set data structure
      tags:
      - AdminDataSource
      x-accepts: application/json
  /api/admin/v1/DataSource/{id}/permissions:
    delete:
      operationId: AdminDataSource_RevokePermission
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DataSourcePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/DataSourcePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/DataSourcePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DataSourcePermissionsVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DataSourcePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourcePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/DataSourcePermissions'
          description: Succesfully revoked
        "204":
          content: {}
          description: happens sometimes
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Datasource is not found
      summary: Revoke permissions to datasource
      tags:
      - AdminDataSource
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
    get:
      operationId: AdminDataSource_GetPermissions
      parameters:
      - description: data source id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DataSourcePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourcePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/DataSourcePermissions'
          description: Succesfully retured
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Datasource is not found
      summary: Get all Data source permissions
      tags:
      - AdminDataSource
      x-accepts: application/json
    put:
      operationId: AdminDataSource_AddPermission
      parameters:
      - description: data source id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DataSourcePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/DataSourcePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/DataSourcePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DataSourcePermissionsVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DataSourcePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourcePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/DataSourcePermissions'
          description: Succesfully added
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Datasource is not found
      summary: Add Permission to datasource
      tags:
      - AdminDataSource
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/DataSource/{dataSourceId}/permissions:
    post:
      operationId: AdminDataSource_UpdatePermissions
      parameters:
      - in: path
        name: dataSourceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DataSourcePermissions'
          application/json:
            schema:
              $ref: '#/components/schemas/DataSourcePermissions'
          text/json:
            schema:
              $ref: '#/components/schemas/DataSourcePermissions'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DataSourcePermissions'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DataSourcePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourcePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/DataSourcePermissions'
          description: Succesfully updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Datasource is not found
      summary: Update permissions to datasource
      tags:
      - AdminDataSource
      x-codegen-request-body-name: newPermissions
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/ExportFolders/{id}:
    delete:
      description: User with Delete permission can access the method.
      operationId: AdminExportFolders_DeleteFolder
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: delete folder's content
        in: query
        name: recursive
        schema:
          default: true
          type: boolean
      responses:
        "204":
          content: {}
          description: Folder succesfully deleted
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
        "500":
          content: {}
          description: Exception caught while deleting
      summary: Delete specified folder
      tags:
      - AdminExports
      x-accepts: application/json
    get:
      operationId: AdminExportFolders_GetFolder
      parameters:
      - description: Identifier of a folder
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder with this id is not found
      summary: Returns a folder by id
      tags:
      - AdminExports
      x-accepts: application/json
    put:
      description: User with Create File permission can access this method.
      operationId: AdminExportFolders_UpdateFolder
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FileUpdateVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FileUpdateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FileUpdateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FileUpdateVM'
        description: folder's view model
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: folder has been uploaded
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderVM view model is not valid
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Update a folder
      tags:
      - AdminExports
      x-codegen-request-body-name: folderVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/ExportFolders:
    get:
      description: If no folders, then the endpoint will return empty list
      operationId: AdminExportFolders_GetFolders
      parameters:
      - description: Variable for pagination, defautl value is 0
        in: query
        name: skip
        schema:
          default: 0
          format: int32
          type: integer
      - description: Variable for pagination, default value is 10
        in: query
        name: take
        schema:
          default: 10
          format: int32
          type: integer
      - description: Subscription Id
        in: query
        name: subscriptionId
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilesVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FilesVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FilesVM'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
      summary: Returns a list of folders
      tags:
      - AdminExports
      x-accepts: application/json
  /api/admin/v1/ExportFolders/{subscriptionId}:
    post:
      description: User with a Create File permisison can access this method.
      operationId: AdminExportFolders_PostFolder
      parameters:
      - description: Identifier of subscription
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: User owner id
        in: query
        name: ownerId
        schema:
          type: string
      - description: Folder to upload id
        in: query
        name: folderId
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ExportFolderCreateVM'
          application/json:
            schema:
              $ref: '#/components/schemas/ExportFolderCreateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/ExportFolderCreateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ExportFolderCreateVM'
        description: folder create vm
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: New folder has been created)
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Parent folder id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription not found
        "500":
          content: {}
          description: Exception caught while creating
      summary: Create a folder
      tags:
      - AdminExports
      x-codegen-request-body-name: folderVm
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/ExportFolders/{id}/permissions:
    delete:
      operationId: AdminExportFolders_RevokePermission
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
        description: File permissions vm
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: succesfully revoked
        "204":
          content: {}
          description: happens sometimes
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Exception caught
      summary: Revoke permission
      tags:
      - AdminExports
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
    get:
      operationId: AdminExportFolders_GetPermissions
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
      summary: Get all folder permissions
      tags:
      - AdminExports
      x-accepts: application/json
    post:
      operationId: AdminExportFolders_UpdatePermissions
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissions'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissions'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissions'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissions'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: succesfully revoked
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Exception caught
      summary: Revoke permission
      tags:
      - AdminExports
      x-codegen-request-body-name: newPermissions
      x-contentType: application/json-patch+json
      x-accepts: application/json
    put:
      operationId: AdminExportFolders_AddPermission
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
        description: File permissions vm
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: succesfully added
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Caught exception
      summary: Add permission
      tags:
      - AdminExports
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/Exports:
    get:
      description: If no files, then the endpoint will return empty list
      operationId: AdminExports_GetFiles
      parameters:
      - description: Variable for pagination, defautl value is 0
        in: query
        name: skip
        schema:
          default: 0
          format: int32
          type: integer
      - description: Variable for pagination, default value is 10
        in: query
        name: take
        schema:
          default: 10
          format: int32
          type: integer
      - description: Subscription Id
        in: query
        name: subscriptionId
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ExportsVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ExportsVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ExportsVM'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Files endpoint's not found
      summary: Returns a list of files
      tags:
      - AdminExports
      x-accepts: application/json
    post:
      description: User with Create Entity permission can access this method.
      operationId: AdminExports_UploadFile
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ExportCreateAdminVM'
          application/json:
            schema:
              $ref: '#/components/schemas/ExportCreateAdminVM'
          text/json:
            schema:
              $ref: '#/components/schemas/ExportCreateAdminVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ExportCreateAdminVM'
        description: file's view model
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ExportVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
          description: File has been uploaded
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: fileVM view model is not valid
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription or folder is not found
        "413":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Uploaded file is too big
        "500":
          content: {}
          description: catched exception while uploading
      summary: Upload a file to the specified folder
      tags:
      - AdminExports
      x-codegen-request-body-name: fileVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/Exports/{id}/File:
    put:
      description: User with Create Entity permission can access this method.
      operationId: AdminExports_UpdateFile
      parameters:
      - description: file id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FileUpdateVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FileUpdateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FileUpdateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FileUpdateVM'
        description: file's view model
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ExportVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
          description: File has been uploaded
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: fileVM view model is not valid
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: original file not found
      summary: Update a file
      tags:
      - AdminExports
      x-codegen-request-body-name: fileVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/Exports/{id}:
    delete:
      description: User with Delete permission can access the method.
      operationId: AdminExports_DeleteFile
      parameters:
      - description: file id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: File succesfully deleted
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
      summary: Delete specified file
      tags:
      - AdminExports
      x-accepts: application/json
    get:
      operationId: AdminExports_GetFile
      parameters:
      - description: Identifier of file
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ExportVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File with this id is not found
      summary: Returns a file by id
      tags:
      - AdminExports
      x-accepts: application/json
  /api/admin/v1/Exports/{id}/permissions:
    delete:
      operationId: AdminExports_RevokePermission
      parameters:
      - description: file id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
        description: permissions to revoke
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: succesfully revoked
        "204":
          content: {}
          description: happens sometimes
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Exception caught
      summary: Revoke (remove) file permissions
      tags:
      - AdminExports
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
    get:
      operationId: AdminExports_GetPermissions
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null or not hex24
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
      summary: Get all file permissions
      tags:
      - AdminExports
      x-accepts: application/json
    put:
      operationId: AdminExports_AddPermission
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
        description: permissions to add
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: succesfully added
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
      summary: Add file permissions
      tags:
      - AdminExports
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/Exports/{fileId}/permissions:
    post:
      operationId: AdminExports_UpdatePermissions
      parameters:
      - in: path
        name: fileId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissions'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissions'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissions'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissions'
        description: permissions model
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: succesfully updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Caught exception while upddating
      summary: Update file permissions
      tags:
      - AdminExports
      x-codegen-request-body-name: newPermissions
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/Groups:
    get:
      description: If no groups, then the endpoint will return empty list
      operationId: AdminGroups_GetGroups
      parameters:
      - description: Variable for pagination, defautl value is 0
        in: query
        name: skip
        schema:
          default: 0
          format: int32
          type: integer
      - description: Variable for pagination, default value is 10
        in: query
        name: take
        schema:
          default: 10
          format: int32
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GroupsVM'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsVM'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupsVM'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The request is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
      summary: Returns a list of groups
      tags:
      - AdminGroups
      x-accepts: application/json
    post:
      operationId: AdminGroups_CreateGroup
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateGroupAdminVM'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupAdminVM'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateGroupAdminVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateGroupAdminVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GroupVM'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupVM'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupVM'
          description: Succesfully created
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The request is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription not found
      summary: Create a new group, returns a new model
      tags:
      - AdminGroups
      x-codegen-request-body-name: viewModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/Groups/{id}:
    delete:
      operationId: AdminGroups_DeleteGroup
      parameters:
      - description: Identifier of group
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Succesfully deleted
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The request is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Group with this id is not found
      summary: Delete a group by id
      tags:
      - AdminGroups
      x-accepts: application/json
    get:
      operationId: AdminGroups_GetGroup
      parameters:
      - description: Identifier of group
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GroupVM'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupVM'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupVM'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The request is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Group with this id is not found
      summary: Returns a group by id
      tags:
      - AdminGroups
      x-accepts: application/json
    put:
      operationId: AdminGroups_UpdateGroup
      parameters:
      - description: Identifier of group
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateGroupVM'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateGroupVM'
        description: update vm
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GroupVM'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupVM'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupVM'
          description: Succesfully updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The request is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Group with this id is not found
      summary: Update a group by id
      tags:
      - AdminGroups
      x-codegen-request-body-name: viewModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/Groups/{id}/permissions:
    delete:
      operationId: AdminGroups_RevokePermission
      parameters:
      - description: Identifier of group
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/GroupPermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/GroupPermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/GroupPermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GroupPermissionsVM'
        description: Model with permissions
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GroupPermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupPermissions'
          description: Succesfully revoked
        "204":
          content: {}
          description: happens sometimes
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The request is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Group with this identifier is not found
      summary: Remove (revoke) permissions in user group by identifier
      tags:
      - AdminGroups
      x-codegen-request-body-name: viewModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
    get:
      operationId: AdminGroups_GetPermissions
      parameters:
      - description: Identifier of group
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GroupPermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupPermissions'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The request is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Group with this identifier is not found
      summary: Gets group permissions by identifier
      tags:
      - AdminGroups
      x-accepts: application/json
    put:
      operationId: AdminGroups_AddPermission
      parameters:
      - description: Identifier of group
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/GroupPermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/GroupPermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/GroupPermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GroupPermissionsVM'
        description: Model of permission
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GroupPermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupPermissions'
          description: Succesfully added
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The request is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Group with this identifier is not found
      summary: Add permissions to user group
      tags:
      - AdminGroups
      x-codegen-request-body-name: viewModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/Groups/{groupId}/permissions:
    post:
      operationId: AdminGroups_UpdatePermissions
      parameters:
      - description: Identifier of group
        in: path
        name: groupId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/GroupPermissions'
          application/json:
            schema:
              $ref: '#/components/schemas/GroupPermissions'
          text/json:
            schema:
              $ref: '#/components/schemas/GroupPermissions'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GroupPermissions'
        description: Model with new permissions
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GroupPermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupPermissions'
          description: Succesfully updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The request is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Group with this identifier is not found
      summary: Update permissions in user group by identifier
      tags:
      - AdminGroups
      x-codegen-request-body-name: newPermissions
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/HealthCheck:
    get:
      operationId: AdminHealthCheckAdmin_Get
      responses:
        "200":
          content: {}
          description: Success
      summary: healthcheck
      tags:
      - AdminHealthCheck
      x-accepts: application/json
  /api/admin/v1/ReportFolders/{id}:
    delete:
      description: User with Delete permission can access the method.
      operationId: AdminReportFolders_DeleteFolder
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: delete folder's content
        in: query
        name: recursive
        schema:
          default: true
          type: boolean
      responses:
        "204":
          content: {}
          description: Folder succesfully deleted
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
        "500":
          content: {}
          description: Exception caught while deleting
      summary: Delete specified folder
      tags:
      - AdminReports
      x-accepts: application/json
    get:
      operationId: AdminReportFolders_GetFolder
      parameters:
      - description: Identifier of a folder
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder with this id is not found
      summary: Returns a folder by id
      tags:
      - AdminReports
      x-accepts: application/json
    put:
      description: User with Create File permission can access this method.
      operationId: AdminReportFolders_UpdateFolder
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FileUpdateVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FileUpdateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FileUpdateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FileUpdateVM'
        description: folder's view model
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: folder has been uploaded
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderVM view model is not valid
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Update a folder
      tags:
      - AdminReports
      x-codegen-request-body-name: folderVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/ReportFolders:
    get:
      description: If no folders, then the endpoint will return empty list
      operationId: AdminReportFolders_GetFolders
      parameters:
      - description: Variable for pagination, defautl value is 0
        in: query
        name: skip
        schema:
          default: 0
          format: int32
          type: integer
      - description: Variable for pagination, default value is 10
        in: query
        name: take
        schema:
          default: 10
          format: int32
          type: integer
      - description: Subscription Id
        in: query
        name: subscriptionId
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilesVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FilesVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FilesVM'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
      summary: Returns a list of folders
      tags:
      - AdminReports
      x-accepts: application/json
  /api/admin/v1/ReportFolders/{subscriptionId}:
    post:
      description: User with a Create File permisison can access this method.
      operationId: AdminReportFolders_PostFolder
      parameters:
      - description: Identifier of subscription
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: User owner id
        in: query
        name: ownerId
        schema:
          type: string
      - description: Folder to upload id
        in: query
        name: folderId
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReportFolderCreateVM'
          application/json:
            schema:
              $ref: '#/components/schemas/ReportFolderCreateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/ReportFolderCreateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReportFolderCreateVM'
        description: folder create vm
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: New folder has been created)
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Parent folder id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription not found
        "500":
          content: {}
          description: Exception caught while creating
      summary: Create a folder
      tags:
      - AdminReports
      x-codegen-request-body-name: folderVm
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/ReportFolders/{id}/permissions:
    delete:
      operationId: AdminReportFolders_RevokePermission
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
        description: File permissions vm
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: succesfully revoked
        "204":
          content: {}
          description: happens sometimes
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Exception caught
      summary: Revoke permission
      tags:
      - AdminReports
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
    get:
      operationId: AdminReportFolders_GetPermissions
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
      summary: Get all folder permissions
      tags:
      - AdminReports
      x-accepts: application/json
    post:
      operationId: AdminReportFolders_UpdatePermissions
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissions'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissions'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissions'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissions'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: succesfully revoked
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Exception caught
      summary: Revoke permission
      tags:
      - AdminReports
      x-codegen-request-body-name: newPermissions
      x-contentType: application/json-patch+json
      x-accepts: application/json
    put:
      operationId: AdminReportFolders_AddPermission
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
        description: File permissions vm
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: succesfully added
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Caught exception
      summary: Add permission
      tags:
      - AdminReports
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/Reports:
    get:
      description: If no files, then the endpoint will return empty list
      operationId: AdminReports_GetFiles
      parameters:
      - description: Variable for pagination, defautl value is 0
        in: query
        name: skip
        schema:
          default: 0
          format: int32
          type: integer
      - description: Variable for pagination, default value is 10
        in: query
        name: take
        schema:
          default: 10
          format: int32
          type: integer
      - description: Subscription Id
        in: query
        name: subscriptionId
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReportsVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ReportsVM'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Files endpoint's not found
      summary: Returns a list of files
      tags:
      - AdminReports
      x-accepts: application/json
    post:
      description: User with Create Entity permission can access this method.
      operationId: AdminReports_UploadFile
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReportCreateAdminVM'
          application/json:
            schema:
              $ref: '#/components/schemas/ReportCreateAdminVM'
          text/json:
            schema:
              $ref: '#/components/schemas/ReportCreateAdminVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReportCreateAdminVM'
        description: file's view model
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReportVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
          description: File has been uploaded
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: fileVM view model is not valid
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription or folder is not found
        "413":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Uploaded file is too big
        "500":
          content: {}
          description: catched exception while uploading
      summary: Upload a file to the specified folder
      tags:
      - AdminReports
      x-codegen-request-body-name: fileVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/Reports/{id}/File:
    put:
      description: User with Create Entity permission can access this method.
      operationId: AdminReports_UpdateFile
      parameters:
      - description: file id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FileUpdateVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FileUpdateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FileUpdateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FileUpdateVM'
        description: file's view model
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReportVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
          description: File has been uploaded
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: fileVM view model is not valid
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: original file not found
      summary: Update a file
      tags:
      - AdminReports
      x-codegen-request-body-name: fileVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/Reports/{id}:
    delete:
      description: User with Delete permission can access the method.
      operationId: AdminReports_DeleteFile
      parameters:
      - description: file id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: File succesfully deleted
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
      summary: Delete specified file
      tags:
      - AdminReports
      x-accepts: application/json
    get:
      operationId: AdminReports_GetFile
      parameters:
      - description: Identifier of file
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReportVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File with this id is not found
      summary: Returns a file by id
      tags:
      - AdminReports
      x-accepts: application/json
  /api/admin/v1/Reports/{id}/permissions:
    delete:
      operationId: AdminReports_RevokePermission
      parameters:
      - description: file id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
        description: permissions to revoke
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: succesfully revoked
        "204":
          content: {}
          description: happens sometimes
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Exception caught
      summary: Revoke (remove) file permissions
      tags:
      - AdminReports
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
    get:
      operationId: AdminReports_GetPermissions
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null or not hex24
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
      summary: Get all file permissions
      tags:
      - AdminReports
      x-accepts: application/json
    put:
      operationId: AdminReports_AddPermission
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
        description: permissions to add
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: succesfully added
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
      summary: Add file permissions
      tags:
      - AdminReports
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/Reports/{fileId}/permissions:
    post:
      operationId: AdminReports_UpdatePermissions
      parameters:
      - in: path
        name: fileId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissions'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissions'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissions'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissions'
        description: permissions model
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: succesfully updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Caught exception while upddating
      summary: Update file permissions
      tags:
      - AdminReports
      x-codegen-request-body-name: newPermissions
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/Analytics/Subscriptions/{subscriptionId}/AnonCheck:
    get:
      operationId: AdminSubscriptionAnalytics_CheckAnonPermissions
      parameters:
      - description: subscription id
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AnalysisResultsVM'
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisResultsVM'
            text/json:
              schema:
                $ref: '#/components/schemas/AnalysisResultsVM'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
      summary: This will check if there are any files, related to subscription that
        available for anonymous users
      tags:
      - AdminSubscriptionAnalytics
      x-accepts: application/json
  /api/admin/v1/Analytics/Subscriptions/{subscriptionId}/OtherCheck:
    get:
      operationId: AdminSubscriptionAnalytics_CheckOtherPermissions
      parameters:
      - description: subscription id
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AnalysisResultsVM'
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisResultsVM'
            text/json:
              schema:
                $ref: '#/components/schemas/AnalysisResultsVM'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
      summary: This will check if there are any files, related to subscription that
        not available for subscription users
      tags:
      - AdminSubscriptionAnalytics
      x-accepts: application/json
  /api/admin/v1/Analytics/Subscriptions/UnrelatedDocuments:
    get:
      operationId: AdminSubscriptionAnalytics_GetUnrelatedDocuments
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AnalysisResultsVM'
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisResultsVM'
            text/json:
              schema:
                $ref: '#/components/schemas/AnalysisResultsVM'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
      summary: This will check if there are any files, that not related to any existing
        subscription
      tags:
      - AdminSubscriptionAnalytics
      x-accepts: application/json
  /api/admin/v1/Analytics/Subscriptions/DeadSubsInUsers:
    get:
      operationId: AdminSubscriptionAnalytics_GetDeadSubsInUsers
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AnalysisResultsVM'
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisResultsVM'
            text/json:
              schema:
                $ref: '#/components/schemas/AnalysisResultsVM'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
      summary: This will check if there are any deleted subscriptions in users sub
        lists
      tags:
      - AdminSubscriptionAnalytics
      x-accepts: application/json
  /api/admin/v1/Analytics/Subscriptions/EmptySubs:
    get:
      operationId: AdminSubscriptionAnalytics_GetEmptySubs
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AnalysisResultsVM'
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisResultsVM'
            text/json:
              schema:
                $ref: '#/components/schemas/AnalysisResultsVM'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
      summary: This will check if there are any subscriptions without users
      tags:
      - AdminSubscriptionAnalytics
      x-accepts: application/json
  /api/admin/v1/Analytics/Subscriptions/LostFileChunks:
    get:
      operationId: AdminSubscriptionAnalytics_GetLostFileChunks
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AnalysisResultsVM'
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisResultsVM'
            text/json:
              schema:
                $ref: '#/components/schemas/AnalysisResultsVM'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
      summary: This will check if there are any files in gridFS, which not related
        to any file model
      tags:
      - AdminSubscriptionAnalytics
      x-accepts: application/json
  /api/admin/v1/Subscriptions/{subscriptionId}/invites:
    get:
      operationId: AdminSubscriptionInvites_GetInvites
      parameters:
      - description: Idenitifier of subscription
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionInvitesVM'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionInvitesVM'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionInvitesVM'
          description: Succesfully added
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription or user is not found
        "500":
          content: {}
          description: Exception thrown
      summary: "Get list of invites in a subscription,\r\nthe added users will be\
        \ displayed in the list of users of the subscription,\r\nand these users will\
        \ also have an active subscription."
      tags:
      - AdminSubscriptionInvites
      x-accepts: application/json
  /api/admin/v1/Subscriptions/{subscriptionId}/invite:
    post:
      operationId: AdminSubscriptionInvites_CreateInvite
      parameters:
      - description: id
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionInviteVM'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionInviteVM'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionInviteVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionInviteVM'
        description: create VM
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionInviteVM'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionInviteVM'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionInviteVM'
          description: Successfully created
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Request is wrong
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not enough permissions
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: there is no subscription with such id
        "500":
          content: {}
          description: exception caught
      summary: Create invite to subscription
      tags:
      - AdminSubscriptionInvites
      x-codegen-request-body-name: createInviteVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/Subscriptions/{subscriptionId}/invite/{accesstoken}:
    delete:
      operationId: AdminSubscriptionInvites_DeleteInvite
      parameters:
      - description: id
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: invite's token
        in: path
        name: accesstoken
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successfully deleted
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Request is wrong
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not enough permissions
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: there is no subscription with such id
        "500":
          content: {}
          description: exception caught
      summary: Rename subscription
      tags:
      - AdminSubscriptionInvites
      x-accepts: application/json
  /api/admin/v1/Subscriptions/{id}/Renew:
    post:
      operationId: AdminSubscriptionPeriod_RenewSubscription
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionPeriodVM'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionPeriodVM'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionPeriodVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionPeriodVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionVM'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionVM'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionVM'
          description: Succesfully created
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Plan is not found
        "500":
          content: {}
          description: Exception caught while renewing
      summary: Create a new subscripiton period, move current period to old
      tags:
      - AdminSubscriptionPeriod
      x-codegen-request-body-name: viewModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/SubscriptionPlans:
    get:
      description: If no active subscription plans, then the endpoint will return
        empty list
      operationId: AdminSubscriptionPlans_GetSubscriptionPlans
      parameters:
      - description: Variable for pagination, defautl value is 0
        in: query
        name: skip
        schema:
          default: 0
          format: int32
          type: integer
      - description: Variable for pagination, default value is 10
        in: query
        name: take
        schema:
          default: 10
          format: int32
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionPlansVM'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPlansVM'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPlansVM'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
      summary: Returns a list of active subscription plans that can be issued to the
        user.
      tags:
      - AdminSubscriptionPlans
      x-accepts: application/json
    post:
      operationId: AdminSubscriptionPlans_CreateSubscriptionPlan
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionPlanVM'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionPlanVM'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionPlanVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionPlanVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionPlanVM'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPlanVM'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPlanVM'
          description: Succesfully created
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "500":
          content: {}
          description: exception caught
      summary: Create a new subscription plan, returns a new model
      tags:
      - AdminSubscriptionPlans
      x-codegen-request-body-name: viewModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/SubscriptionPlans/{id}:
    delete:
      operationId: AdminSubscriptionPlans_DeleteSubscriptionPlan
      parameters:
      - description: Identifier of subsctiption plan
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Succesfully deleted
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription plan with this id is not found
        "500":
          content: {}
          description: exception caught
      summary: Delete a subscription plan.
      tags:
      - AdminSubscriptionPlans
      x-accepts: application/json
    get:
      operationId: AdminSubscriptionPlans_GetSubscriptionPlan
      parameters:
      - description: Identifier of subsctiption plan
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionPlanVM'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPlanVM'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPlanVM'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription plan with this id is not found
        "500":
          content: {}
          description: exception caught
      summary: Returns a subscription plan. Not all subscriptions can be issued for
        customer.
      tags:
      - AdminSubscriptionPlans
      x-accepts: application/json
    put:
      operationId: AdminSubscriptionPlans_UpdateSubscriptionPlan
      parameters:
      - description: Identifier of subsctiption plan
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionPlanVM'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionPlanVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionPlanVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionPlanVM'
        description: Update VM
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionPlanVM'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPlanVM'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPlanVM'
          description: Succesfully updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription plan with this id is not found
        "500":
          content: {}
          description: exception caught
      summary: Update a subscription plan.
      tags:
      - AdminSubscriptionPlans
      x-codegen-request-body-name: viewModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/Analytics/Solve:
    post:
      operationId: AdminSubscriptionProblemSolving_SolveProblems
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AnalysisResultsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisResultsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/AnalysisResultsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AnalysisResultsVM'
        required: false
      responses:
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
      summary: Solve problems provided by FastReport.Cloud.Admin.Controllers.SubscriptionAnalyticsController
      tags:
      - AdminSubscriptionProblemSolving
      x-codegen-request-body-name: analysisResults
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/Subscriptions:
    get:
      operationId: AdminSubscriptions_GetSubscriptions
      parameters:
      - description: Variable for pagination, defautl value is 0
        in: query
        name: skip
        schema:
          default: 0
          format: int32
          type: integer
      - description: Variable for pagination, default value is 10
        in: query
        name: take
        schema:
          default: 10
          format: int32
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AdminSubscriptionsVM'
            application/json:
              schema:
                $ref: '#/components/schemas/AdminSubscriptionsVM'
            text/json:
              schema:
                $ref: '#/components/schemas/AdminSubscriptionsVM'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
      summary: Returns a list of all subscriptions
      tags:
      - AdminSubscriptions
      x-accepts: application/json
    post:
      operationId: AdminSubscriptions_CreateSubscription
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionVM'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionVM'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionVM'
        description: View model
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AdminSubscriptionVM'
            application/json:
              schema:
                $ref: '#/components/schemas/AdminSubscriptionVM'
            text/json:
              schema:
                $ref: '#/components/schemas/AdminSubscriptionVM'
          description: Succesfully created
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription plan is not found
      summary: Create a new subscription based on some plan
      tags:
      - AdminSubscriptions
      x-codegen-request-body-name: viewModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/Subscriptions/{id}:
    delete:
      operationId: AdminSubscriptions_DeleteSubscription
      parameters:
      - description: Identifier of subscription
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Succesfully deleted
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is not found
      summary: Delete the subscription by id
      tags:
      - AdminSubscriptions
      x-accepts: application/json
    get:
      operationId: AdminSubscriptions_GetSubscription
      parameters:
      - description: Identifier of subscription
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AdminSubscriptionVM'
            application/json:
              schema:
                $ref: '#/components/schemas/AdminSubscriptionVM'
            text/json:
              schema:
                $ref: '#/components/schemas/AdminSubscriptionVM'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is not found
        "500":
          content: {}
          description: exception caught
      summary: Returns the subscription by id
      tags:
      - AdminSubscriptions
      x-accepts: application/json
    put:
      operationId: AdminSubscriptions_UpdateSubscription
      parameters:
      - description: Identifier of subscription
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionVM'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionVM'
        description: View model
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AdminSubscriptionVM'
            application/json:
              schema:
                $ref: '#/components/schemas/AdminSubscriptionVM'
            text/json:
              schema:
                $ref: '#/components/schemas/AdminSubscriptionVM'
          description: Succesfully updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is not found
        "500":
          content: {}
          description: exception caught
      summary: Update the subscription by id
      tags:
      - AdminSubscriptions
      x-codegen-request-body-name: viewModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/Subscriptions/{id}/recount:
    get:
      operationId: AdminSubscriptions_ReCountSubscription
      parameters:
      - description: Identifier of subscription
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: collection names to recount listed through ',' sign
        in: query
        name: collectionNames
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                additionalProperties:
                  format: int64
                  type: integer
                type: object
            application/json:
              schema:
                additionalProperties:
                  format: int64
                  type: integer
                type: object
            text/json:
              schema:
                additionalProperties:
                  format: int64
                  type: integer
                type: object
          description: Succesfully recounted
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is not found
        "500":
          content: {}
          description: exception caught
      summary: Recount subscription's files and folders size
      tags:
      - AdminSubscriptions
      x-accepts: application/json
  /api/admin/v1/Subscriptions/{id}/permissions:
    delete:
      operationId: AdminSubscriptions_RevokePermission
      parameters:
      - description: subscription id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SubscriptionPermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionPermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/SubscriptionPermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SubscriptionPermissionsVM'
        description: permissions VM
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionPermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPermissions'
          description: Success
        "204":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Revoke permissions to subscription
      tags:
      - AdminSubscriptions
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
    get:
      operationId: AdminSubscriptions_GetPermissions
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionPermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPermissions'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: Get all subscription permissions
      tags:
      - AdminSubscriptions
      x-accepts: application/json
    post:
      operationId: AdminSubscriptions_UpdatePermissions
      parameters:
      - description: subscription id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SubscriptionPermissions'
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionPermissions'
          text/json:
            schema:
              $ref: '#/components/schemas/SubscriptionPermissions'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SubscriptionPermissions'
        description: permissions VM
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionPermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPermissions'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Update permissions to subscription
      tags:
      - AdminSubscriptions
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
    put:
      operationId: AdminSubscriptions_AddPermission
      parameters:
      - description: subscription id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SubscriptionPermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionPermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/SubscriptionPermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SubscriptionPermissionsVM'
        description: permissions VM
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionPermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPermissions'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Add permissions to subscription
      tags:
      - AdminSubscriptions
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/Subscriptions/stat/new/{from}/{to}:
    get:
      description: If no subscriptions, then the endpoint will return empty dic
      operationId: AdminSubscriptions_GetNewSibscriptionsPerMonth
      parameters:
      - description: A starting date for stats calculation
        in: path
        name: from
        required: true
        schema:
          format: date-time
          type: string
      - description: An ending date for stats calculation
        in: path
        name: to
        required: true
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
            text/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
      summary: 'Returns a key-value pair of new(renew) subscriptions count per month
        for a specified time span: (month, number of new subscriptions)'
      tags:
      - AdminSubscriptions
      x-accepts: application/json
  /api/admin/v1/TemplateFolders/{id}:
    delete:
      description: User with Delete permission can access the method.
      operationId: AdminTemplateFolders_DeleteFolder
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: delete folder's content
        in: query
        name: recursive
        schema:
          default: true
          type: boolean
      responses:
        "204":
          content: {}
          description: Folder succesfully deleted
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
        "500":
          content: {}
          description: Exception caught while deleting
      summary: Delete specified folder
      tags:
      - AdminTemplates
      x-accepts: application/json
    get:
      operationId: AdminTemplateFolders_GetFolder
      parameters:
      - description: Identifier of a folder
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder with this id is not found
      summary: Returns a folder by id
      tags:
      - AdminTemplates
      x-accepts: application/json
    put:
      description: User with Create File permission can access this method.
      operationId: AdminTemplateFolders_UpdateFolder
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FileUpdateVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FileUpdateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FileUpdateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FileUpdateVM'
        description: folder's view model
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: folder has been uploaded
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderVM view model is not valid
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Update a folder
      tags:
      - AdminTemplates
      x-codegen-request-body-name: folderVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/TemplateFolders:
    get:
      description: If no folders, then the endpoint will return empty list
      operationId: AdminTemplateFolders_GetFolders
      parameters:
      - description: Variable for pagination, defautl value is 0
        in: query
        name: skip
        schema:
          default: 0
          format: int32
          type: integer
      - description: Variable for pagination, default value is 10
        in: query
        name: take
        schema:
          default: 10
          format: int32
          type: integer
      - description: Subscription Id
        in: query
        name: subscriptionId
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilesVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FilesVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FilesVM'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
      summary: Returns a list of folders
      tags:
      - AdminTemplates
      x-accepts: application/json
  /api/admin/v1/TemplateFolders/{subscriptionId}:
    post:
      description: User with a Create File permisison can access this method.
      operationId: AdminTemplateFolders_PostFolder
      parameters:
      - description: Identifier of subscription
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: User owner id
        in: query
        name: ownerId
        schema:
          type: string
      - description: Folder to upload id
        in: query
        name: folderId
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TemplateFolderCreateVM'
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateFolderCreateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/TemplateFolderCreateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TemplateFolderCreateVM'
        description: folder create vm
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: New folder has been created)
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Parent folder id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription not found
        "500":
          content: {}
          description: Exception caught while creating
      summary: Create a folder
      tags:
      - AdminTemplates
      x-codegen-request-body-name: folderVm
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/TemplateFolders/{id}/permissions:
    delete:
      operationId: AdminTemplateFolders_RevokePermission
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
        description: File permissions vm
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: succesfully revoked
        "204":
          content: {}
          description: happens sometimes
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Exception caught
      summary: Revoke permission
      tags:
      - AdminTemplates
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
    get:
      operationId: AdminTemplateFolders_GetPermissions
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
      summary: Get all folder permissions
      tags:
      - AdminTemplates
      x-accepts: application/json
    post:
      operationId: AdminTemplateFolders_UpdatePermissions
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissions'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissions'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissions'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissions'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: succesfully revoked
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Exception caught
      summary: Revoke permission
      tags:
      - AdminTemplates
      x-codegen-request-body-name: newPermissions
      x-contentType: application/json-patch+json
      x-accepts: application/json
    put:
      operationId: AdminTemplateFolders_AddPermission
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
        description: File permissions vm
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: succesfully added
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Caught exception
      summary: Add permission
      tags:
      - AdminTemplates
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/Templates:
    get:
      description: If no files, then the endpoint will return empty list
      operationId: AdminTemplates_GetFiles
      parameters:
      - description: Variable for pagination, defautl value is 0
        in: query
        name: skip
        schema:
          default: 0
          format: int32
          type: integer
      - description: Variable for pagination, default value is 10
        in: query
        name: take
        schema:
          default: 10
          format: int32
          type: integer
      - description: Subscription Id
        in: query
        name: subscriptionId
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TemplatesVM'
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesVM'
            text/json:
              schema:
                $ref: '#/components/schemas/TemplatesVM'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Files endpoint's not found
      summary: Returns a list of files
      tags:
      - AdminTemplates
      x-accepts: application/json
    post:
      description: User with Create Entity permission can access this method.
      operationId: AdminTemplates_UploadFile
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TemplateCreateAdminVM'
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateCreateAdminVM'
          text/json:
            schema:
              $ref: '#/components/schemas/TemplateCreateAdminVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TemplateCreateAdminVM'
        description: file's view model
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TemplateVM'
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
            text/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
          description: File has been uploaded
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: fileVM view model is not valid
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription or folder is not found
        "413":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Uploaded file is too big
        "500":
          content: {}
          description: catched exception while uploading
      summary: Upload a file to the specified folder
      tags:
      - AdminTemplates
      x-codegen-request-body-name: fileVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/Templates/{id}/File:
    put:
      description: User with Create Entity permission can access this method.
      operationId: AdminTemplates_UpdateFile
      parameters:
      - description: file id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FileUpdateVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FileUpdateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FileUpdateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FileUpdateVM'
        description: file's view model
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TemplateVM'
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
            text/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
          description: File has been uploaded
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: fileVM view model is not valid
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: original file not found
      summary: Update a file
      tags:
      - AdminTemplates
      x-codegen-request-body-name: fileVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/Templates/{id}:
    delete:
      description: User with Delete permission can access the method.
      operationId: AdminTemplates_DeleteFile
      parameters:
      - description: file id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: File succesfully deleted
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
      summary: Delete specified file
      tags:
      - AdminTemplates
      x-accepts: application/json
    get:
      operationId: AdminTemplates_GetFile
      parameters:
      - description: Identifier of file
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TemplateVM'
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
            text/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File with this id is not found
      summary: Returns a file by id
      tags:
      - AdminTemplates
      x-accepts: application/json
  /api/admin/v1/Templates/{id}/permissions:
    delete:
      operationId: AdminTemplates_RevokePermission
      parameters:
      - description: file id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
        description: permissions to revoke
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: succesfully revoked
        "204":
          content: {}
          description: happens sometimes
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Exception caught
      summary: Revoke (remove) file permissions
      tags:
      - AdminTemplates
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
    get:
      operationId: AdminTemplates_GetPermissions
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null or not hex24
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
      summary: Get all file permissions
      tags:
      - AdminTemplates
      x-accepts: application/json
    put:
      operationId: AdminTemplates_AddPermission
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
        description: permissions to add
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: succesfully added
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
      summary: Add file permissions
      tags:
      - AdminTemplates
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/Templates/{fileId}/permissions:
    post:
      operationId: AdminTemplates_UpdatePermissions
      parameters:
      - in: path
        name: fileId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissions'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissions'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissions'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissions'
        description: permissions model
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: succesfully updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Caught exception while upddating
      summary: Update file permissions
      tags:
      - AdminTemplates
      x-codegen-request-body-name: newPermissions
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/Users:
    get:
      description: If no users, then the endpoint will return empty list
      operationId: AdminUsers_GetUsers
      parameters:
      - description: Variable for pagination, defautl value is 0
        in: query
        name: skip
        schema:
          default: 0
          format: int32
          type: integer
      - description: Variable for pagination, default value is 10
        in: query
        name: take
        schema:
          default: 10
          format: int32
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UsersVM'
            application/json:
              schema:
                $ref: '#/components/schemas/UsersVM'
            text/json:
              schema:
                $ref: '#/components/schemas/UsersVM'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
      summary: Returns a list of users
      tags:
      - AdminUsers
      x-accepts: application/json
    post:
      operationId: AdminUsers_RegisterUser
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RegisterUserVM'
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserVM'
          text/json:
            schema:
              $ref: '#/components/schemas/RegisterUserVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RegisterUserVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserVM'
            application/json:
              schema:
                $ref: '#/components/schemas/UserVM'
            text/json:
              schema:
                $ref: '#/components/schemas/UserVM'
          description: Succesfully created
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription not found
        "500":
          content: {}
          description: exception caught
      summary: Register a new user in the cloud with specified id, returns a new model
      tags:
      - AdminUsers
      x-codegen-request-body-name: viewModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/Users/{id}:
    delete:
      operationId: AdminUsers_DeleteUser
      parameters:
      - description: Identifier of user
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Succesfully obliterated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User with this id is not found
        "500":
          content: {}
          description: exception caught
      summary: Delete a user from cloud database by id
      tags:
      - AdminUsers
      x-accepts: application/json
    get:
      operationId: AdminUsers_GetUser
      parameters:
      - description: Identifier of user
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserVM'
            application/json:
              schema:
                $ref: '#/components/schemas/UserVM'
            text/json:
              schema:
                $ref: '#/components/schemas/UserVM'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User with this id is not found
        "500":
          content: {}
          description: exception caught
      summary: Returns a user view model by id
      tags:
      - AdminUsers
      x-accepts: application/json
    put:
      operationId: AdminUsers_UpdateUser
      parameters:
      - description: Identifier of the user
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateUserVM'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateUserVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateUserVM'
        description: update VM
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserVM'
            application/json:
              schema:
                $ref: '#/components/schemas/UserVM'
            text/json:
              schema:
                $ref: '#/components/schemas/UserVM'
          description: Succesfully updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User with this id is not found
        "500":
          content: {}
          description: exception caught
      summary: Update an user by id
      tags:
      - AdminUsers
      x-codegen-request-body-name: viewModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/admin/v1/Users/stat/new/{from}/{to}:
    get:
      description: If no users, then the endpoint will return empty dic
      operationId: AdminUsers_GetNewUsersPerMonth
      parameters:
      - description: A starting date for stats calculation
        in: path
        name: from
        required: true
        schema:
          format: date-time
          type: string
      - description: An ending date for stats calculation
        in: path
        name: to
        required: true
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
            text/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
      summary: 'Returns a key-value pair of new users count per month for a specified
        time span: (month, number of new users)'
      tags:
      - AdminUsers
      x-accepts: application/json
  /api/manage/v1/ApiKeys:
    delete:
      operationId: ApiKeys_DeleteApiKey
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteApiKeyVM'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteApiKeyVM'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteApiKeyVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteApiKeyVM'
        required: true
      responses:
        "204":
          content: {}
          description: Succesfully deleted
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The request is wrong
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: No such apikey found
        "500":
          content: {}
          description: exception thrown
      summary: Delete an apikey
      tags:
      - ApiKeys
      x-codegen-request-body-name: model
      x-contentType: application/json-patch+json
      x-accepts: application/json
    get:
      description: Always work, it should make only 200 response.
      operationId: ApiKeys_GetApiKeys
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiKeysVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiKeysVM'
          description: Succesfully retured
        "500":
          content: {}
          description: Exception somehow thrown (barely possible)
      summary: Returns list with all api keys of current user
      tags:
      - ApiKeys
      x-accepts: application/json
    post:
      operationId: ApiKeys_CreateApiKey
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateApiKeyVM'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiKeyVM'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateApiKeyVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateApiKeyVM'
        required: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiKeyVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiKeyVM'
          description: Succesfully created
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: wrong model provided or exception thrown (user's attempts to
            create sixth key for example throwns an exception)
      summary: Create a new apikey, 5 apikeys for user. Hardcoded for ddos.
      tags:
      - ApiKeys
      x-codegen-request-body-name: model
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/manage/v1/Groups/{id}:
    delete:
      operationId: Groups_DeleteGroup
      parameters:
      - description: Identifier of group
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Succesfully delete
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscripiton is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Group with this identifier is not found
        "500":
          content: {}
          description: Exception thrown
      summary: Delete group by identifier
      tags:
      - Groups
      x-accepts: application/json
    get:
      operationId: Groups_GetGroup
      parameters:
      - description: Identifier of group
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GroupVM'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupVM'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupVM'
          description: Succesfully retured
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Group with this identifier is not found
        "500":
          content: {}
          description: Exception thrown
      summary: Gets group by identifier
      tags:
      - Groups
      x-accepts: application/json
  /api/manage/v1/Groups:
    get:
      operationId: Groups_GetGroupList
      parameters:
      - description: How many groups need to skip
        in: query
        name: skip
        schema:
          default: 0
          format: int32
          type: integer
      - description: How many groups need to take
        in: query
        name: take
        schema:
          default: 10
          format: int32
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GroupsVM'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsVM'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupsVM'
          description: Succesfully retured
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Current user is not found
      summary: Gets list of user groups
      tags:
      - Groups
      x-accepts: application/json
    post:
      operationId: Groups_CreateGroup
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateGroupVM'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupVM'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateGroupVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateGroupVM'
        description: Model for creating
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GroupVM'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupVM'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupVM'
          description: Succesfully created
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Information from view model is not found
      summary: Create a new user group
      tags:
      - Groups
      x-codegen-request-body-name: viewModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/manage/v1/Groups/{id}/rename:
    put:
      operationId: Groups_RenameGroup
      parameters:
      - description: Identifier of group
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RenameGroupVM'
          application/json:
            schema:
              $ref: '#/components/schemas/RenameGroupVM'
          text/json:
            schema:
              $ref: '#/components/schemas/RenameGroupVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RenameGroupVM'
        description: Model for renaming
        required: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GroupVM'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupVM'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupVM'
          description: Succesfully renamed
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Group with this identifier is not found
        "500":
          content: {}
          description: Exception thrown
      summary: Rename group by identifier
      tags:
      - Groups
      x-codegen-request-body-name: viewModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/manage/v1/Groups/{id}/permissions:
    delete:
      operationId: Groups_RevokePermission
      parameters:
      - description: Identifier of group
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/GroupPermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/GroupPermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/GroupPermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GroupPermissionsVM'
        description: Model with permissions
        required: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GroupPermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupPermissions'
          description: Succesfully retured
        "204":
          content: {}
          description: happens sometimes
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Group with this identifier is not found
      summary: Remove (revoke) permissions in user group by identifier
      tags:
      - Groups
      x-codegen-request-body-name: viewModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
    get:
      operationId: Groups_GetPermissions
      parameters:
      - description: Identifier of group
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GroupPermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupPermissions'
          description: Succesfully retured
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Group with this identifier is not found
      summary: Gets group permissions by identifier
      tags:
      - Groups
      x-accepts: application/json
    put:
      operationId: Groups_AddPermission
      parameters:
      - description: Identifier of group
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/GroupPermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/GroupPermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/GroupPermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GroupPermissionsVM'
        description: Model of permission
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GroupPermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupPermissions'
          description: Succesfully added
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Group with this identifier is not found
      summary: Add permissions to user group
      tags:
      - Groups
      x-codegen-request-body-name: viewModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/manage/v1/Groups/{id}/Users:
    get:
      operationId: GroupUsers_GetUsersInGroup
      parameters:
      - description: Identifier of group
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: how many to skip
        in: query
        name: skip
        schema:
          default: 0
          format: int32
          type: integer
      - description: how many to take
        in: query
        name: take
        schema:
          default: 10
          format: int32
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GroupUsersVM'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUsersVM'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupUsersVM'
          description: Succesfully retured
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Group with this identifier is not found
        "500":
          content: {}
          description: Exception thrown
      summary: Returns users in the group by identifier
      tags:
      - GroupUsers
      x-accepts: application/json
  /api/manage/v1/Groups/{id}/Users/{userId}:
    delete:
      operationId: GroupUsers_RemoveFromGroup
      parameters:
      - description: Identifier of group
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Identifier of user
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Succesfully removed
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Group with this identifier is not found
        "500":
          content: {}
          description: Exception thrown
      summary: Remove user from the group by identifier
      tags:
      - GroupUsers
      x-accepts: application/json
    put:
      operationId: GroupUsers_AddUserToGroup
      parameters:
      - description: Identifier of group
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Identifier of user
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Succesfully retured
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Group with this identifier is not found
        "500":
          content: {}
          description: Exception thrown
      summary: Add user to the group by identifier
      tags:
      - GroupUsers
      x-accepts: application/json
  /api/manage/v1/Groups/{id}/leave:
    delete:
      operationId: GroupUsers_LeaveFromGroup
      parameters:
      - description: Identifier of group
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Succesfully removed
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Group with this identifier is not found
        "500":
          content: {}
          description: Exception thrown
      summary: Leave from the group
      tags:
      - GroupUsers
      x-accepts: application/json
  /api/manage/v1/HealthCheck:
    get:
      operationId: HealthCheckManagement_Get
      responses:
        "200":
          content: {}
          description: Success
      summary: healthcheck
      tags:
      - HealthCheck
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{id}/groups:
    get:
      operationId: SubscriptionGroups_GetGroupList
      parameters:
      - description: subscripiton id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GroupsVM'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsVM'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupsVM'
          description: Everything is all right (list of groups may be empty)
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: id is not hex24
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have permisison to get groups from this subscription
            (or in your default (1st) subscription)
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: there is no subscription with provided id found, or user don't
            even have a subscription
      summary: returns list of groups in the subscription
      tags:
      - SubscriptionGroups
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{subscriptionId}/invites:
    get:
      operationId: SubscriptionInvites_GetInvites
      parameters:
      - description: Idenitifier of subscription
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionInvitesVM'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionInvitesVM'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionInvitesVM'
          description: Succesfully added
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription or user is not found
        "500":
          content: {}
          description: Exception thrown
      summary: "Get list of invites in a subscription,\r\nthe added users will be\
        \ displayed in the list of users of the subscription,\r\nand these users will\
        \ also have an active subscription."
      tags:
      - SubscriptionInvites
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{subscriptionId}/invite:
    post:
      operationId: SubscriptionInvites_CreateInvite
      parameters:
      - description: id
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionInviteVM'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionInviteVM'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionInviteVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionInviteVM'
        description: create VM
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionVM'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionVM'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionVM'
          description: Successfully created
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Request is wrong
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not enough permissions
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: there is no subscription with such id
        "500":
          content: {}
          description: exception caught
      summary: Create invite to subscription
      tags:
      - SubscriptionInvites
      x-codegen-request-body-name: createInviteVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{subscriptionId}/invite/{accesstoken}:
    delete:
      operationId: SubscriptionInvites_DeleteInvite
      parameters:
      - description: id
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: invite's token
        in: path
        name: accesstoken
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successfully deleted
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Request is wrong
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not enough permissions
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: there is no subscription with such id
        "500":
          content: {}
          description: exception caught
      summary: Rename subscription
      tags:
      - SubscriptionInvites
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{subscriptionId}/invite/{accessToken}/accept:
    get:
      operationId: SubscriptionInvites_AcceptInvite
      parameters:
      - description: Idenitifier of subscription
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: access token of the subscription
        in: path
        name: accessToken
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Succesfully added
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription or user is not found
        "500":
          content: {}
          description: Exception thrown
      summary: "Add a user to the subscription using invite,\r\nthe added users will\
        \ be displayed in the list of users of the subscription,\r\nand these users\
        \ will also have an active subscription."
      tags:
      - SubscriptionInvites
      x-accepts: application/json
  /api/manage/v1/SubscriptionPlans/{id}:
    get:
      operationId: SubscriptionPlans_GetSubscriptionPlan
      parameters:
      - description: Identifier of subsctiption plan
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionPlanVM'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPlanVM'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPlanVM'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription plan with this id is not found
        "500":
          content: {}
          description: Exception thrown
      summary: Returns a subscription plan. Not all subscriptions can be issued for
        customer.
      tags:
      - SubscriptionPlans
      x-accepts: application/json
  /api/manage/v1/SubscriptionPlans:
    get:
      description: If no active subscription plans, then the endpoint will return
        empty list
      operationId: SubscriptionPlans_GetSubscriptionPlans
      parameters:
      - description: Variable for pagination, defautl value is 0
        in: query
        name: skip
        schema:
          default: 0
          format: int32
          type: integer
      - description: Variable for pagination, default value is 10
        in: query
        name: take
        schema:
          default: 10
          format: int32
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionPlansVM'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPlansVM'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPlansVM'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
      summary: Returns a list of active subscription plans that can be issued to the
        user.
      tags:
      - SubscriptionPlans
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{id}:
    get:
      operationId: Subscriptions_GetSubscription
      parameters:
      - description: Identifier of subscription
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionVM'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionVM'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionVM'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is not found
      summary: Returns the subscription by id
      tags:
      - Subscriptions
      x-accepts: application/json
  /api/manage/v1/Subscriptions:
    get:
      operationId: Subscriptions_GetSubscriptions
      parameters:
      - description: Variable for pagination, defautl value is 0
        in: query
        name: skip
        schema:
          default: 0
          format: int32
          type: integer
      - description: Variable for pagination, default value is 10
        in: query
        name: take
        schema:
          default: 10
          format: int32
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionsVM'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionsVM'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionsVM'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: unrealistic skip 'n take provided
      summary: Returns a list of all subscriptions of current user
      tags:
      - Subscriptions
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{subscriptionId}/rename:
    put:
      operationId: Subscriptions_RenameSubscription
      parameters:
      - description: id
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RenameSubscriptionVM'
          application/json:
            schema:
              $ref: '#/components/schemas/RenameSubscriptionVM'
          text/json:
            schema:
              $ref: '#/components/schemas/RenameSubscriptionVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RenameSubscriptionVM'
        description: rename VM
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionVM'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionVM'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionVM'
          description: Successfully renamed
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Request is wrong
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not enough permissions
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: there is no subscription with such id (or user have no permission)
      summary: Rename subscription
      tags:
      - Subscriptions
      x-codegen-request-body-name: renameSubscriptionVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{subscriptionId}/Locale:
    put:
      operationId: Subscriptions_UpdateLocale
      parameters:
      - description: id
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionLocaleVM'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionLocaleVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionLocaleVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionLocaleVM'
        description: update VM
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionVM'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionVM'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionVM'
          description: Successfully renamed
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Request is wrong
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not enough permissions
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: there is no subscription with such id (or user have no permission)
      summary: Update subscription's default locale
      tags:
      - Subscriptions
      x-codegen-request-body-name: updateModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{subscriptionId}/defaultPermissions:
    get:
      operationId: Subscriptions_GetDefaultPermissions
      parameters:
      - description: id
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DefaultPermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/DefaultPermissions'
          description: Successfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Request is wrong
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not enough permissions
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: there is no subscription with such id
      summary: Get subscription's default permissions for new entities
      tags:
      - Subscriptions
      x-accepts: application/json
    put:
      operationId: Subscriptions_UpdateDefaultPermissions
      parameters:
      - description: id
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateDefaultPermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDefaultPermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateDefaultPermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateDefaultPermissionsVM'
        description: update default permissions VM
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DefaultPermissionsVM'
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPermissionsVM'
            text/json:
              schema:
                $ref: '#/components/schemas/DefaultPermissionsVM'
          description: Successfully changed
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Request is wrong
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not enough permissions
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: there is no subscription with such id
      summary: Change subscription's default permissions for new entities
      tags:
      - Subscriptions
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{id}/permissions:
    delete:
      operationId: Subscriptions_RevokePermission
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SubscriptionPermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionPermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/SubscriptionPermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SubscriptionPermissionsVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionPermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPermissions'
          description: Succesfully removed
        "204":
          content: {}
          description: happens sometimes
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is not found
      summary: Remove permissions from a subscription
      tags:
      - Subscriptions
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
    get:
      operationId: Subscriptions_GetPermissions
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionPermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPermissions'
          description: Succesfully returned
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
      summary: Get permissions for a subscription by id
      tags:
      - Subscriptions
      x-accepts: application/json
    put:
      operationId: Subscriptions_AddPermission
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SubscriptionPermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionPermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/SubscriptionPermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SubscriptionPermissionsVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionPermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPermissions'
          description: Succesfully added
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is not found
      summary: Add permissions for a subscription
      tags:
      - Subscriptions
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{subscriptionId}/users/{userId}:
    delete:
      operationId: SubscriptionUsers_RemoveUser
      parameters:
      - description: Idenitifier of subscription
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Idenitifier of user
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Succesfully deleted
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription id outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription or user is not found
        "500":
          content: {}
          description: Exception thrown
      summary: "Delete a user from the subscription,\r\nthe added users will be displayed\
        \ in the list of users of the subscription,\r\nand these users will also have\
        \ an active subscription."
      tags:
      - SubscriptionUsers
      x-accepts: application/json
    put:
      operationId: SubscriptionUsers_AddUser
      parameters:
      - description: Idenitifier of subscription
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Idenitifier of user
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Succesfully added
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription or user is not found
        "500":
          content: {}
          description: Exception thrown
      summary: "Add a user to the subscription,\r\nthe added users will be displayed\
        \ in the list of users of the subscription,\r\nand these users will also have\
        \ an active subscription."
      tags:
      - SubscriptionUsers
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{subscriptionId}/leave:
    delete:
      operationId: SubscriptionUsers_LeaveSubscripiton
      parameters:
      - description: Idenitifier of subscription
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Succesfully deleted
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription id outdated
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription or user is not found
        "500":
          content: {}
          description: Exception thrown
      summary: Allows user to leave subscription,.
      tags:
      - SubscriptionUsers
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{subscriptionId}/users:
    get:
      operationId: SubscriptionUsers_GetUsers
      parameters:
      - description: Idenitifier of subscription
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: How many entities skip
        in: query
        name: skip
        schema:
          default: 0
          format: int32
          type: integer
      - description: How many entities take
        in: query
        name: take
        schema:
          default: 10
          format: int32
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionUsersVM'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionUsersVM'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionUsersVM'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is not found
        "500":
          content: {}
          description: Exception thrown
      summary: Returns all users of subscription
      tags:
      - SubscriptionUsers
      x-accepts: application/json
  /api/manage/v1/Subscriptions/{subscriptionId}/user/{userId}/groups:
    get:
      operationId: SubscriptionUsers_GetUserGroups
      parameters:
      - description: Idenitifier of subscription
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: user id
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GroupsVM'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsVM'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupsVM'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is not found
        "500":
          content: {}
          description: Exception thrown
      summary: Returns all users of subscription
      tags:
      - SubscriptionUsers
      x-accepts: application/json
  /api/manage/v1/UserProfile:
    get:
      operationId: UserProfile_GetMyProfile
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserProfileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/UserProfileVM'
          description: Succesfully returned
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Return current profile of the current user
      tags:
      - UserProfile
      x-accepts: application/json
    put:
      description: This method is only allowed for local sign in via intranet
      operationId: UserProfile_UpdateMyProfile
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserProfileUpdateVM'
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileUpdateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/UserProfileUpdateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserProfileUpdateVM'
        required: false
      responses:
        "200":
          content: {}
          description: Succesfully updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: The reqeust is wrong
      summary: Update profile of the current user
      tags:
      - UserProfile
      x-codegen-request-body-name: model
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/manage/v1/UserProfile/{userId}:
    get:
      operationId: UserProfile_GetUserProfile
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserProfileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/UserProfileVM'
          description: Succesfully returned
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User not found
      summary: "Return user profile by user identifier.\r\nIf the user did not provide\
        \ information about himself or blocked, then the endpoint will return an empty\
        \ model. (only id)"
      tags:
      - UserProfile
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/CountFolderAndFiles:
    get:
      description: User with a Get Count permission can access this method.
      operationId: ExportFolderAndFile_GetCount
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CountVM'
            application/json:
              schema:
                $ref: '#/components/schemas/CountVM'
            text/json:
              schema:
                $ref: '#/components/schemas/CountVM'
          description: Returns count of the files in a specified folder
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get count of files and folders what contains in a specified folder
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/ListFolderAndFiles:
    get:
      description: User with a Get Entity permission can access this method.
      operationId: ExportFolderAndFile_GetFoldersAndFiles
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: number of folder and files, that have to be skipped
        in: query
        name: skip
        schema:
          default: 0
          format: int32
          type: integer
      - description: number of folder and files, that have to be returned
        in: query
        name: take
        schema:
          default: 10
          format: int32
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilesVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FilesVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FilesVM'
          description: Returns list of the files from a specified folder
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
      summary: Get all folders and files from specified folder
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/permissions:
    delete:
      operationId: ExportFolders_RevokePermission
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
        description: permisisons to revoke
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: permissions revoked
        "204":
          content: {}
          description: happens sometimes
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: filePermissionsVM or id is not valid
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folder is not found
      summary: Revoke folder permission
      tags:
      - Exports
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
    get:
      operationId: ExportFolders_GetPermissions
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: returned permissions
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: id is not valid
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folder is not found
      summary: Get all folder permissions
      tags:
      - Exports
      x-accepts: application/json
    put:
      operationId: ExportFolders_AddPermission
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
        description: filePermissions view model
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: Permissions added
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: filePermissionsVM or id is not valid
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folder is not found
      summary: Add folder permission
      tags:
      - Exports
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}:
    delete:
      description: User with a Delete Entity permission can access this method.
      operationId: ExportFolders_DeleteFolder
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: delete all childs
        in: query
        name: recursive
        schema:
          default: true
          type: boolean
      responses:
        "204":
          content: {}
          description: Folder succesfully deleted
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Delete specified folder
      tags:
      - Exports
      x-accepts: application/json
    get:
      description: User with a Get Entity permission can access this method.
      operationId: ExportFolders_GetFolder
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Returns specified folder
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get specified folder
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/Breadcrumbs:
    get:
      description: User with a Get Entity permission can access this method.
      operationId: ExportFolders_GetBreadcrumbs
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BreadcrumbsVM'
            application/json:
              schema:
                $ref: '#/components/schemas/BreadcrumbsVM'
            text/json:
              schema:
                $ref: '#/components/schemas/BreadcrumbsVM'
          description: Returns breadcrumbs parents list (starts from root folder)
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get specified folder breadcrumbs
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/ListFolders:
    get:
      description: User with a Get Entity permission can access this method.
      operationId: ExportFolders_GetFolders
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: number of files, that have to be skipped
        in: query
        name: skip
        schema:
          default: 0
          format: int32
          type: integer
      - description: number of files, that have to be returned
        in: query
        name: take
        schema:
          default: 10
          format: int32
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilesVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FilesVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FilesVM'
          description: Gets all folders from a specified folder
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get all folders from specified folder
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/CountFolders:
    get:
      description: User with a Get Count permission can access this method.
      operationId: ExportFolders_GetFoldersCount
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CountVM'
            application/json:
              schema:
                $ref: '#/components/schemas/CountVM'
            text/json:
              schema:
                $ref: '#/components/schemas/CountVM'
          description: Returns count of folders in a specified folder
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get count of folders what contains in a specified folder
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/Root:
    get:
      description: "&gt; Breakchange. Now user model doesn't contain a root folders.\r\
        \nThis method can return error 400 and 404 when subscription is not found."
      operationId: ExportFolders_GetRootFolder
      parameters:
      - in: query
        name: subscriptionId
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Gets user's root folder (without parents)
        "400":
          content: {}
          description: Error with the request.
        "403":
          content: {}
          description: No permissions to get root folder
        "404":
          content: {}
          description: Not found subscription
      summary: Get user's root folder (without parents)
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/Move/{folderId}:
    post:
      description: "User with a Update Place permission for a folder and Create Entity\r\
        \nfor a Parent Folder can access this method."
      operationId: ExportFolders_MoveFolder
      parameters:
      - description: moving folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: destination folder id
        in: path
        name: folderId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Folder has been moved to a specified folder
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId or parentFolderId is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Move folder to a specified folder
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/Copy/{folderId}:
    post:
      description: "User with a Update Place permission for a folder and Create Entity\r\
        \nfor a Parent Folder can access this method."
      operationId: ExportFolders_CopyFolder
      parameters:
      - description: moving folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: destination folder id
        in: path
        name: folderId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Folder has been moved to a specified folder
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId or parentFolderId is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Move folder to a specified folder
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/Folder:
    post:
      description: User with a Create Entity permisison can access this method.
      operationId: ExportFolders_PostFolder
      parameters:
      - description: Identifier of parent folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ExportFolderCreateVM'
          application/json:
            schema:
              $ref: '#/components/schemas/ExportFolderCreateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/ExportFolderCreateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ExportFolderCreateVM'
        description: create VM
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: New folder has been created)
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Parent folder id is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: parent folder/subscription not found
      summary: Create folder
      tags:
      - Exports
      x-codegen-request-body-name: folderVm
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/Rename:
    put:
      description: User with a Update Name permision can access this method.
      operationId: ExportFolders_RenameFolder
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FolderRenameVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FolderRenameVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FolderRenameVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FolderRenameVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Folder name has been updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Rename a folder
      tags:
      - Exports
      x-codegen-request-body-name: nameModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/Icon:
    put:
      description: User with a Update Icon permission can access this method.
      operationId: ExportFolders_UpdateIcon
      parameters:
      - description: Identifier of folder
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FolderIconVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FolderIconVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FolderIconVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FolderIconVM'
        description: Update icon model
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Folder's icon has been updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Update a folder's icon
      tags:
      - Exports
      x-codegen-request-body-name: iconModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/UpdateTags:
    put:
      description: User with a Update Tags permission can access this method.
      operationId: ExportFolders_UpdateTags
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FolderTagsUpdateVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FolderTagsUpdateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FolderTagsUpdateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FolderTagsUpdateVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Tags has been updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId or Tags is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Update tags
      tags:
      - Exports
      x-codegen-request-body-name: tagsModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Exports/File/{id}:
    delete:
      description: User with Delete permission can access the method.
      operationId: Exports_DeleteFile
      parameters:
      - description: file id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: File succesfully deleted
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Exception thrown
      summary: Delete specified file
      tags:
      - Exports
      x-accepts: application/json
    get:
      description: User with Get Entity permission can access this method.
      operationId: Exports_GetFile
      parameters:
      - description: file id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ExportVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
          description: Returns the specified file
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Exception thrown
      summary: Get specified file
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/CountFiles:
    get:
      description: User with Get Count permission can access this method.
      operationId: Exports_GetFilesCount
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CountVM'
            application/json:
              schema:
                $ref: '#/components/schemas/CountVM'
            text/json:
              schema:
                $ref: '#/components/schemas/CountVM'
          description: Returns count of the files in a specified folder
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
        "500":
          content: {}
          description: Exception thrown
      summary: Get count of files what contains in a specified folder
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/Folder/{id}/ListFiles:
    get:
      description: User with Get Entity permission can access this method.
      operationId: Exports_GetFilesList
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: number of files, that have to be skipped
        in: query
        name: skip
        schema:
          default: 0
          format: int32
          type: integer
      - description: number of files, that have to be returned
        in: query
        name: take
        schema:
          default: 10
          format: int32
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ExportsVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ExportsVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ExportsVM'
          description: Returns list of the files from a specified folder
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
        "500":
          content: {}
          description: Exception thrown
      summary: Get all files from specified folder
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/File/{id}/Move/{folderId}:
    post:
      description: User with Update Place permission can access this method.
      operationId: Exports_MoveFile
      parameters:
      - description: file id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: folder id
        in: path
        name: folderId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ExportVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
          description: File has been moved
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: fileId or folderId is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
        "500":
          content: {}
          description: Exception thrown
      summary: Move file to a specified folder
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/File/{id}/Copy/{folderId}:
    post:
      operationId: Exports_CopyFile
      parameters:
      - description: file id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: folder id
        in: path
        name: folderId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ExportVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
          description: File has been copied
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: fileId or folderId is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
        "500":
          content: {}
          description: Exception thrown
      summary: Copy file to a specified folder
      tags:
      - Exports
      x-accepts: application/json
  /api/rp/v1/Exports/File/{id}/Rename:
    put:
      description: User with Update Name permission can access this method.
      operationId: Exports_RenameFile
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FileRenameVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FileRenameVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FileRenameVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FileRenameVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ExportVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
          description: File name has been updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FileId is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Exception thrown
      summary: Rename a file
      tags:
      - Exports
      x-codegen-request-body-name: nameModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Exports/File/{id}/Icon:
    put:
      description: User with Update Icon permission can access this method.
      operationId: Exports_UpdateIcon
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FileIconVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FileIconVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FileIconVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FileIconVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ExportVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
          description: File's icon has been updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FileId is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Exception thrown
      summary: Update a files's icon
      tags:
      - Exports
      x-codegen-request-body-name: iconModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Exports/File/{id}/UpdateTags:
    put:
      description: User with Update Tags permission can access this method.
      operationId: Exports_UpdateTags
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FileTagsUpdateVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FileTagsUpdateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FileTagsUpdateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FileTagsUpdateVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ExportVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
          description: Tags has been updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FileId is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Exception thrown
      summary: Update tags
      tags:
      - Exports
      x-codegen-request-body-name: tagsModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Exports/File/{id}/permissions:
    delete:
      operationId: Exports_RevokePermission
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: permissions revoked
        "204":
          content: {}
          description: happens sometimes
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: filePermissionsVM or id is not valid
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: file is not found
        "500":
          content: {}
          description: Exception thrown
      summary: Revoke permission
      tags:
      - Exports
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
    get:
      operationId: Exports_GetPermissions
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: got permissions successfully
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: id is not valid
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: file is not found
      summary: Get all file permissions
      tags:
      - Exports
      x-accepts: application/json
    put:
      operationId: Exports_AddPermission
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: permissions added
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: filePermissionsVM or id is not valid
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File is not found
        "500":
          content: {}
          description: Exception thrown
      summary: Add permission
      tags:
      - Exports
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/HealthCheck:
    get:
      operationId: HealthCheckReportProcessor_Get
      responses:
        "200":
          content: {}
          description: Report processor is alive!
      summary: healthcheck
      tags:
      - HealthCheck
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/CountFolderAndFiles:
    get:
      description: User with a Get Count permission can access this method.
      operationId: ReportFolderAndFile_GetCount
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CountVM'
            application/json:
              schema:
                $ref: '#/components/schemas/CountVM'
            text/json:
              schema:
                $ref: '#/components/schemas/CountVM'
          description: Returns count of the files in a specified folder
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get count of files and folders what contains in a specified folder
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/ListFolderAndFiles:
    get:
      description: User with a Get Entity permission can access this method.
      operationId: ReportFolderAndFile_GetFoldersAndFiles
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: number of folder and files, that have to be skipped
        in: query
        name: skip
        schema:
          default: 0
          format: int32
          type: integer
      - description: number of folder and files, that have to be returned
        in: query
        name: take
        schema:
          default: 10
          format: int32
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilesVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FilesVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FilesVM'
          description: Returns list of the files from a specified folder
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
      summary: Get all folders and files from specified folder
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/permissions:
    delete:
      operationId: ReportFolders_RevokePermission
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
        description: permisisons to revoke
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: permissions revoked
        "204":
          content: {}
          description: happens sometimes
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: filePermissionsVM or id is not valid
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folder is not found
      summary: Revoke folder permission
      tags:
      - Reports
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
    get:
      operationId: ReportFolders_GetPermissions
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: returned permissions
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: id is not valid
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folder is not found
      summary: Get all folder permissions
      tags:
      - Reports
      x-accepts: application/json
    put:
      operationId: ReportFolders_AddPermission
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
        description: filePermissions view model
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: Permissions added
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: filePermissionsVM or id is not valid
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folder is not found
      summary: Add folder permission
      tags:
      - Reports
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}:
    delete:
      description: User with a Delete Entity permission can access this method.
      operationId: ReportFolders_DeleteFolder
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: delete all childs
        in: query
        name: recursive
        schema:
          default: true
          type: boolean
      responses:
        "204":
          content: {}
          description: Folder succesfully deleted
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Delete specified folder
      tags:
      - Reports
      x-accepts: application/json
    get:
      description: User with a Get Entity permission can access this method.
      operationId: ReportFolders_GetFolder
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Returns specified folder
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get specified folder
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/Breadcrumbs:
    get:
      description: User with a Get Entity permission can access this method.
      operationId: ReportFolders_GetBreadcrumbs
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BreadcrumbsVM'
            application/json:
              schema:
                $ref: '#/components/schemas/BreadcrumbsVM'
            text/json:
              schema:
                $ref: '#/components/schemas/BreadcrumbsVM'
          description: Returns breadcrumbs parents list (starts from root folder)
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get specified folder breadcrumbs
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/ListFolders:
    get:
      description: User with a Get Entity permission can access this method.
      operationId: ReportFolders_GetFolders
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: number of files, that have to be skipped
        in: query
        name: skip
        schema:
          default: 0
          format: int32
          type: integer
      - description: number of files, that have to be returned
        in: query
        name: take
        schema:
          default: 10
          format: int32
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilesVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FilesVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FilesVM'
          description: Gets all folders from a specified folder
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get all folders from specified folder
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/CountFolders:
    get:
      description: User with a Get Count permission can access this method.
      operationId: ReportFolders_GetFoldersCount
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CountVM'
            application/json:
              schema:
                $ref: '#/components/schemas/CountVM'
            text/json:
              schema:
                $ref: '#/components/schemas/CountVM'
          description: Returns count of folders in a specified folder
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get count of folders what contains in a specified folder
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/Root:
    get:
      description: "&gt; Breakchange. Now user model doesn't contain a root folders.\r\
        \nThis method can return error 400 and 404 when subscription is not found."
      operationId: ReportFolders_GetRootFolder
      parameters:
      - in: query
        name: subscriptionId
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Gets user's root folder (without parents)
        "400":
          content: {}
          description: Error with the request.
        "403":
          content: {}
          description: No permissions to get root folder
        "404":
          content: {}
          description: Not found subscription
      summary: Get user's root folder (without parents)
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/Move/{folderId}:
    post:
      description: "User with a Update Place permission for a folder and Create Entity\r\
        \nfor a Parent Folder can access this method."
      operationId: ReportFolders_MoveFolder
      parameters:
      - description: moving folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: destination folder id
        in: path
        name: folderId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Folder has been moved to a specified folder
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId or parentFolderId is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Move folder to a specified folder
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/Copy/{folderId}:
    post:
      description: "User with a Update Place permission for a folder and Create Entity\r\
        \nfor a Parent Folder can access this method."
      operationId: ReportFolders_CopyFolder
      parameters:
      - description: moving folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: destination folder id
        in: path
        name: folderId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Folder has been moved to a specified folder
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId or parentFolderId is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Move folder to a specified folder
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/Folder:
    post:
      description: User with a Create Entity permisison can access this method.
      operationId: ReportFolders_PostFolder
      parameters:
      - description: Identifier of parent folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReportFolderCreateVM'
          application/json:
            schema:
              $ref: '#/components/schemas/ReportFolderCreateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/ReportFolderCreateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReportFolderCreateVM'
        description: create VM
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: New folder has been created)
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Parent folder id is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: parent folder/subscription not found
      summary: Create folder
      tags:
      - Reports
      x-codegen-request-body-name: folderVm
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/Rename:
    put:
      description: User with a Update Name permision can access this method.
      operationId: ReportFolders_RenameFolder
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FolderRenameVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FolderRenameVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FolderRenameVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FolderRenameVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Folder name has been updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Rename a folder
      tags:
      - Reports
      x-codegen-request-body-name: nameModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/Icon:
    put:
      description: User with a Update Icon permission can access this method.
      operationId: ReportFolders_UpdateIcon
      parameters:
      - description: Identifier of folder
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FolderIconVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FolderIconVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FolderIconVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FolderIconVM'
        description: Update icon model
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Folder's icon has been updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Update a folder's icon
      tags:
      - Reports
      x-codegen-request-body-name: iconModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/UpdateTags:
    put:
      description: User with a Update Tags permission can access this method.
      operationId: ReportFolders_UpdateTags
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FolderTagsUpdateVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FolderTagsUpdateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FolderTagsUpdateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FolderTagsUpdateVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Tags has been updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId or Tags is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Update tags
      tags:
      - Reports
      x-codegen-request-body-name: tagsModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Reports/File/{id}/Export:
    post:
      description: "User with Execute Export permission on prepared report and\r\n\
        Create Entity on an export folder can access this method."
      operationId: Reports_Export
      parameters:
      - description: report id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ExportReportTaskVM'
          application/json:
            schema:
              $ref: '#/components/schemas/ExportReportTaskVM'
          text/json:
            schema:
              $ref: '#/components/schemas/ExportReportTaskVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ExportReportTaskVM'
        description: export parameters
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ExportVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
          description: Specified report has been exported
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Report Id is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Exports folder not found
      summary: Export specified report to a specified format
      tags:
      - Reports
      x-codegen-request-body-name: exportTask
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/File:
    post:
      operationId: Reports_UploadFile
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReportCreateVM'
          application/json:
            schema:
              $ref: '#/components/schemas/ReportCreateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/ReportCreateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReportCreateVM'
        description: create VM
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReportVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: Allows to upload reports into specified folder
      tags:
      - Reports
      x-codegen-request-body-name: fileVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Reports/File/{id}:
    delete:
      description: User with Delete permission can access the method.
      operationId: Reports_DeleteFile
      parameters:
      - description: file id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: File succesfully deleted
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Exception thrown
      summary: Delete specified file
      tags:
      - Reports
      x-accepts: application/json
    get:
      description: User with Get Entity permission can access this method.
      operationId: Reports_GetFile
      parameters:
      - description: file id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReportVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
          description: Returns the specified file
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Exception thrown
      summary: Get specified file
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/CountFiles:
    get:
      description: User with Get Count permission can access this method.
      operationId: Reports_GetFilesCount
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CountVM'
            application/json:
              schema:
                $ref: '#/components/schemas/CountVM'
            text/json:
              schema:
                $ref: '#/components/schemas/CountVM'
          description: Returns count of the files in a specified folder
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
        "500":
          content: {}
          description: Exception thrown
      summary: Get count of files what contains in a specified folder
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/Folder/{id}/ListFiles:
    get:
      description: User with Get Entity permission can access this method.
      operationId: Reports_GetFilesList
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: number of files, that have to be skipped
        in: query
        name: skip
        schema:
          default: 0
          format: int32
          type: integer
      - description: number of files, that have to be returned
        in: query
        name: take
        schema:
          default: 10
          format: int32
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReportsVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ReportsVM'
          description: Returns list of the files from a specified folder
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
        "500":
          content: {}
          description: Exception thrown
      summary: Get all files from specified folder
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/File/{id}/Move/{folderId}:
    post:
      description: User with Update Place permission can access this method.
      operationId: Reports_MoveFile
      parameters:
      - description: file id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: folder id
        in: path
        name: folderId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReportVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
          description: File has been moved
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: fileId or folderId is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
        "500":
          content: {}
          description: Exception thrown
      summary: Move file to a specified folder
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/File/{id}/Copy/{folderId}:
    post:
      operationId: Reports_CopyFile
      parameters:
      - description: file id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: folder id
        in: path
        name: folderId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReportVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
          description: File has been copied
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: fileId or folderId is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
        "500":
          content: {}
          description: Exception thrown
      summary: Copy file to a specified folder
      tags:
      - Reports
      x-accepts: application/json
  /api/rp/v1/Reports/File/{id}/Rename:
    put:
      description: User with Update Name permission can access this method.
      operationId: Reports_RenameFile
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FileRenameVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FileRenameVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FileRenameVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FileRenameVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReportVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
          description: File name has been updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FileId is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Exception thrown
      summary: Rename a file
      tags:
      - Reports
      x-codegen-request-body-name: nameModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Reports/File/{id}/Icon:
    put:
      description: User with Update Icon permission can access this method.
      operationId: Reports_UpdateIcon
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FileIconVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FileIconVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FileIconVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FileIconVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReportVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
          description: File's icon has been updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FileId is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Exception thrown
      summary: Update a files's icon
      tags:
      - Reports
      x-codegen-request-body-name: iconModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Reports/File/{id}/UpdateTags:
    put:
      description: User with Update Tags permission can access this method.
      operationId: Reports_UpdateTags
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FileTagsUpdateVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FileTagsUpdateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FileTagsUpdateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FileTagsUpdateVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReportVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
          description: Tags has been updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FileId is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Exception thrown
      summary: Update tags
      tags:
      - Reports
      x-codegen-request-body-name: tagsModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Reports/File/{id}/permissions:
    delete:
      operationId: Reports_RevokePermission
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: permissions revoked
        "204":
          content: {}
          description: happens sometimes
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: filePermissionsVM or id is not valid
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: file is not found
        "500":
          content: {}
          description: Exception thrown
      summary: Revoke permission
      tags:
      - Reports
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
    get:
      operationId: Reports_GetPermissions
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: got permissions successfully
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: id is not valid
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: file is not found
      summary: Get all file permissions
      tags:
      - Reports
      x-accepts: application/json
    put:
      operationId: Reports_AddPermission
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: permissions added
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: filePermissionsVM or id is not valid
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File is not found
        "500":
          content: {}
          description: Exception thrown
      summary: Add permission
      tags:
      - Reports
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/CountFolderAndFiles:
    get:
      description: User with a Get Count permission can access this method.
      operationId: TemplateFolderAndFile_GetCount
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CountVM'
            application/json:
              schema:
                $ref: '#/components/schemas/CountVM'
            text/json:
              schema:
                $ref: '#/components/schemas/CountVM'
          description: Returns count of the files in a specified folder
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get count of files and folders what contains in a specified folder
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/ListFolderAndFiles:
    get:
      description: User with a Get Entity permission can access this method.
      operationId: TemplateFolderAndFile_GetFoldersAndFiles
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: number of folder and files, that have to be skipped
        in: query
        name: skip
        schema:
          default: 0
          format: int32
          type: integer
      - description: number of folder and files, that have to be returned
        in: query
        name: take
        schema:
          default: 10
          format: int32
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilesVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FilesVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FilesVM'
          description: Returns list of the files from a specified folder
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
      summary: Get all folders and files from specified folder
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/permissions:
    delete:
      operationId: TemplateFolders_RevokePermission
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
        description: permisisons to revoke
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: permissions revoked
        "204":
          content: {}
          description: happens sometimes
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: filePermissionsVM or id is not valid
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folder is not found
      summary: Revoke folder permission
      tags:
      - Templates
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
    get:
      operationId: TemplateFolders_GetPermissions
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: returned permissions
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: id is not valid
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folder is not found
      summary: Get all folder permissions
      tags:
      - Templates
      x-accepts: application/json
    put:
      operationId: TemplateFolders_AddPermission
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
        description: filePermissions view model
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: Permissions added
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: filePermissionsVM or id is not valid
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folder is not found
      summary: Add folder permission
      tags:
      - Templates
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}:
    delete:
      description: User with a Delete Entity permission can access this method.
      operationId: TemplateFolders_DeleteFolder
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: delete all childs
        in: query
        name: recursive
        schema:
          default: true
          type: boolean
      responses:
        "204":
          content: {}
          description: Folder succesfully deleted
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Delete specified folder
      tags:
      - Templates
      x-accepts: application/json
    get:
      description: User with a Get Entity permission can access this method.
      operationId: TemplateFolders_GetFolder
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Returns specified folder
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get specified folder
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/Breadcrumbs:
    get:
      description: User with a Get Entity permission can access this method.
      operationId: TemplateFolders_GetBreadcrumbs
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BreadcrumbsVM'
            application/json:
              schema:
                $ref: '#/components/schemas/BreadcrumbsVM'
            text/json:
              schema:
                $ref: '#/components/schemas/BreadcrumbsVM'
          description: Returns breadcrumbs parents list (starts from root folder)
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get specified folder breadcrumbs
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/ListFolders:
    get:
      description: User with a Get Entity permission can access this method.
      operationId: TemplateFolders_GetFolders
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: number of files, that have to be skipped
        in: query
        name: skip
        schema:
          default: 0
          format: int32
          type: integer
      - description: number of files, that have to be returned
        in: query
        name: take
        schema:
          default: 10
          format: int32
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilesVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FilesVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FilesVM'
          description: Gets all folders from a specified folder
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get all folders from specified folder
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/CountFolders:
    get:
      description: User with a Get Count permission can access this method.
      operationId: TemplateFolders_GetFoldersCount
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CountVM'
            application/json:
              schema:
                $ref: '#/components/schemas/CountVM'
            text/json:
              schema:
                $ref: '#/components/schemas/CountVM'
          description: Returns count of folders in a specified folder
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Get count of folders what contains in a specified folder
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/Root:
    get:
      description: "&gt; Breakchange. Now user model doesn't contain a root folders.\r\
        \nThis method can return error 400 and 404 when subscription is not found."
      operationId: TemplateFolders_GetRootFolder
      parameters:
      - in: query
        name: subscriptionId
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Gets user's root folder (without parents)
        "400":
          content: {}
          description: Error with the request.
        "403":
          content: {}
          description: No permissions to get root folder
        "404":
          content: {}
          description: Not found subscription
      summary: Get user's root folder (without parents)
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/Move/{folderId}:
    post:
      description: "User with a Update Place permission for a folder and Create Entity\r\
        \nfor a Parent Folder can access this method."
      operationId: TemplateFolders_MoveFolder
      parameters:
      - description: moving folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: destination folder id
        in: path
        name: folderId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Folder has been moved to a specified folder
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId or parentFolderId is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Move folder to a specified folder
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/Copy/{folderId}:
    post:
      description: "User with a Update Place permission for a folder and Create Entity\r\
        \nfor a Parent Folder can access this method."
      operationId: TemplateFolders_CopyFolder
      parameters:
      - description: moving folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: destination folder id
        in: path
        name: folderId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Folder has been moved to a specified folder
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId or parentFolderId is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Move folder to a specified folder
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/Folder:
    post:
      description: User with a Create Entity permisison can access this method.
      operationId: TemplateFolders_PostFolder
      parameters:
      - description: Identifier of parent folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TemplateFolderCreateVM'
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateFolderCreateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/TemplateFolderCreateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TemplateFolderCreateVM'
        description: create VM
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: New folder has been created)
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Parent folder id is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: parent folder/subscription not found
      summary: Create folder
      tags:
      - Templates
      x-codegen-request-body-name: folderVm
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/Rename:
    put:
      description: User with a Update Name permision can access this method.
      operationId: TemplateFolders_RenameFolder
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FolderRenameVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FolderRenameVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FolderRenameVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FolderRenameVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Folder name has been updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Rename a folder
      tags:
      - Templates
      x-codegen-request-body-name: nameModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/Icon:
    put:
      description: User with a Update Icon permission can access this method.
      operationId: TemplateFolders_UpdateIcon
      parameters:
      - description: Identifier of folder
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FolderIconVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FolderIconVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FolderIconVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FolderIconVM'
        description: Update icon model
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Folder's icon has been updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Update a folder's icon
      tags:
      - Templates
      x-codegen-request-body-name: iconModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/UpdateTags:
    put:
      description: User with a Update Tags permission can access this method.
      operationId: TemplateFolders_UpdateTags
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FolderTagsUpdateVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FolderTagsUpdateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FolderTagsUpdateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FolderTagsUpdateVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileVM'
            application/json:
              schema:
                $ref: '#/components/schemas/FileVM'
            text/json:
              schema:
                $ref: '#/components/schemas/FileVM'
          description: Tags has been updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: folderId or Tags is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
      summary: Update tags
      tags:
      - Templates
      x-codegen-request-body-name: tagsModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Templates/File/{id}/Export:
    post:
      description: "User with Execute Export permission on prepared report and\r\n\
        Create Entity on an export folder can access this method."
      operationId: Templates_Export
      parameters:
      - description: report id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ExportTemplateTaskVM'
          application/json:
            schema:
              $ref: '#/components/schemas/ExportTemplateTaskVM'
          text/json:
            schema:
              $ref: '#/components/schemas/ExportTemplateTaskVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ExportTemplateTaskVM'
        description: export parameters (string only)
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ExportVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ExportVM'
          description: Specified report has been exported
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Report Id is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Exports folder not found
      summary: Export specified report template to a specified format
      tags:
      - Templates
      x-codegen-request-body-name: exportTask
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Templates/File/{id}/Prepare:
    post:
      description: "User with Execute Prepare permission on report and \r\nCreate\
        \ Entity on a prepared report folder can access this method."
      operationId: Templates_Prepare
      parameters:
      - description: template id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PrepareTemplateTaskVM'
          application/json:
            schema:
              $ref: '#/components/schemas/PrepareTemplateTaskVM'
          text/json:
            schema:
              $ref: '#/components/schemas/PrepareTemplateTaskVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PrepareTemplateTaskVM'
        description: Template prepare view model
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReportVM'
            application/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
            text/json:
              schema:
                $ref: '#/components/schemas/ReportVM'
          description: Specified template has been prepared
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Report Id is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Template or folder not found
      summary: Prepare specified template to report
      tags:
      - Templates
      x-codegen-request-body-name: prepareTask
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/File:
    post:
      description: User with Create Entity permission can access this method.
      operationId: Templates_UploadFile
      parameters:
      - description: Identifier of folder
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TemplateCreateVM'
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateCreateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/TemplateCreateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TemplateCreateVM'
        description: file's view model
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TemplateVM'
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
            text/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
          description: File has been uploaded
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: fileVM view model is not valid
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: Upload a file to the specified folder  !
      tags:
      - Templates
      x-codegen-request-body-name: fileVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Templates/File/{id}:
    delete:
      description: User with Delete permission can access the method.
      operationId: Templates_DeleteFile
      parameters:
      - description: file id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: File succesfully deleted
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Exception thrown
      summary: Delete specified file
      tags:
      - Templates
      x-accepts: application/json
    get:
      description: User with Get Entity permission can access this method.
      operationId: Templates_GetFile
      parameters:
      - description: file id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TemplateVM'
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
            text/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
          description: Returns the specified file
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Id is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Exception thrown
      summary: Get specified file
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/CountFiles:
    get:
      description: User with Get Count permission can access this method.
      operationId: Templates_GetFilesCount
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CountVM'
            application/json:
              schema:
                $ref: '#/components/schemas/CountVM'
            text/json:
              schema:
                $ref: '#/components/schemas/CountVM'
          description: Returns count of the files in a specified folder
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Folder not found
        "500":
          content: {}
          description: Exception thrown
      summary: Get count of files what contains in a specified folder
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/Folder/{id}/ListFiles:
    get:
      description: User with Get Entity permission can access this method.
      operationId: Templates_GetFilesList
      parameters:
      - description: folder id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: number of files, that have to be skipped
        in: query
        name: skip
        schema:
          default: 0
          format: int32
          type: integer
      - description: number of files, that have to be returned
        in: query
        name: take
        schema:
          default: 10
          format: int32
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TemplatesVM'
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesVM'
            text/json:
              schema:
                $ref: '#/components/schemas/TemplatesVM'
          description: Returns list of the files from a specified folder
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FolderId is null
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
        "500":
          content: {}
          description: Exception thrown
      summary: Get all files from specified folder
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/File/{id}/Move/{folderId}:
    post:
      description: User with Update Place permission can access this method.
      operationId: Templates_MoveFile
      parameters:
      - description: file id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: folder id
        in: path
        name: folderId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TemplateVM'
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
            text/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
          description: File has been moved
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: fileId or folderId is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
        "500":
          content: {}
          description: Exception thrown
      summary: Move file to a specified folder
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/File/{id}/Copy/{folderId}:
    post:
      operationId: Templates_CopyFile
      parameters:
      - description: file id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: folder id
        in: path
        name: folderId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TemplateVM'
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
            text/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
          description: File has been copied
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: fileId or folderId is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File or folder not found
        "500":
          content: {}
          description: Exception thrown
      summary: Copy file to a specified folder
      tags:
      - Templates
      x-accepts: application/json
  /api/rp/v1/Templates/File/{id}/Rename:
    put:
      description: User with Update Name permission can access this method.
      operationId: Templates_RenameFile
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FileRenameVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FileRenameVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FileRenameVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FileRenameVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TemplateVM'
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
            text/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
          description: File name has been updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FileId is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Exception thrown
      summary: Rename a file
      tags:
      - Templates
      x-codegen-request-body-name: nameModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Templates/File/{id}/Icon:
    put:
      description: User with Update Icon permission can access this method.
      operationId: Templates_UpdateIcon
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FileIconVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FileIconVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FileIconVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FileIconVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TemplateVM'
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
            text/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
          description: File's icon has been updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FileId is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Exception thrown
      summary: Update a files's icon
      tags:
      - Templates
      x-codegen-request-body-name: iconModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Templates/File/{id}/UpdateTags:
    put:
      description: User with Update Tags permission can access this method.
      operationId: Templates_UpdateTags
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FileTagsUpdateVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FileTagsUpdateVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FileTagsUpdateVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FileTagsUpdateVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TemplateVM'
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
            text/json:
              schema:
                $ref: '#/components/schemas/TemplateVM'
          description: Tags has been updated
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: FileId is null
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File not found
        "500":
          content: {}
          description: Exception thrown
      summary: Update tags
      tags:
      - Templates
      x-codegen-request-body-name: tagsModel
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /api/rp/v1/Templates/File/{id}/permissions:
    delete:
      operationId: Templates_RevokePermission
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: permissions revoked
        "204":
          content: {}
          description: happens sometimes
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: filePermissionsVM or id is not valid
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: file is not found
        "500":
          content: {}
          description: Exception thrown
      summary: Revoke permission
      tags:
      - Templates
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
    get:
      operationId: Templates_GetPermissions
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: got permissions successfully
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: id is not valid
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: file is not found
      summary: Get all file permissions
      tags:
      - Templates
      x-accepts: application/json
    put:
      operationId: Templates_AddPermission
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          text/json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilePermissionsVM'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            application/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/FilePermissions'
          description: permissions added
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: filePermissionsVM or id is not valid
        "402":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: subscription is outdated
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: You don't have rights for the operation
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: File is not found
        "500":
          content: {}
          description: Exception thrown
      summary: Add permission
      tags:
      - Templates
      x-codegen-request-body-name: permissionsVM
      x-contentType: application/json-patch+json
      x-accepts: application/json
components:
  schemas:
    ProblemDetails:
      additionalProperties:
        properties: {}
        type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          format: int32
          type: integer
        detail:
          type: string
        instance:
          type: string
      type: object
    CreateDataSourceVM:
      example:
        connectionString: connectionString
        name: name
        subscriptionId: subscriptionId
        connectionType: JSON
      properties:
        name:
          type: string
        connectionString:
          type: string
        subscriptionId:
          type: string
        connectionType:
          enum:
          - JSON
          - MSSQL
          - CSV
          - XML
          - MySQL
          - Postgres
          type: string
      type: object
    DataSourceVM:
      example:
        connectionString: connectionString
        creatorUserId: creatorUserId
        editedTime: 2000-01-23T04:56:07.000+00:00
        editorUserId: editorUserId
        name: name
        isConnected: true
        createdTime: 2000-01-23T04:56:07.000+00:00
        id: id
        dataStructure: dataStructure
        subscriptionId: subscriptionId
        connectionType: JSON
      properties:
        id:
          type: string
        name:
          type: string
        connectionType:
          enum:
          - JSON
          - MSSQL
          - CSV
          - XML
          - MySQL
          - Postgres
          type: string
        connectionString:
          type: string
        dataStructure:
          type: string
        subscriptionId:
          type: string
        editedTime:
          format: date-time
          type: string
        editorUserId:
          type: string
        createdTime:
          format: date-time
          type: string
        creatorUserId:
          type: string
        isConnected:
          type: boolean
      type: object
    DataSourcesVM:
      example:
        take: 1
        count: 0
        skip: 6
        dataSources:
        - connectionString: connectionString
          creatorUserId: creatorUserId
          editedTime: 2000-01-23T04:56:07.000+00:00
          editorUserId: editorUserId
          name: name
          isConnected: true
          createdTime: 2000-01-23T04:56:07.000+00:00
          id: id
          dataStructure: dataStructure
          subscriptionId: subscriptionId
          connectionType: JSON
        - connectionString: connectionString
          creatorUserId: creatorUserId
          editedTime: 2000-01-23T04:56:07.000+00:00
          editorUserId: editorUserId
          name: name
          isConnected: true
          createdTime: 2000-01-23T04:56:07.000+00:00
          id: id
          dataStructure: dataStructure
          subscriptionId: subscriptionId
          connectionType: JSON
      properties:
        dataSources:
          items:
            $ref: '#/components/schemas/DataSourceVM'
          type: array
        count:
          format: int64
          type: integer
        skip:
          format: int32
          type: integer
        take:
          format: int32
          type: integer
      type: object
    RenameDataSourceVM:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    UpdateDataSourceConnectionStringVM:
      example:
        connectionString: connectionString
      properties:
        connectionString:
          type: string
      type: object
    UpdateDataSourceSubscriptionVM:
      example:
        subscriptionId: subscriptionId
      properties:
        subscriptionId:
          type: string
      type: object
    DataSourcePermissionsVM:
      example:
        permissionType: Owner
        groupId: groupId
        permission:
          get: 5
          create: 0
          update: 5
          administrate: 2
          delete: 6
          execute: 1
        ownerId: ownerId
      properties:
        permissionType:
          enum:
          - Owner
          - Group
          - Other
          - Anon
          type: string
        permission:
          $ref: '#/components/schemas/DataSourcePermission'
        groupId:
          type: string
        ownerId:
          type: string
      type: object
    DataSourcePermission:
      example:
        get: 5
        create: 0
        update: 5
        administrate: 2
        delete: 6
        execute: 1
      properties:
        create:
          enum:
          - 0
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.DataSourcesPermissionsEnums.Create
          x-enumNames:
          - None
          - All
        delete:
          enum:
          - 0
          - 1
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.DataSourcesPermissionsEnums.Delete
          x-enumNames:
          - None
          - Entity
          - All
        execute:
          enum:
          - 0
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.DataSourcesPermissionsEnums.Execute
          x-enumNames:
          - None
          - All
        get:
          enum:
          - 0
          - 1
          - 2
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.DataSourcesPermissionsEnums.Get
          x-enumNames:
          - None
          - Entity
          - Permission
          - All
        update:
          enum:
          - 0
          - 1
          - 2
          - 4
          - 8
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.DataSourcesPermissionsEnums.Update
          x-enumNames:
          - None
          - Name
          - SubscriptionId
          - DataStructure
          - ConnectionString
          - All
        administrate:
          enum:
          - 0
          - 1
          - 2
          - 4
          - 8
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.DataSourcesPermissionsEnums.Administrate
          x-enumNames:
          - None
          - Owner
          - Group
          - Other
          - Anon
          - All
      type: object
    DataSourcePermissions:
      example:
        owner:
          get: 5
          create: 0
          update: 5
          administrate: 2
          delete: 6
          execute: 1
        anon:
          get: 5
          create: 0
          update: 5
          administrate: 2
          delete: 6
          execute: 1
        other:
          get: 5
          create: 0
          update: 5
          administrate: 2
          delete: 6
          execute: 1
        groups:
          key:
            get: 5
            create: 0
            update: 5
            administrate: 2
            delete: 6
            execute: 1
        ownerId: ownerId
      properties:
        ownerId:
          type: string
        owner:
          $ref: '#/components/schemas/DataSourcePermission'
        groups:
          additionalProperties:
            $ref: '#/components/schemas/DataSourcePermission'
          type: object
        other:
          $ref: '#/components/schemas/DataSourcePermission'
        anon:
          $ref: '#/components/schemas/DataSourcePermission'
      type: object
    ApiKeysVM:
      example:
        apiKeys:
        - expired: 2000-01-23T04:56:07.000+00:00
          description: description
          value: value
        - expired: 2000-01-23T04:56:07.000+00:00
          description: description
          value: value
        count: 0
      properties:
        apiKeys:
          items:
            $ref: '#/components/schemas/ApiKeyVM'
          type: array
        count:
          format: int64
          type: integer
      type: object
    ApiKeyVM:
      example:
        expired: 2000-01-23T04:56:07.000+00:00
        description: description
        value: value
      properties:
        value:
          type: string
        description:
          type: string
        expired:
          format: date-time
          type: string
      type: object
    CreateApiKeyVM:
      example:
        expired: 2000-01-23T04:56:07.000+00:00
        description: description
      properties:
        description:
          type: string
        expired:
          format: date-time
          type: string
      required:
      - expired
      type: object
    DeleteApiKeyVM:
      example:
        apiKey: apiKey
      properties:
        apiKey:
          type: string
      required:
      - apiKey
      type: object
    CreateDataSourceAdminVM:
      example:
        connectionString: connectionString
        name: name
        ownerId: ownerId
        subscriptionId: subscriptionId
        connectionType: JSON
      properties:
        ownerId:
          type: string
        name:
          type: string
        connectionString:
          type: string
        subscriptionId:
          type: string
        connectionType:
          enum:
          - JSON
          - MSSQL
          - CSV
          - XML
          - MySQL
          - Postgres
          type: string
      type: object
    UpdateDataSourceVM:
      example:
        connectionString: connectionString
        name: name
        subscriptionId: subscriptionId
      properties:
        name:
          type: string
        subscriptionId:
          type: string
        connectionString:
          type: string
      type: object
    FileVM:
      example:
        creatorUserId: creatorUserId
        icon: icon
        type: File
        parentId: parentId
        tags:
        - tags
        - tags
        statusReason: None
        editedTime: 2000-01-23T04:56:07.000+00:00
        size: 0
        editorUserId: editorUserId
        name: name
        createdTime: 2000-01-23T04:56:07.000+00:00
        id: id
        subscriptionId: subscriptionId
        status: None
      properties:
        name:
          type: string
        parentId:
          type: string
        tags:
          items:
            type: string
          type: array
        icon:
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
        type:
          enum:
          - File
          - Folder
          type: string
        size:
          format: int64
          type: integer
        subscriptionId:
          type: string
        status:
          enum:
          - None
          - InQueue
          - InProcess
          - Success
          - Failed
          type: string
        statusReason:
          enum:
          - None
          - AllRight
          - Hang
          - Error
          - NotFound
          - NotEnoughSpace
          - ExportStarted
          - PreparationStarted
          type: string
        id:
          type: string
        createdTime:
          format: date-time
          type: string
        creatorUserId:
          type: string
        editedTime:
          format: date-time
          type: string
        editorUserId:
          type: string
      type: object
    FileUpdateVM:
      example:
        name: name
        icon: icon
        parentId: parentId
        tags:
        - tags
        - tags
      properties:
        name:
          type: string
        parentId:
          type: string
        tags:
          items:
            type: string
          type: array
        icon:
          type: string
      type: object
    FilesVM:
      example:
        take: 1
        count: 0
        files:
        - creatorUserId: creatorUserId
          icon: icon
          type: File
          parentId: parentId
          tags:
          - tags
          - tags
          statusReason: None
          editedTime: 2000-01-23T04:56:07.000+00:00
          size: 0
          editorUserId: editorUserId
          name: name
          createdTime: 2000-01-23T04:56:07.000+00:00
          id: id
          subscriptionId: subscriptionId
          status: None
        - creatorUserId: creatorUserId
          icon: icon
          type: File
          parentId: parentId
          tags:
          - tags
          - tags
          statusReason: None
          editedTime: 2000-01-23T04:56:07.000+00:00
          size: 0
          editorUserId: editorUserId
          name: name
          createdTime: 2000-01-23T04:56:07.000+00:00
          id: id
          subscriptionId: subscriptionId
          status: None
        skip: 6
      properties:
        files:
          items:
            $ref: '#/components/schemas/FileVM'
          type: array
        count:
          format: int64
          type: integer
        skip:
          format: int32
          type: integer
        take:
          format: int32
          type: integer
      type: object
    ExportFolderCreateVM:
      example:
        name: name
        icon: icon
        tags:
        - tags
        - tags
      properties:
        name:
          type: string
        tags:
          items:
            type: string
          type: array
        icon:
          type: string
      type: object
    FilePermissions:
      example:
        owner:
          get: 5
          create: 0
          update: 5
          administrate: 2
          delete: 6
          execute: 1
        anon:
          get: 5
          create: 0
          update: 5
          administrate: 2
          delete: 6
          execute: 1
        other:
          get: 5
          create: 0
          update: 5
          administrate: 2
          delete: 6
          execute: 1
        groups:
          key:
            get: 5
            create: 0
            update: 5
            administrate: 2
            delete: 6
            execute: 1
        ownerId: ownerId
      properties:
        ownerId:
          type: string
        owner:
          $ref: '#/components/schemas/FilePermission'
        groups:
          additionalProperties:
            $ref: '#/components/schemas/FilePermission'
          type: object
        other:
          $ref: '#/components/schemas/FilePermission'
        anon:
          $ref: '#/components/schemas/FilePermission'
      type: object
    FilePermission:
      example:
        get: 5
        create: 0
        update: 5
        administrate: 2
        delete: 6
        execute: 1
      properties:
        create:
          enum:
          - 0
          - 1
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.FilePermissionsEnums.Create
          x-enumNames:
          - None
          - Entity
          - All
        delete:
          enum:
          - 0
          - 1
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.FilePermissionsEnums.Delete
          x-enumNames:
          - None
          - Entity
          - All
        execute:
          enum:
          - 0
          - 1
          - 2
          - 4
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.FilePermissionsEnums.Execute
          x-enumNames:
          - None
          - Export
          - Prepare
          - Design
          - All
        get:
          enum:
          - 0
          - 1
          - 2
          - 4
          - 8
          - 16
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.FilePermissionsEnums.Get
          x-enumNames:
          - None
          - Entity
          - Count
          - Download
          - Permission
          - Thumbnail
          - All
        update:
          enum:
          - 0
          - 1
          - 2
          - 4
          - 8
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.FilePermissionsEnums.Update
          x-enumNames:
          - None
          - Place
          - Name
          - Icon
          - Tags
          - All
        administrate:
          enum:
          - 0
          - 1
          - 2
          - 4
          - 8
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.FilePermissionsEnums.Administrate
          x-enumNames:
          - None
          - Owner
          - Group
          - Other
          - Anon
          - All
      type: object
    FilePermissionsVM:
      example:
        permissionType: Owner
        groupId: groupId
        permission:
          get: 5
          create: 0
          update: 5
          administrate: 2
          delete: 6
          execute: 1
        ownerId: ownerId
      properties:
        permission:
          $ref: '#/components/schemas/FilePermission'
        permissionType:
          enum:
          - Owner
          - Group
          - Other
          - Anon
          type: string
        groupId:
          type: string
        ownerId:
          type: string
      type: object
    ExportCreateAdminVM:
      example:
        name: name
        icon: icon
        ownerId: ownerId
        templateId: templateId
        parentId: parentId
        content: content
        tags:
        - tags
        - tags
      properties:
        ownerId:
          type: string
        parentId:
          type: string
        templateId:
          type: string
        name:
          type: string
        tags:
          items:
            type: string
          type: array
        icon:
          type: string
        content:
          type: string
      type: object
    ExportVM:
      example:
        creatorUserId: creatorUserId
        reportId: reportId
        format: Pdf
        icon: icon
        type: File
        parentId: parentId
        tags:
        - tags
        - tags
        statusReason: None
        editedTime: 2000-01-23T04:56:07.000+00:00
        size: 0
        editorUserId: editorUserId
        name: name
        createdTime: 2000-01-23T04:56:07.000+00:00
        id: id
        subscriptionId: subscriptionId
        status: None
      properties:
        format:
          enum:
          - Pdf
          - Html
          - Mht
          - Image
          - Biff8
          - Csv
          - Dbf
          - Json
          - LaTeX
          - Odt
          - Ods
          - Docx
          - Pptx
          - Xlsx
          - Xps
          - Ppml
          - PS
          - Richtext
          - Svg
          - Text
          - Xaml
          - Xml
          - Zpl
          type: string
        reportId:
          type: string
        name:
          type: string
        parentId:
          type: string
        tags:
          items:
            type: string
          type: array
        icon:
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
        type:
          enum:
          - File
          - Folder
          type: string
        size:
          format: int64
          type: integer
        subscriptionId:
          type: string
        status:
          enum:
          - None
          - InQueue
          - InProcess
          - Success
          - Failed
          type: string
        statusReason:
          enum:
          - None
          - AllRight
          - Hang
          - Error
          - NotFound
          - NotEnoughSpace
          - ExportStarted
          - PreparationStarted
          type: string
        id:
          type: string
        createdTime:
          format: date-time
          type: string
        creatorUserId:
          type: string
        editedTime:
          format: date-time
          type: string
        editorUserId:
          type: string
      type: object
    ExportsVM:
      example:
        take: 5
        count: 6
        files:
        - creatorUserId: creatorUserId
          reportId: reportId
          format: Pdf
          icon: icon
          type: File
          parentId: parentId
          tags:
          - tags
          - tags
          statusReason: None
          editedTime: 2000-01-23T04:56:07.000+00:00
          size: 0
          editorUserId: editorUserId
          name: name
          createdTime: 2000-01-23T04:56:07.000+00:00
          id: id
          subscriptionId: subscriptionId
          status: None
        - creatorUserId: creatorUserId
          reportId: reportId
          format: Pdf
          icon: icon
          type: File
          parentId: parentId
          tags:
          - tags
          - tags
          statusReason: None
          editedTime: 2000-01-23T04:56:07.000+00:00
          size: 0
          editorUserId: editorUserId
          name: name
          createdTime: 2000-01-23T04:56:07.000+00:00
          id: id
          subscriptionId: subscriptionId
          status: None
        skip: 1
      properties:
        files:
          items:
            $ref: '#/components/schemas/ExportVM'
          type: array
        count:
          format: int64
          type: integer
        skip:
          format: int32
          type: integer
        take:
          format: int32
          type: integer
      type: object
    CreateGroupAdminVM:
      example:
        name: name
        ownerId: ownerId
        subscriptionId: subscriptionId
      properties:
        ownerId:
          type: string
        name:
          type: string
        subscriptionId:
          type: string
      required:
      - name
      - subscriptionId
      type: object
    GroupVM:
      example:
        name: name
        id: id
        subscriptionId: subscriptionId
      properties:
        id:
          type: string
        name:
          type: string
        subscriptionId:
          type: string
      type: object
    GroupsVM:
      example:
        take: 1
        count: 0
        groups:
        - name: name
          id: id
          subscriptionId: subscriptionId
        - name: name
          id: id
          subscriptionId: subscriptionId
        skip: 6
      properties:
        groups:
          items:
            $ref: '#/components/schemas/GroupVM'
          type: array
        count:
          format: int64
          type: integer
        skip:
          format: int32
          type: integer
        take:
          format: int32
          type: integer
      type: object
    UpdateGroupVM:
      example:
        name: name
        subscriptionId: subscriptionId
      properties:
        name:
          type: string
        subscriptionId:
          type: string
      type: object
    GroupPermissionsVM:
      example:
        permissionType: Owner
        groupId: groupId
        permission:
          get: 5
          create: 0
          update: 5
          administrate: 2
          delete: 6
          execute: 1
        ownerId: ownerId
      properties:
        permissionType:
          enum:
          - Owner
          - Group
          - Other
          - Anon
          type: string
        permission:
          $ref: '#/components/schemas/GroupPermission'
        groupId:
          type: string
        ownerId:
          type: string
      required:
      - permission
      - permissionType
      type: object
    GroupPermission:
      example:
        get: 5
        create: 0
        update: 5
        administrate: 2
        delete: 6
        execute: 1
      properties:
        create:
          enum:
          - 0
          - 1
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.GroupPermissionsEnums.Create
          x-enumNames:
          - None
          - User
          - All
        delete:
          enum:
          - 0
          - 1
          - 2
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.GroupPermissionsEnums.Delete
          x-enumNames:
          - None
          - Entity
          - User
          - All
        execute:
          enum:
          - 0
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.GroupPermissionsEnums.Execute
          x-enumNames:
          - None
          - All
        get:
          enum:
          - 0
          - 1
          - 2
          - 4
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.GroupPermissionsEnums.Get
          x-enumNames:
          - None
          - Entity
          - User
          - Permission
          - All
        update:
          enum:
          - 0
          - 1
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.GroupPermissionsEnums.Update
          x-enumNames:
          - None
          - Name
          - All
        administrate:
          enum:
          - 0
          - 1
          - 2
          - 4
          - 8
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.GroupPermissionsEnums.Administrate
          x-enumNames:
          - None
          - Owner
          - Group
          - Other
          - Anon
          - All
      type: object
    GroupPermissions:
      example:
        owner:
          get: 5
          create: 0
          update: 5
          administrate: 2
          delete: 6
          execute: 1
        anon:
          get: 5
          create: 0
          update: 5
          administrate: 2
          delete: 6
          execute: 1
        other:
          get: 5
          create: 0
          update: 5
          administrate: 2
          delete: 6
          execute: 1
        groups:
          key:
            get: 5
            create: 0
            update: 5
            administrate: 2
            delete: 6
            execute: 1
        ownerId: ownerId
      properties:
        ownerId:
          type: string
        owner:
          $ref: '#/components/schemas/GroupPermission'
        groups:
          additionalProperties:
            $ref: '#/components/schemas/GroupPermission'
          type: object
        other:
          $ref: '#/components/schemas/GroupPermission'
        anon:
          $ref: '#/components/schemas/GroupPermission'
      type: object
    ReportFolderCreateVM:
      example:
        name: name
        icon: icon
        tags:
        - tags
        - tags
      properties:
        name:
          type: string
        tags:
          items:
            type: string
          type: array
        icon:
          type: string
      type: object
    ReportCreateAdminVM:
      example:
        name: name
        icon: icon
        ownerId: ownerId
        templateId: templateId
        parentId: parentId
        content: content
        tags:
        - tags
        - tags
      properties:
        ownerId:
          type: string
        parentId:
          type: string
        templateId:
          type: string
        name:
          type: string
        tags:
          items:
            type: string
          type: array
        icon:
          type: string
        content:
          type: string
      type: object
    ReportVM:
      example:
        creatorUserId: creatorUserId
        icon: icon
        templateId: templateId
        type: File
        parentId: parentId
        tags:
        - tags
        - tags
        statusReason: None
        editedTime: 2000-01-23T04:56:07.000+00:00
        size: 6
        editorUserId: editorUserId
        name: name
        createdTime: 2000-01-23T04:56:07.000+00:00
        reportInfo:
          saveMode: All
          author: author
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          modified: 2000-01-23T04:56:07.000+00:00
          previewPictureRatio: 0.8008282
          tag: tag
          savePreviewPicture: true
          version: version
          creatorVersion: creatorVersion
          picture: picture
        id: id
        subscriptionId: subscriptionId
        status: None
      properties:
        templateId:
          type: string
        reportInfo:
          $ref: '#/components/schemas/ReportInfo'
        name:
          type: string
        parentId:
          type: string
        tags:
          items:
            type: string
          type: array
        icon:
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
        type:
          enum:
          - File
          - Folder
          type: string
        size:
          format: int64
          type: integer
        subscriptionId:
          type: string
        status:
          enum:
          - None
          - InQueue
          - InProcess
          - Success
          - Failed
          type: string
        statusReason:
          enum:
          - None
          - AllRight
          - Hang
          - Error
          - NotFound
          - NotEnoughSpace
          - ExportStarted
          - PreparationStarted
          type: string
        id:
          type: string
        createdTime:
          format: date-time
          type: string
        creatorUserId:
          type: string
        editedTime:
          format: date-time
          type: string
        editorUserId:
          type: string
      type: object
    ReportInfo:
      example:
        saveMode: All
        author: author
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        modified: 2000-01-23T04:56:07.000+00:00
        previewPictureRatio: 0.8008282
        tag: tag
        savePreviewPicture: true
        version: version
        creatorVersion: creatorVersion
        picture: picture
      properties:
        author:
          type: string
        created:
          format: date-time
          type: string
        creatorVersion:
          type: string
        description:
          type: string
        modified:
          format: date-time
          type: string
        name:
          type: string
        picture:
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
        previewPictureRatio:
          format: float
          type: number
        saveMode:
          enum:
          - All
          - Original
          - User
          - Role
          - Security
          - Deny
          - Custom
          type: string
        savePreviewPicture:
          type: boolean
        tag:
          type: string
        version:
          type: string
      type: object
    ReportsVM:
      example:
        take: 5
        count: 1
        files:
        - creatorUserId: creatorUserId
          icon: icon
          templateId: templateId
          type: File
          parentId: parentId
          tags:
          - tags
          - tags
          statusReason: None
          editedTime: 2000-01-23T04:56:07.000+00:00
          size: 6
          editorUserId: editorUserId
          name: name
          createdTime: 2000-01-23T04:56:07.000+00:00
          reportInfo:
            saveMode: All
            author: author
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            description: description
            modified: 2000-01-23T04:56:07.000+00:00
            previewPictureRatio: 0.8008282
            tag: tag
            savePreviewPicture: true
            version: version
            creatorVersion: creatorVersion
            picture: picture
          id: id
          subscriptionId: subscriptionId
          status: None
        - creatorUserId: creatorUserId
          icon: icon
          templateId: templateId
          type: File
          parentId: parentId
          tags:
          - tags
          - tags
          statusReason: None
          editedTime: 2000-01-23T04:56:07.000+00:00
          size: 6
          editorUserId: editorUserId
          name: name
          createdTime: 2000-01-23T04:56:07.000+00:00
          reportInfo:
            saveMode: All
            author: author
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            description: description
            modified: 2000-01-23T04:56:07.000+00:00
            previewPictureRatio: 0.8008282
            tag: tag
            savePreviewPicture: true
            version: version
            creatorVersion: creatorVersion
            picture: picture
          id: id
          subscriptionId: subscriptionId
          status: None
        skip: 5
      properties:
        files:
          items:
            $ref: '#/components/schemas/ReportVM'
          type: array
        count:
          format: int64
          type: integer
        skip:
          format: int32
          type: integer
        take:
          format: int32
          type: integer
      type: object
    AnalysisResultsVM:
      example:
        results:
        - level: 0
          signature: signature
          detail: detail
          id: id
          subscriptionId: subscriptionId
          type: 6
          fileId: fileId
          collectionName: collectionName
        - level: 0
          signature: signature
          detail: detail
          id: id
          subscriptionId: subscriptionId
          type: 6
          fileId: fileId
          collectionName: collectionName
      properties:
        results:
          items:
            $ref: '#/components/schemas/AnalysisResultVM'
          type: array
      type: object
    AnalysisResultVM:
      example:
        level: 0
        signature: signature
        detail: detail
        id: id
        subscriptionId: subscriptionId
        type: 6
        fileId: fileId
        collectionName: collectionName
      properties:
        level:
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          type: integer
        detail:
          type: string
        id:
          type: string
        subscriptionId:
          type: string
        fileId:
          type: string
        collectionName:
          type: string
        type:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          format: int32
          type: integer
        signature:
          type: string
      type: object
    SubscriptionInvitesVM:
      example:
        count: 6
        invites:
        - durable: true
          creatorUserId: creatorUserId
          expiredDate: 2000-01-23T04:56:07.000+00:00
          addedUsers:
          - userId: userId
            invitedAt: 2000-01-23T04:56:07.000+00:00
          - userId: userId
            invitedAt: 2000-01-23T04:56:07.000+00:00
          usages: 0
          accessToken: accessToken
        - durable: true
          creatorUserId: creatorUserId
          expiredDate: 2000-01-23T04:56:07.000+00:00
          addedUsers:
          - userId: userId
            invitedAt: 2000-01-23T04:56:07.000+00:00
          - userId: userId
            invitedAt: 2000-01-23T04:56:07.000+00:00
          usages: 0
          accessToken: accessToken
      properties:
        invites:
          items:
            $ref: '#/components/schemas/SubscriptionInviteVM'
          type: array
        count:
          format: int64
          type: integer
      type: object
    SubscriptionInviteVM:
      example:
        durable: true
        creatorUserId: creatorUserId
        expiredDate: 2000-01-23T04:56:07.000+00:00
        addedUsers:
        - userId: userId
          invitedAt: 2000-01-23T04:56:07.000+00:00
        - userId: userId
          invitedAt: 2000-01-23T04:56:07.000+00:00
        usages: 0
        accessToken: accessToken
      properties:
        usages:
          format: int64
          type: integer
        durable:
          type: boolean
        accessToken:
          type: string
        expiredDate:
          format: date-time
          type: string
        addedUsers:
          items:
            $ref: '#/components/schemas/InvitedUser'
          type: array
        creatorUserId:
          type: string
      type: object
    InvitedUser:
      example:
        userId: userId
        invitedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        userId:
          type: string
        invitedAt:
          format: date-time
          type: string
      type: object
    CreateSubscriptionInviteVM:
      example:
        durable: true
        expiredDate: 2000-01-23T04:56:07.000+00:00
        usages: 0
      properties:
        usages:
          format: int64
          type: integer
        durable:
          type: boolean
        expiredDate:
          format: date-time
          type: string
      type: object
    CreateSubscriptionPeriodVM:
      example:
        planId: planId
      properties:
        planId:
          type: string
      type: object
    SubscriptionVM:
      example:
        exportsFolder:
          bytesUsed: 4
          folderId: folderId
        current:
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          plan:
            onlineDesigner: true
            exportsSpaceLimit: 5
            displayName: displayName
            maxUsersCount: 9
            templatesSpaceLimit: 1
            fileUploadSizeLimit: 2
            hasSpaceOverdraft: true
            isActive: true
            dataSourceLimit: 7
            isDemo: true
            urlToBuy: urlToBuy
            pageLimit: 2
            readonlyTimeLimit: 6
            unlimitedPage: true
            reportsSpaceLimit: 5
            timePeriod: 0
            id: id
            groupLimit: 3
            timePeriodType: Second
            readonlyTimeLimitType: Second
        templatesFolder:
          bytesUsed: 4
          folderId: folderId
        old:
        - startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          plan:
            onlineDesigner: true
            exportsSpaceLimit: 5
            displayName: displayName
            maxUsersCount: 9
            templatesSpaceLimit: 1
            fileUploadSizeLimit: 2
            hasSpaceOverdraft: true
            isActive: true
            dataSourceLimit: 7
            isDemo: true
            urlToBuy: urlToBuy
            pageLimit: 2
            readonlyTimeLimit: 6
            unlimitedPage: true
            reportsSpaceLimit: 5
            timePeriod: 0
            id: id
            groupLimit: 3
            timePeriodType: Second
            readonlyTimeLimitType: Second
        - startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          plan:
            onlineDesigner: true
            exportsSpaceLimit: 5
            displayName: displayName
            maxUsersCount: 9
            templatesSpaceLimit: 1
            fileUploadSizeLimit: 2
            hasSpaceOverdraft: true
            isActive: true
            dataSourceLimit: 7
            isDemo: true
            urlToBuy: urlToBuy
            pageLimit: 2
            readonlyTimeLimit: 6
            unlimitedPage: true
            reportsSpaceLimit: 5
            timePeriod: 0
            id: id
            groupLimit: 3
            timePeriodType: Second
            readonlyTimeLimitType: Second
        name: name
        reportsFolder:
          bytesUsed: 4
          folderId: folderId
        id: id
        locale: locale
      properties:
        id:
          type: string
        name:
          type: string
        locale:
          type: string
        current:
          $ref: '#/components/schemas/SubscriptionPeriodVM'
        old:
          items:
            $ref: '#/components/schemas/SubscriptionPeriodVM'
          type: array
        templatesFolder:
          $ref: '#/components/schemas/SubscriptionFolder'
        reportsFolder:
          $ref: '#/components/schemas/SubscriptionFolder'
        exportsFolder:
          $ref: '#/components/schemas/SubscriptionFolder'
      type: object
    SubscriptionPeriodVM:
      example:
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        plan:
          onlineDesigner: true
          exportsSpaceLimit: 5
          displayName: displayName
          maxUsersCount: 9
          templatesSpaceLimit: 1
          fileUploadSizeLimit: 2
          hasSpaceOverdraft: true
          isActive: true
          dataSourceLimit: 7
          isDemo: true
          urlToBuy: urlToBuy
          pageLimit: 2
          readonlyTimeLimit: 6
          unlimitedPage: true
          reportsSpaceLimit: 5
          timePeriod: 0
          id: id
          groupLimit: 3
          timePeriodType: Second
          readonlyTimeLimitType: Second
      properties:
        startTime:
          format: date-time
          type: string
        endTime:
          format: date-time
          type: string
        plan:
          $ref: '#/components/schemas/SubscriptionPlanVM'
      type: object
    SubscriptionFolder:
      example:
        bytesUsed: 4
        folderId: folderId
      properties:
        folderId:
          type: string
        bytesUsed:
          format: int64
          type: integer
      type: object
    SubscriptionPlanVM:
      example:
        onlineDesigner: true
        exportsSpaceLimit: 5
        displayName: displayName
        maxUsersCount: 9
        templatesSpaceLimit: 1
        fileUploadSizeLimit: 2
        hasSpaceOverdraft: true
        isActive: true
        dataSourceLimit: 7
        isDemo: true
        urlToBuy: urlToBuy
        pageLimit: 2
        readonlyTimeLimit: 6
        unlimitedPage: true
        reportsSpaceLimit: 5
        timePeriod: 0
        id: id
        groupLimit: 3
        timePeriodType: Second
        readonlyTimeLimitType: Second
      properties:
        id:
          type: string
        isActive:
          type: boolean
        displayName:
          type: string
        timePeriodType:
          enum:
          - Second
          - Minute
          - Hour
          - Day
          - Week
          - Month
          - Year
          type: string
        timePeriod:
          format: int32
          type: integer
        readonlyTimeLimitType:
          enum:
          - Second
          - Minute
          - Hour
          - Day
          - Week
          - Month
          - Year
          type: string
        readonlyTimeLimit:
          format: int32
          type: integer
        templatesSpaceLimit:
          format: int64
          type: integer
        reportsSpaceLimit:
          format: int64
          type: integer
        exportsSpaceLimit:
          format: int64
          type: integer
        fileUploadSizeLimit:
          format: int64
          type: integer
        dataSourceLimit:
          format: int32
          type: integer
        maxUsersCount:
          format: int32
          type: integer
        hasSpaceOverdraft:
          type: boolean
        groupLimit:
          format: int32
          type: integer
        onlineDesigner:
          type: boolean
        isDemo:
          type: boolean
        urlToBuy:
          type: string
        unlimitedPage:
          type: boolean
        pageLimit:
          format: int32
          type: integer
      type: object
    CreateSubscriptionPlanVM:
      example:
        onlineDesigner: true
        exportsSpaceLimit: 5
        displayName: displayName
        maxUsersCount: 7
        templatesSpaceLimit: 6
        fileUploadSizeLimit: 5
        hasSpaceOverdraft: true
        isActive: true
        dataSourceLimit: 2
        isDemo: true
        urlToBuy: urlToBuy
        pageLimit: 3
        unlimitedPage: true
        reportsSpaceLimit: 1
        timePeriod: 0
        groupLimit: 9
        timePeriodType: Second
      properties:
        isActive:
          type: boolean
        displayName:
          type: string
        timePeriodType:
          enum:
          - Second
          - Minute
          - Hour
          - Day
          - Week
          - Month
          - Year
          type: string
        timePeriod:
          format: int32
          type: integer
        templatesSpaceLimit:
          format: int64
          type: integer
        reportsSpaceLimit:
          format: int64
          type: integer
        exportsSpaceLimit:
          format: int64
          type: integer
        fileUploadSizeLimit:
          format: int64
          type: integer
        dataSourceLimit:
          format: int32
          type: integer
        maxUsersCount:
          format: int32
          type: integer
        hasSpaceOverdraft:
          type: boolean
        groupLimit:
          format: int32
          type: integer
        onlineDesigner:
          type: boolean
        isDemo:
          type: boolean
        urlToBuy:
          type: string
        unlimitedPage:
          type: boolean
        pageLimit:
          format: int32
          type: integer
      type: object
    SubscriptionPlansVM:
      example:
        take: 1
        subscriptionPlans:
        - onlineDesigner: true
          exportsSpaceLimit: 5
          displayName: displayName
          maxUsersCount: 9
          templatesSpaceLimit: 1
          fileUploadSizeLimit: 2
          hasSpaceOverdraft: true
          isActive: true
          dataSourceLimit: 7
          isDemo: true
          urlToBuy: urlToBuy
          pageLimit: 2
          readonlyTimeLimit: 6
          unlimitedPage: true
          reportsSpaceLimit: 5
          timePeriod: 0
          id: id
          groupLimit: 3
          timePeriodType: Second
          readonlyTimeLimitType: Second
        - onlineDesigner: true
          exportsSpaceLimit: 5
          displayName: displayName
          maxUsersCount: 9
          templatesSpaceLimit: 1
          fileUploadSizeLimit: 2
          hasSpaceOverdraft: true
          isActive: true
          dataSourceLimit: 7
          isDemo: true
          urlToBuy: urlToBuy
          pageLimit: 2
          readonlyTimeLimit: 6
          unlimitedPage: true
          reportsSpaceLimit: 5
          timePeriod: 0
          id: id
          groupLimit: 3
          timePeriodType: Second
          readonlyTimeLimitType: Second
        count: 0
        skip: 6
      properties:
        subscriptionPlans:
          items:
            $ref: '#/components/schemas/SubscriptionPlanVM'
          type: array
        count:
          format: int64
          type: integer
        skip:
          format: int32
          type: integer
        take:
          format: int32
          type: integer
      type: object
    UpdateSubscriptionPlanVM:
      example:
        onlineDesigner: true
        exportsSpaceLimit: 5
        displayName: displayName
        maxUsersCount: 7
        templatesSpaceLimit: 6
        fileUploadSizeLimit: 5
        hasSpaceOverdraft: true
        isActive: true
        dataSourceLimit: 2
        isDemo: true
        urlToBuy: urlToBuy
        pageLimit: 3
        unlimitedPage: true
        reportsSpaceLimit: 1
        timePeriod: 0
        groupLimit: 9
        timePeriodType: Second
      properties:
        isActive:
          type: boolean
        displayName:
          type: string
        timePeriodType:
          enum:
          - Second
          - Minute
          - Hour
          - Day
          - Week
          - Month
          - Year
          type: string
        timePeriod:
          format: int32
          type: integer
        templatesSpaceLimit:
          format: int64
          type: integer
        reportsSpaceLimit:
          format: int64
          type: integer
        exportsSpaceLimit:
          format: int64
          type: integer
        fileUploadSizeLimit:
          format: int64
          type: integer
        dataSourceLimit:
          format: int32
          type: integer
        maxUsersCount:
          format: int32
          type: integer
        hasSpaceOverdraft:
          type: boolean
        groupLimit:
          format: int32
          type: integer
        onlineDesigner:
          type: boolean
        isDemo:
          type: boolean
        urlToBuy:
          type: string
        unlimitedPage:
          type: boolean
        pageLimit:
          format: int32
          type: integer
      type: object
    CreateSubscriptionVM:
      example:
        name: name
        planId: planId
        userId: userId
      properties:
        planId:
          type: string
        name:
          type: string
        userId:
          type: string
      type: object
    AdminSubscriptionVM:
      example:
        exportsFolder:
          bytesUsed: 4
          folderId: folderId
        defaultPermissions:
          groupPermissions:
            owner:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            anon:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            other:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            groups:
              key:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
            ownerId: ownerId
          filePermissions:
            owner:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            anon:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            other:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            groups:
              key:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
            ownerId: ownerId
          dataSourcePermissions:
            owner:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            anon:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            other:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            groups:
              key:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
            ownerId: ownerId
        current:
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          plan:
            onlineDesigner: true
            exportsSpaceLimit: 5
            displayName: displayName
            maxUsersCount: 9
            templatesSpaceLimit: 1
            fileUploadSizeLimit: 2
            hasSpaceOverdraft: true
            isActive: true
            dataSourceLimit: 7
            isDemo: true
            urlToBuy: urlToBuy
            pageLimit: 2
            readonlyTimeLimit: 6
            unlimitedPage: true
            reportsSpaceLimit: 5
            timePeriod: 0
            id: id
            groupLimit: 3
            timePeriodType: Second
            readonlyTimeLimitType: Second
        templatesFolder:
          bytesUsed: 4
          folderId: folderId
        old:
        - startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          plan:
            onlineDesigner: true
            exportsSpaceLimit: 5
            displayName: displayName
            maxUsersCount: 9
            templatesSpaceLimit: 1
            fileUploadSizeLimit: 2
            hasSpaceOverdraft: true
            isActive: true
            dataSourceLimit: 7
            isDemo: true
            urlToBuy: urlToBuy
            pageLimit: 2
            readonlyTimeLimit: 6
            unlimitedPage: true
            reportsSpaceLimit: 5
            timePeriod: 0
            id: id
            groupLimit: 3
            timePeriodType: Second
            readonlyTimeLimitType: Second
        - startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          plan:
            onlineDesigner: true
            exportsSpaceLimit: 5
            displayName: displayName
            maxUsersCount: 9
            templatesSpaceLimit: 1
            fileUploadSizeLimit: 2
            hasSpaceOverdraft: true
            isActive: true
            dataSourceLimit: 7
            isDemo: true
            urlToBuy: urlToBuy
            pageLimit: 2
            readonlyTimeLimit: 6
            unlimitedPage: true
            reportsSpaceLimit: 5
            timePeriod: 0
            id: id
            groupLimit: 3
            timePeriodType: Second
            readonlyTimeLimitType: Second
        name: name
        reportsFolder:
          bytesUsed: 4
          folderId: folderId
        id: id
        locale: locale
      properties:
        defaultPermissions:
          $ref: '#/components/schemas/DefaultPermissions'
        id:
          type: string
        name:
          type: string
        locale:
          type: string
        current:
          $ref: '#/components/schemas/SubscriptionPeriodVM'
        old:
          items:
            $ref: '#/components/schemas/SubscriptionPeriodVM'
          type: array
        templatesFolder:
          $ref: '#/components/schemas/SubscriptionFolder'
        reportsFolder:
          $ref: '#/components/schemas/SubscriptionFolder'
        exportsFolder:
          $ref: '#/components/schemas/SubscriptionFolder'
      type: object
    DefaultPermissions:
      example:
        groupPermissions:
          owner:
            get: 5
            create: 0
            update: 5
            administrate: 2
            delete: 6
            execute: 1
          anon:
            get: 5
            create: 0
            update: 5
            administrate: 2
            delete: 6
            execute: 1
          other:
            get: 5
            create: 0
            update: 5
            administrate: 2
            delete: 6
            execute: 1
          groups:
            key:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
          ownerId: ownerId
        filePermissions:
          owner:
            get: 5
            create: 0
            update: 5
            administrate: 2
            delete: 6
            execute: 1
          anon:
            get: 5
            create: 0
            update: 5
            administrate: 2
            delete: 6
            execute: 1
          other:
            get: 5
            create: 0
            update: 5
            administrate: 2
            delete: 6
            execute: 1
          groups:
            key:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
          ownerId: ownerId
        dataSourcePermissions:
          owner:
            get: 5
            create: 0
            update: 5
            administrate: 2
            delete: 6
            execute: 1
          anon:
            get: 5
            create: 0
            update: 5
            administrate: 2
            delete: 6
            execute: 1
          other:
            get: 5
            create: 0
            update: 5
            administrate: 2
            delete: 6
            execute: 1
          groups:
            key:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
          ownerId: ownerId
      properties:
        filePermissions:
          $ref: '#/components/schemas/FilePermissions'
        groupPermissions:
          $ref: '#/components/schemas/GroupPermissions'
        dataSourcePermissions:
          $ref: '#/components/schemas/DataSourcePermissions'
      type: object
    AdminSubscriptionsVM:
      example:
        take: 1
        subscriptions:
        - exportsFolder:
            bytesUsed: 4
            folderId: folderId
          defaultPermissions:
            groupPermissions:
              owner:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
              anon:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
              other:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
              groups:
                key:
                  get: 5
                  create: 0
                  update: 5
                  administrate: 2
                  delete: 6
                  execute: 1
              ownerId: ownerId
            filePermissions:
              owner:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
              anon:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
              other:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
              groups:
                key:
                  get: 5
                  create: 0
                  update: 5
                  administrate: 2
                  delete: 6
                  execute: 1
              ownerId: ownerId
            dataSourcePermissions:
              owner:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
              anon:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
              other:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
              groups:
                key:
                  get: 5
                  create: 0
                  update: 5
                  administrate: 2
                  delete: 6
                  execute: 1
              ownerId: ownerId
          current:
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            plan:
              onlineDesigner: true
              exportsSpaceLimit: 5
              displayName: displayName
              maxUsersCount: 9
              templatesSpaceLimit: 1
              fileUploadSizeLimit: 2
              hasSpaceOverdraft: true
              isActive: true
              dataSourceLimit: 7
              isDemo: true
              urlToBuy: urlToBuy
              pageLimit: 2
              readonlyTimeLimit: 6
              unlimitedPage: true
              reportsSpaceLimit: 5
              timePeriod: 0
              id: id
              groupLimit: 3
              timePeriodType: Second
              readonlyTimeLimitType: Second
          templatesFolder:
            bytesUsed: 4
            folderId: folderId
          old:
          - startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            plan:
              onlineDesigner: true
              exportsSpaceLimit: 5
              displayName: displayName
              maxUsersCount: 9
              templatesSpaceLimit: 1
              fileUploadSizeLimit: 2
              hasSpaceOverdraft: true
              isActive: true
              dataSourceLimit: 7
              isDemo: true
              urlToBuy: urlToBuy
              pageLimit: 2
              readonlyTimeLimit: 6
              unlimitedPage: true
              reportsSpaceLimit: 5
              timePeriod: 0
              id: id
              groupLimit: 3
              timePeriodType: Second
              readonlyTimeLimitType: Second
          - startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            plan:
              onlineDesigner: true
              exportsSpaceLimit: 5
              displayName: displayName
              maxUsersCount: 9
              templatesSpaceLimit: 1
              fileUploadSizeLimit: 2
              hasSpaceOverdraft: true
              isActive: true
              dataSourceLimit: 7
              isDemo: true
              urlToBuy: urlToBuy
              pageLimit: 2
              readonlyTimeLimit: 6
              unlimitedPage: true
              reportsSpaceLimit: 5
              timePeriod: 0
              id: id
              groupLimit: 3
              timePeriodType: Second
              readonlyTimeLimitType: Second
          name: name
          reportsFolder:
            bytesUsed: 4
            folderId: folderId
          id: id
          locale: locale
        - exportsFolder:
            bytesUsed: 4
            folderId: folderId
          defaultPermissions:
            groupPermissions:
              owner:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
              anon:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
              other:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
              groups:
                key:
                  get: 5
                  create: 0
                  update: 5
                  administrate: 2
                  delete: 6
                  execute: 1
              ownerId: ownerId
            filePermissions:
              owner:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
              anon:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
              other:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
              groups:
                key:
                  get: 5
                  create: 0
                  update: 5
                  administrate: 2
                  delete: 6
                  execute: 1
              ownerId: ownerId
            dataSourcePermissions:
              owner:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
              anon:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
              other:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
              groups:
                key:
                  get: 5
                  create: 0
                  update: 5
                  administrate: 2
                  delete: 6
                  execute: 1
              ownerId: ownerId
          current:
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            plan:
              onlineDesigner: true
              exportsSpaceLimit: 5
              displayName: displayName
              maxUsersCount: 9
              templatesSpaceLimit: 1
              fileUploadSizeLimit: 2
              hasSpaceOverdraft: true
              isActive: true
              dataSourceLimit: 7
              isDemo: true
              urlToBuy: urlToBuy
              pageLimit: 2
              readonlyTimeLimit: 6
              unlimitedPage: true
              reportsSpaceLimit: 5
              timePeriod: 0
              id: id
              groupLimit: 3
              timePeriodType: Second
              readonlyTimeLimitType: Second
          templatesFolder:
            bytesUsed: 4
            folderId: folderId
          old:
          - startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            plan:
              onlineDesigner: true
              exportsSpaceLimit: 5
              displayName: displayName
              maxUsersCount: 9
              templatesSpaceLimit: 1
              fileUploadSizeLimit: 2
              hasSpaceOverdraft: true
              isActive: true
              dataSourceLimit: 7
              isDemo: true
              urlToBuy: urlToBuy
              pageLimit: 2
              readonlyTimeLimit: 6
              unlimitedPage: true
              reportsSpaceLimit: 5
              timePeriod: 0
              id: id
              groupLimit: 3
              timePeriodType: Second
              readonlyTimeLimitType: Second
          - startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            plan:
              onlineDesigner: true
              exportsSpaceLimit: 5
              displayName: displayName
              maxUsersCount: 9
              templatesSpaceLimit: 1
              fileUploadSizeLimit: 2
              hasSpaceOverdraft: true
              isActive: true
              dataSourceLimit: 7
              isDemo: true
              urlToBuy: urlToBuy
              pageLimit: 2
              readonlyTimeLimit: 6
              unlimitedPage: true
              reportsSpaceLimit: 5
              timePeriod: 0
              id: id
              groupLimit: 3
              timePeriodType: Second
              readonlyTimeLimitType: Second
          name: name
          reportsFolder:
            bytesUsed: 4
            folderId: folderId
          id: id
          locale: locale
        count: 0
        skip: 6
      properties:
        subscriptions:
          items:
            $ref: '#/components/schemas/AdminSubscriptionVM'
          type: array
        count:
          format: int64
          type: integer
        skip:
          format: int32
          type: integer
        take:
          format: int32
          type: integer
      type: object
    UpdateSubscriptionVM:
      example:
        defaultPermissions:
          groupPermissions:
            owner:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            anon:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            other:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            groups:
              key:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
            ownerId: ownerId
          filePermissions:
            owner:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            anon:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            other:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            groups:
              key:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
            ownerId: ownerId
          dataSourcePermissions:
            owner:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            anon:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            other:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            groups:
              key:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
            ownerId: ownerId
        name: name
        locale: locale
      properties:
        name:
          type: string
        locale:
          type: string
        defaultPermissions:
          $ref: '#/components/schemas/DefaultPermissions'
      type: object
    SubscriptionPermissions:
      example:
        owner:
          get: 5
          create: 0
          update: 5
          administrate: 2
          delete: 6
          execute: 1
        anon:
          get: 5
          create: 0
          update: 5
          administrate: 2
          delete: 6
          execute: 1
        other:
          get: 5
          create: 0
          update: 5
          administrate: 2
          delete: 6
          execute: 1
        groups:
          key:
            get: 5
            create: 0
            update: 5
            administrate: 2
            delete: 6
            execute: 1
        ownerId: ownerId
      properties:
        ownerId:
          type: string
        owner:
          $ref: '#/components/schemas/SubscriptionPermission'
        groups:
          additionalProperties:
            $ref: '#/components/schemas/SubscriptionPermission'
          type: object
        other:
          $ref: '#/components/schemas/SubscriptionPermission'
        anon:
          $ref: '#/components/schemas/SubscriptionPermission'
      type: object
    SubscriptionPermission:
      example:
        get: 5
        create: 0
        update: 5
        administrate: 2
        delete: 6
        execute: 1
      properties:
        create:
          enum:
          - 0
          - 1
          - 2
          - 4
          - 8
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.SubscriptionPermissionsEnums.Create
          x-enumNames:
          - None
          - Users
          - Groups
          - DataSources
          - Invites
          - All
        delete:
          enum:
          - 0
          - 1
          - 2
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.SubscriptionPermissionsEnums.Delete
          x-enumNames:
          - None
          - Users
          - Invites
          - All
        execute:
          enum:
          - 0
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.SubscriptionPermissionsEnums.Execute
          x-enumNames:
          - None
          - All
        get:
          enum:
          - 0
          - 1
          - 2
          - 4
          - 8
          - 16
          - 32
          - 64
          - 128
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.SubscriptionPermissionsEnums.Get
          x-enumNames:
          - None
          - Entity
          - Users
          - Permission
          - RootDirectory
          - DataSources
          - Groups
          - DefaultPermissions
          - Invites
          - All
        update:
          enum:
          - 0
          - 1
          - 4
          - 8
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.SubscriptionPermissionsEnums.Update
          x-enumNames:
          - None
          - Name
          - DefaultPermissions
          - Locale
          - All
        administrate:
          enum:
          - 0
          - 1
          - 2
          - 4
          - 8
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.SubscriptionPermissionsEnums.Administrate
          x-enumNames:
          - None
          - Owner
          - Group
          - Other
          - Anon
          - All
      type: object
    SubscriptionPermissionsVM:
      example:
        permissionType: Owner
        groupId: groupId
        permission:
          get: 5
          create: 0
          update: 5
          administrate: 2
          delete: 6
          execute: 1
        ownerId: ownerId
      properties:
        permissionType:
          enum:
          - Owner
          - Group
          - Other
          - Anon
          type: string
        permission:
          $ref: '#/components/schemas/SubscriptionPermission'
        groupId:
          type: string
        ownerId:
          type: string
      type: object
    TemplateFolderCreateVM:
      example:
        name: name
        icon: icon
        tags:
        - tags
        - tags
      properties:
        name:
          type: string
        tags:
          items:
            type: string
          type: array
        icon:
          type: string
      type: object
    TemplateCreateAdminVM:
      example:
        name: name
        icon: icon
        ownerId: ownerId
        parentId: parentId
        content: content
        tags:
        - tags
        - tags
      properties:
        ownerId:
          type: string
        parentId:
          type: string
        name:
          type: string
        tags:
          items:
            type: string
          type: array
        icon:
          type: string
        content:
          type: string
      type: object
    TemplateVM:
      example:
        creatorUserId: creatorUserId
        icon: icon
        type: File
        parentId: parentId
        tags:
        - tags
        - tags
        statusReason: None
        editedTime: 2000-01-23T04:56:07.000+00:00
        size: 0
        editorUserId: editorUserId
        name: name
        createdTime: 2000-01-23T04:56:07.000+00:00
        reportInfo:
          saveMode: All
          author: author
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          modified: 2000-01-23T04:56:07.000+00:00
          previewPictureRatio: 0.8008282
          tag: tag
          savePreviewPicture: true
          version: version
          creatorVersion: creatorVersion
          picture: picture
        id: id
        subscriptionId: subscriptionId
        status: None
      properties:
        reportInfo:
          $ref: '#/components/schemas/ReportInfo'
        name:
          type: string
        parentId:
          type: string
        tags:
          items:
            type: string
          type: array
        icon:
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
        type:
          enum:
          - File
          - Folder
          type: string
        size:
          format: int64
          type: integer
        subscriptionId:
          type: string
        status:
          enum:
          - None
          - InQueue
          - InProcess
          - Success
          - Failed
          type: string
        statusReason:
          enum:
          - None
          - AllRight
          - Hang
          - Error
          - NotFound
          - NotEnoughSpace
          - ExportStarted
          - PreparationStarted
          type: string
        id:
          type: string
        createdTime:
          format: date-time
          type: string
        creatorUserId:
          type: string
        editedTime:
          format: date-time
          type: string
        editorUserId:
          type: string
      type: object
    TemplatesVM:
      example:
        take: 5
        count: 6
        files:
        - creatorUserId: creatorUserId
          icon: icon
          type: File
          parentId: parentId
          tags:
          - tags
          - tags
          statusReason: None
          editedTime: 2000-01-23T04:56:07.000+00:00
          size: 0
          editorUserId: editorUserId
          name: name
          createdTime: 2000-01-23T04:56:07.000+00:00
          reportInfo:
            saveMode: All
            author: author
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            description: description
            modified: 2000-01-23T04:56:07.000+00:00
            previewPictureRatio: 0.8008282
            tag: tag
            savePreviewPicture: true
            version: version
            creatorVersion: creatorVersion
            picture: picture
          id: id
          subscriptionId: subscriptionId
          status: None
        - creatorUserId: creatorUserId
          icon: icon
          type: File
          parentId: parentId
          tags:
          - tags
          - tags
          statusReason: None
          editedTime: 2000-01-23T04:56:07.000+00:00
          size: 0
          editorUserId: editorUserId
          name: name
          createdTime: 2000-01-23T04:56:07.000+00:00
          reportInfo:
            saveMode: All
            author: author
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            description: description
            modified: 2000-01-23T04:56:07.000+00:00
            previewPictureRatio: 0.8008282
            tag: tag
            savePreviewPicture: true
            version: version
            creatorVersion: creatorVersion
            picture: picture
          id: id
          subscriptionId: subscriptionId
          status: None
        skip: 1
      properties:
        files:
          items:
            $ref: '#/components/schemas/TemplateVM'
          type: array
        count:
          format: int64
          type: integer
        skip:
          format: int32
          type: integer
        take:
          format: int32
          type: integer
      type: object
    RegisterUserVM:
      example:
        subscriptions:
        - subscriptions
        - subscriptions
        password: password
        provider: provider
        adminPermission:
          get: 5
          create: 0
          update: 5
          administrate: 2
          delete: 6
          execute: 1
        name: name
        groups:
        - groups
        - groups
        id: id
        isAdmin: true
        email: email
        username: username
      properties:
        id:
          type: string
        subscriptions:
          items:
            type: string
          type: array
        groups:
          items:
            type: string
          type: array
        adminPermission:
          $ref: '#/components/schemas/AdminPermission'
        name:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          type: string
        isAdmin:
          type: boolean
        provider:
          type: string
      type: object
    AdminPermission:
      example:
        get: 5
        create: 0
        update: 5
        administrate: 2
        delete: 6
        execute: 1
      properties:
        create:
          enum:
          - 0
          - 1
          - 2
          - 4
          - 8
          - 16
          - 32
          - 64
          - 128
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.AdminPermissionsEnums.Create
          x-enumNames:
          - None
          - SubscriptionPlan
          - Subscription
          - Group
          - User
          - DataSource
          - File
          - ApiKey
          - Invite
          - All
        delete:
          enum:
          - 0
          - 1
          - 2
          - 4
          - 8
          - 16
          - 32
          - 64
          - 128
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.AdminPermissionsEnums.Delete
          x-enumNames:
          - None
          - SubscriptionPlan
          - Subscription
          - Group
          - User
          - DataSource
          - File
          - ApiKey
          - Invite
          - All
        execute:
          enum:
          - 0
          - 1
          - 2
          - 4
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.AdminPermissionsEnums.Execute
          x-enumNames:
          - None
          - Renew
          - Analytics
          - ProblemSolving
          - All
        get:
          enum:
          - 0
          - 1
          - 2
          - 4
          - 8
          - 16
          - 32
          - 64
          - 128
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.AdminPermissionsEnums.Get
          x-enumNames:
          - None
          - SubscriptionPlan
          - Subscription
          - Group
          - User
          - DataSource
          - File
          - ApiKey
          - Invite
          - All
        update:
          enum:
          - 0
          - 1
          - 2
          - 4
          - 8
          - 16
          - 32
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.AdminPermissionsEnums.Update
          x-enumNames:
          - None
          - SubscriptionPlan
          - Subscription
          - Group
          - User
          - DataSource
          - File
          - All
        administrate:
          enum:
          - 0
          - 1
          - 2
          - 4
          - 8
          - -1
          format: int32
          type: integer
          x-enumFlags: true
          x-typeName: FastReport.Cloud.Enums.AdminPermissionsEnums.Administrate
          x-enumNames:
          - None
          - File
          - Subscription
          - Group
          - DataSource
          - All
      type: object
    UserVM:
      example:
        subscriptions:
        - subscriptions
        - subscriptions
        adminPermission:
          get: 5
          create: 0
          update: 5
          administrate: 2
          delete: 6
          execute: 1
        name: name
        groups:
        - groups
        - groups
        id: id
        isAdmin: true
        email: email
        username: username
      properties:
        id:
          type: string
        subscriptions:
          items:
            type: string
          type: array
        groups:
          items:
            type: string
          type: array
        adminPermission:
          $ref: '#/components/schemas/AdminPermission'
        isAdmin:
          type: boolean
        name:
          type: string
        username:
          type: string
        email:
          type: string
      type: object
    UsersVM:
      example:
        take: 3
        count: 7
        skip: 9
        users:
        - subscriptions:
          - subscriptions
          - subscriptions
          adminPermission:
            get: 5
            create: 0
            update: 5
            administrate: 2
            delete: 6
            execute: 1
          name: name
          groups:
          - groups
          - groups
          id: id
          isAdmin: true
          email: email
          username: username
        - subscriptions:
          - subscriptions
          - subscriptions
          adminPermission:
            get: 5
            create: 0
            update: 5
            administrate: 2
            delete: 6
            execute: 1
          name: name
          groups:
          - groups
          - groups
          id: id
          isAdmin: true
          email: email
          username: username
      properties:
        users:
          items:
            $ref: '#/components/schemas/UserVM'
          type: array
        count:
          format: int64
          type: integer
        skip:
          format: int32
          type: integer
        take:
          format: int32
          type: integer
      type: object
    UpdateUserVM:
      example:
        subscriptions:
        - subscriptions
        - subscriptions
        password: password
        provider: provider
        adminPermission:
          get: 5
          create: 0
          update: 5
          administrate: 2
          delete: 6
          execute: 1
        name: name
        groups:
        - groups
        - groups
        isAdmin: true
        email: email
        username: username
      properties:
        subscriptions:
          items:
            type: string
          type: array
        groups:
          items:
            type: string
          type: array
        adminPermission:
          $ref: '#/components/schemas/AdminPermission'
        name:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          type: string
        isAdmin:
          type: boolean
        provider:
          type: string
      type: object
    CreateGroupVM:
      example:
        name: name
        subscriptionId: subscriptionId
      properties:
        name:
          type: string
        subscriptionId:
          type: string
      required:
      - name
      - subscriptionId
      type: object
    RenameGroupVM:
      example:
        name: name
      properties:
        name:
          type: string
      required:
      - name
      type: object
    GroupUsersVM:
      example:
        take: 6
        count: 0
        skip: 1
        users:
        - userId: userId
        - userId: userId
      properties:
        users:
          items:
            $ref: '#/components/schemas/GroupUserVM'
          type: array
        count:
          format: int64
          type: integer
        take:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
      type: object
    GroupUserVM:
      example:
        userId: userId
      properties:
        userId:
          type: string
      type: object
    SubscriptionsVM:
      example:
        take: 1
        subscriptions:
        - exportsFolder:
            bytesUsed: 4
            folderId: folderId
          current:
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            plan:
              onlineDesigner: true
              exportsSpaceLimit: 5
              displayName: displayName
              maxUsersCount: 9
              templatesSpaceLimit: 1
              fileUploadSizeLimit: 2
              hasSpaceOverdraft: true
              isActive: true
              dataSourceLimit: 7
              isDemo: true
              urlToBuy: urlToBuy
              pageLimit: 2
              readonlyTimeLimit: 6
              unlimitedPage: true
              reportsSpaceLimit: 5
              timePeriod: 0
              id: id
              groupLimit: 3
              timePeriodType: Second
              readonlyTimeLimitType: Second
          templatesFolder:
            bytesUsed: 4
            folderId: folderId
          old:
          - startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            plan:
              onlineDesigner: true
              exportsSpaceLimit: 5
              displayName: displayName
              maxUsersCount: 9
              templatesSpaceLimit: 1
              fileUploadSizeLimit: 2
              hasSpaceOverdraft: true
              isActive: true
              dataSourceLimit: 7
              isDemo: true
              urlToBuy: urlToBuy
              pageLimit: 2
              readonlyTimeLimit: 6
              unlimitedPage: true
              reportsSpaceLimit: 5
              timePeriod: 0
              id: id
              groupLimit: 3
              timePeriodType: Second
              readonlyTimeLimitType: Second
          - startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            plan:
              onlineDesigner: true
              exportsSpaceLimit: 5
              displayName: displayName
              maxUsersCount: 9
              templatesSpaceLimit: 1
              fileUploadSizeLimit: 2
              hasSpaceOverdraft: true
              isActive: true
              dataSourceLimit: 7
              isDemo: true
              urlToBuy: urlToBuy
              pageLimit: 2
              readonlyTimeLimit: 6
              unlimitedPage: true
              reportsSpaceLimit: 5
              timePeriod: 0
              id: id
              groupLimit: 3
              timePeriodType: Second
              readonlyTimeLimitType: Second
          name: name
          reportsFolder:
            bytesUsed: 4
            folderId: folderId
          id: id
          locale: locale
        - exportsFolder:
            bytesUsed: 4
            folderId: folderId
          current:
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            plan:
              onlineDesigner: true
              exportsSpaceLimit: 5
              displayName: displayName
              maxUsersCount: 9
              templatesSpaceLimit: 1
              fileUploadSizeLimit: 2
              hasSpaceOverdraft: true
              isActive: true
              dataSourceLimit: 7
              isDemo: true
              urlToBuy: urlToBuy
              pageLimit: 2
              readonlyTimeLimit: 6
              unlimitedPage: true
              reportsSpaceLimit: 5
              timePeriod: 0
              id: id
              groupLimit: 3
              timePeriodType: Second
              readonlyTimeLimitType: Second
          templatesFolder:
            bytesUsed: 4
            folderId: folderId
          old:
          - startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            plan:
              onlineDesigner: true
              exportsSpaceLimit: 5
              displayName: displayName
              maxUsersCount: 9
              templatesSpaceLimit: 1
              fileUploadSizeLimit: 2
              hasSpaceOverdraft: true
              isActive: true
              dataSourceLimit: 7
              isDemo: true
              urlToBuy: urlToBuy
              pageLimit: 2
              readonlyTimeLimit: 6
              unlimitedPage: true
              reportsSpaceLimit: 5
              timePeriod: 0
              id: id
              groupLimit: 3
              timePeriodType: Second
              readonlyTimeLimitType: Second
          - startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            plan:
              onlineDesigner: true
              exportsSpaceLimit: 5
              displayName: displayName
              maxUsersCount: 9
              templatesSpaceLimit: 1
              fileUploadSizeLimit: 2
              hasSpaceOverdraft: true
              isActive: true
              dataSourceLimit: 7
              isDemo: true
              urlToBuy: urlToBuy
              pageLimit: 2
              readonlyTimeLimit: 6
              unlimitedPage: true
              reportsSpaceLimit: 5
              timePeriod: 0
              id: id
              groupLimit: 3
              timePeriodType: Second
              readonlyTimeLimitType: Second
          name: name
          reportsFolder:
            bytesUsed: 4
            folderId: folderId
          id: id
          locale: locale
        count: 0
        skip: 6
      properties:
        subscriptions:
          items:
            $ref: '#/components/schemas/SubscriptionVM'
          type: array
        count:
          format: int64
          type: integer
        skip:
          format: int32
          type: integer
        take:
          format: int32
          type: integer
      type: object
    RenameSubscriptionVM:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    UpdateSubscriptionLocaleVM:
      example:
        locale: locale
      properties:
        locale:
          type: string
      type: object
    UpdateDefaultPermissionsVM:
      example:
        defaultPermissions:
          groupPermissions:
            owner:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            anon:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            other:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            groups:
              key:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
            ownerId: ownerId
          filePermissions:
            owner:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            anon:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            other:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            groups:
              key:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
            ownerId: ownerId
          dataSourcePermissions:
            owner:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            anon:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            other:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            groups:
              key:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
            ownerId: ownerId
      properties:
        defaultPermissions:
          $ref: '#/components/schemas/DefaultPermissions'
      type: object
    DefaultPermissionsVM:
      example:
        defaultPermissions:
          groupPermissions:
            owner:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            anon:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            other:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            groups:
              key:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
            ownerId: ownerId
          filePermissions:
            owner:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            anon:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            other:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            groups:
              key:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
            ownerId: ownerId
          dataSourcePermissions:
            owner:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            anon:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            other:
              get: 5
              create: 0
              update: 5
              administrate: 2
              delete: 6
              execute: 1
            groups:
              key:
                get: 5
                create: 0
                update: 5
                administrate: 2
                delete: 6
                execute: 1
            ownerId: ownerId
      properties:
        defaultPermissions:
          $ref: '#/components/schemas/DefaultPermissions'
      type: object
    SubscriptionUsersVM:
      example:
        take: 6
        count: 0
        skip: 1
        users:
        - groups:
          - name: name
            id: id
            subscriptionId: subscriptionId
          - name: name
            id: id
            subscriptionId: subscriptionId
          userId: userId
        - groups:
          - name: name
            id: id
            subscriptionId: subscriptionId
          - name: name
            id: id
            subscriptionId: subscriptionId
          userId: userId
      properties:
        users:
          items:
            $ref: '#/components/schemas/SubscriptionUserVM'
          type: array
        count:
          format: int64
          type: integer
        take:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
      type: object
    SubscriptionUserVM:
      example:
        groups:
        - name: name
          id: id
          subscriptionId: subscriptionId
        - name: name
          id: id
          subscriptionId: subscriptionId
        userId: userId
      properties:
        userId:
          type: string
        groups:
          items:
            $ref: '#/components/schemas/GroupVM'
          type: array
      type: object
    UserProfileVM:
      example:
        isReadOnly: true
        name: name
        id: id
        email: email
        username: username
      properties:
        id:
          type: string
        name:
          type: string
        username:
          type: string
        email:
          type: string
        isReadOnly:
          type: boolean
      type: object
    UserProfileUpdateVM:
      example:
        passwordNew2: passwordNew2
        name: name
        email: email
        passwordNew: passwordNew
        username: username
      properties:
        name:
          type: string
        username:
          type: string
        email:
          type: string
        passwordNew:
          type: string
        passwordNew2:
          type: string
      type: object
    CountVM:
      example:
        count: 0
      properties:
        count:
          format: int64
          type: integer
      type: object
    BreadcrumbsVM:
      example:
        breadcrumbs:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        breadcrumbs:
          items:
            $ref: '#/components/schemas/BreadcrumbsModel'
          type: array
      type: object
    BreadcrumbsModel:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    FolderRenameVM:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    FolderIconVM:
      example:
        icon: icon
      properties:
        icon:
          type: string
      type: object
    FolderTagsUpdateVM:
      example:
        tags:
        - tags
        - tags
      properties:
        tags:
          items:
            type: string
          type: array
      type: object
    FileRenameVM:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    FileIconVM:
      example:
        icon: icon
      properties:
        icon:
          type: string
      type: object
    FileTagsUpdateVM:
      example:
        tags:
        - tags
        - tags
      properties:
        tags:
          items:
            type: string
          type: array
      type: object
    ExportReportTaskVM:
      example:
        fileName: fileName
        pagesCount: 0
        format: Pdf
        exportParameters:
          key: '{}'
        locale: locale
        folderId: folderId
      properties:
        fileName:
          type: string
        folderId:
          type: string
        locale:
          type: string
        pagesCount:
          format: int32
          type: integer
        format:
          enum:
          - Pdf
          - Html
          - Mht
          - Image
          - Biff8
          - Csv
          - Dbf
          - Json
          - LaTeX
          - Odt
          - Ods
          - Docx
          - Pptx
          - Xlsx
          - Xps
          - Ppml
          - PS
          - Richtext
          - Svg
          - Text
          - Xaml
          - Xml
          - Zpl
          type: string
        exportParameters:
          additionalProperties:
            properties: {}
            type: object
          type: object
      type: object
    ReportCreateVM:
      example:
        name: name
        icon: icon
        templateId: templateId
        content: content
        tags:
        - tags
        - tags
      properties:
        templateId:
          type: string
        name:
          type: string
        tags:
          items:
            type: string
          type: array
        icon:
          type: string
        content:
          type: string
      type: object
    ExportTemplateTaskVM:
      example:
        fileName: fileName
        pagesCount: 0
        format: Pdf
        exportParameters:
          key: '{}'
        reportParameters:
          key: '{}'
        locale: locale
        folderId: folderId
      properties:
        fileName:
          type: string
        folderId:
          type: string
        locale:
          type: string
        pagesCount:
          format: int32
          type: integer
        format:
          enum:
          - Pdf
          - Html
          - Mht
          - Image
          - Biff8
          - Csv
          - Dbf
          - Json
          - LaTeX
          - Odt
          - Ods
          - Docx
          - Pptx
          - Xlsx
          - Xps
          - Ppml
          - PS
          - Richtext
          - Svg
          - Text
          - Xaml
          - Xml
          - Zpl
          type: string
        exportParameters:
          additionalProperties:
            properties: {}
            type: object
          type: object
        reportParameters:
          additionalProperties:
            properties: {}
            type: object
          type: object
      type: object
    PrepareTemplateTaskVM:
      example:
        pagesCount: 0
        parentFolderId: parentFolderId
        name: name
        reportParameters:
          key: reportParameters
        locale: locale
      properties:
        name:
          type: string
        locale:
          type: string
        parentFolderId:
          type: string
        pagesCount:
          format: int32
          type: integer
        reportParameters:
          additionalProperties:
            type: string
          type: object
      type: object
    TemplateCreateVM:
      example:
        name: name
        icon: icon
        content: content
        tags:
        - tags
        - tags
      properties:
        name:
          type: string
        tags:
          items:
            type: string
          type: array
        icon:
          type: string
        content:
          type: string
      type: object
  securitySchemes:
    JWT:
      description: 'JWT Authorization header using the Bearer scheme. Example: "Authorization:
        Bearer {token}"'
      in: header
      name: Authorization
      type: apiKey
    ApiKey:
      description: Put `apikey` in user name and apikey value in the password
      scheme: basic
      type: http
x-original-swagger-version: "2.0"

