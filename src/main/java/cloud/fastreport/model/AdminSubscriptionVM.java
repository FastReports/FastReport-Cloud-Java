/*
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloud.fastreport.model;

import java.util.Objects;
import java.util.Arrays;
import cloud.fastreport.model.DefaultPermissionsVM;
import cloud.fastreport.model.SubscriptionFolder;
import cloud.fastreport.model.SubscriptionPeriodVM;
import cloud.fastreport.model.SubscriptionVM;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AdminSubscriptionVM
 */
@JsonPropertyOrder({
  AdminSubscriptionVM.JSON_PROPERTY_DEFAULT_PERMISSIONS,
  AdminSubscriptionVM.JSON_PROPERTY_OWNER_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
@JsonIgnoreProperties(
  value = "$t", // ignore manually set $t, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the $t to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "$t", visible = true)

public class AdminSubscriptionVM extends SubscriptionVM {
  public static final String JSON_PROPERTY_DEFAULT_PERMISSIONS = "defaultPermissions";
  private DefaultPermissionsVM defaultPermissions;

  public static final String JSON_PROPERTY_OWNER_ID = "ownerId";
  private JsonNullable<String> ownerId = JsonNullable.<String>undefined();

  public AdminSubscriptionVM() {

  }

  public AdminSubscriptionVM defaultPermissions(DefaultPermissionsVM defaultPermissions) {
    
    this.defaultPermissions = defaultPermissions;
    return this;
  }

   /**
   * Get defaultPermissions
   * @return defaultPermissions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DefaultPermissionsVM getDefaultPermissions() {
    return defaultPermissions;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultPermissions(DefaultPermissionsVM defaultPermissions) {
    this.defaultPermissions = defaultPermissions;
  }


  public AdminSubscriptionVM ownerId(String ownerId) {
    this.ownerId = JsonNullable.<String>of(ownerId);
    
    return this;
  }

   /**
   * Get ownerId
   * @return ownerId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getOwnerId() {
        return ownerId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OWNER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOwnerId_JsonNullable() {
    return ownerId;
  }
  
  @JsonProperty(JSON_PROPERTY_OWNER_ID)
  public void setOwnerId_JsonNullable(JsonNullable<String> ownerId) {
    this.ownerId = ownerId;
  }

  public void setOwnerId(String ownerId) {
    this.ownerId = JsonNullable.<String>of(ownerId);
  }

  @Override
  public AdminSubscriptionVM id(String id) {
    this.setId(id);
    return this;
  }

  @Override
  public AdminSubscriptionVM name(String name) {
    this.setName(name);
    return this;
  }

  @Override
  public AdminSubscriptionVM locale(String locale) {
    this.setLocale(locale);
    return this;
  }

  @Override
  public AdminSubscriptionVM current(SubscriptionPeriodVM current) {
    this.setCurrent(current);
    return this;
  }

  @Override
  public AdminSubscriptionVM old(List<SubscriptionPeriodVM> old) {
    this.setOld(old);
    return this;
  }

  @Override
  public AdminSubscriptionVM templatesFolder(SubscriptionFolder templatesFolder) {
    this.setTemplatesFolder(templatesFolder);
    return this;
  }

  @Override
  public AdminSubscriptionVM reportsFolder(SubscriptionFolder reportsFolder) {
    this.setReportsFolder(reportsFolder);
    return this;
  }

  @Override
  public AdminSubscriptionVM exportsFolder(SubscriptionFolder exportsFolder) {
    this.setExportsFolder(exportsFolder);
    return this;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdminSubscriptionVM adminSubscriptionVM = (AdminSubscriptionVM) o;
    return Objects.equals(this.defaultPermissions, adminSubscriptionVM.defaultPermissions) &&
        equalsNullable(this.ownerId, adminSubscriptionVM.ownerId) &&
        super.equals(o);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultPermissions, hashCodeNullable(ownerId), super.hashCode());
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdminSubscriptionVM {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    defaultPermissions: ").append(toIndentedString(defaultPermissions)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

