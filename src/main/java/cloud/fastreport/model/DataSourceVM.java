/*
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloud.fastreport.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * DataSourceVM
 */
@JsonPropertyOrder({
  DataSourceVM.JSON_PROPERTY_ID,
  DataSourceVM.JSON_PROPERTY_NAME,
  DataSourceVM.JSON_PROPERTY_CONNECTION_TYPE,
  DataSourceVM.JSON_PROPERTY_CONNECTION_STRING,
  DataSourceVM.JSON_PROPERTY_DATA_STRUCTURE,
  DataSourceVM.JSON_PROPERTY_SUBSCRIPTION_ID,
  DataSourceVM.JSON_PROPERTY_EDITED_TIME,
  DataSourceVM.JSON_PROPERTY_EDITOR_USER_ID,
  DataSourceVM.JSON_PROPERTY_CREATED_TIME,
  DataSourceVM.JSON_PROPERTY_CREATOR_USER_ID,
  DataSourceVM.JSON_PROPERTY_IS_CONNECTED
})
@JsonTypeName("DataSourceVM")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DataSourceVM {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  /**
   * Gets or Sets connectionType
   */
  public enum ConnectionTypeEnum {
    JSON("JSON"),
    
    MSSQL("MSSQL"),
    
    CSV("CSV"),
    
    XML("XML"),
    
    MYSQL("MySQL"),
    
    POSTGRES("Postgres");

    private String value;

    ConnectionTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ConnectionTypeEnum fromValue(String value) {
      for (ConnectionTypeEnum b : ConnectionTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CONNECTION_TYPE = "connectionType";
  private ConnectionTypeEnum connectionType;

  public static final String JSON_PROPERTY_CONNECTION_STRING = "connectionString";
  private String connectionString;

  public static final String JSON_PROPERTY_DATA_STRUCTURE = "dataStructure";
  private String dataStructure;

  public static final String JSON_PROPERTY_SUBSCRIPTION_ID = "subscriptionId";
  private String subscriptionId;

  public static final String JSON_PROPERTY_EDITED_TIME = "editedTime";
  private OffsetDateTime editedTime;

  public static final String JSON_PROPERTY_EDITOR_USER_ID = "editorUserId";
  private String editorUserId;

  public static final String JSON_PROPERTY_CREATED_TIME = "createdTime";
  private OffsetDateTime createdTime;

  public static final String JSON_PROPERTY_CREATOR_USER_ID = "creatorUserId";
  private String creatorUserId;

  public static final String JSON_PROPERTY_IS_CONNECTED = "isConnected";
  private Boolean isConnected;


  public DataSourceVM id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public DataSourceVM name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public DataSourceVM connectionType(ConnectionTypeEnum connectionType) {
    
    this.connectionType = connectionType;
    return this;
  }

   /**
   * Get connectionType
   * @return connectionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONNECTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConnectionTypeEnum getConnectionType() {
    return connectionType;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnectionType(ConnectionTypeEnum connectionType) {
    this.connectionType = connectionType;
  }


  public DataSourceVM connectionString(String connectionString) {
    
    this.connectionString = connectionString;
    return this;
  }

   /**
   * Get connectionString
   * @return connectionString
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONNECTION_STRING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConnectionString() {
    return connectionString;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTION_STRING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnectionString(String connectionString) {
    this.connectionString = connectionString;
  }


  public DataSourceVM dataStructure(String dataStructure) {
    
    this.dataStructure = dataStructure;
    return this;
  }

   /**
   * Get dataStructure
   * @return dataStructure
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATA_STRUCTURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDataStructure() {
    return dataStructure;
  }


  @JsonProperty(JSON_PROPERTY_DATA_STRUCTURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDataStructure(String dataStructure) {
    this.dataStructure = dataStructure;
  }


  public DataSourceVM subscriptionId(String subscriptionId) {
    
    this.subscriptionId = subscriptionId;
    return this;
  }

   /**
   * Get subscriptionId
   * @return subscriptionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubscriptionId() {
    return subscriptionId;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscriptionId(String subscriptionId) {
    this.subscriptionId = subscriptionId;
  }


  public DataSourceVM editedTime(OffsetDateTime editedTime) {
    
    this.editedTime = editedTime;
    return this;
  }

   /**
   * Get editedTime
   * @return editedTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EDITED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getEditedTime() {
    return editedTime;
  }


  @JsonProperty(JSON_PROPERTY_EDITED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEditedTime(OffsetDateTime editedTime) {
    this.editedTime = editedTime;
  }


  public DataSourceVM editorUserId(String editorUserId) {
    
    this.editorUserId = editorUserId;
    return this;
  }

   /**
   * Get editorUserId
   * @return editorUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EDITOR_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEditorUserId() {
    return editorUserId;
  }


  @JsonProperty(JSON_PROPERTY_EDITOR_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEditorUserId(String editorUserId) {
    this.editorUserId = editorUserId;
  }


  public DataSourceVM createdTime(OffsetDateTime createdTime) {
    
    this.createdTime = createdTime;
    return this;
  }

   /**
   * Get createdTime
   * @return createdTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CREATED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreatedTime() {
    return createdTime;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedTime(OffsetDateTime createdTime) {
    this.createdTime = createdTime;
  }


  public DataSourceVM creatorUserId(String creatorUserId) {
    
    this.creatorUserId = creatorUserId;
    return this;
  }

   /**
   * Get creatorUserId
   * @return creatorUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CREATOR_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreatorUserId() {
    return creatorUserId;
  }


  @JsonProperty(JSON_PROPERTY_CREATOR_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatorUserId(String creatorUserId) {
    this.creatorUserId = creatorUserId;
  }


  public DataSourceVM isConnected(Boolean isConnected) {
    
    this.isConnected = isConnected;
    return this;
  }

   /**
   * Get isConnected
   * @return isConnected
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_IS_CONNECTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsConnected() {
    return isConnected;
  }


  @JsonProperty(JSON_PROPERTY_IS_CONNECTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsConnected(Boolean isConnected) {
    this.isConnected = isConnected;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataSourceVM dataSourceVM = (DataSourceVM) o;
    return Objects.equals(this.id, dataSourceVM.id) &&
        Objects.equals(this.name, dataSourceVM.name) &&
        Objects.equals(this.connectionType, dataSourceVM.connectionType) &&
        Objects.equals(this.connectionString, dataSourceVM.connectionString) &&
        Objects.equals(this.dataStructure, dataSourceVM.dataStructure) &&
        Objects.equals(this.subscriptionId, dataSourceVM.subscriptionId) &&
        Objects.equals(this.editedTime, dataSourceVM.editedTime) &&
        Objects.equals(this.editorUserId, dataSourceVM.editorUserId) &&
        Objects.equals(this.createdTime, dataSourceVM.createdTime) &&
        Objects.equals(this.creatorUserId, dataSourceVM.creatorUserId) &&
        Objects.equals(this.isConnected, dataSourceVM.isConnected);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, connectionType, connectionString, dataStructure, subscriptionId, editedTime, editorUserId, createdTime, creatorUserId, isConnected);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataSourceVM {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    connectionType: ").append(toIndentedString(connectionType)).append("\n");
    sb.append("    connectionString: ").append(toIndentedString(connectionString)).append("\n");
    sb.append("    dataStructure: ").append(toIndentedString(dataStructure)).append("\n");
    sb.append("    subscriptionId: ").append(toIndentedString(subscriptionId)).append("\n");
    sb.append("    editedTime: ").append(toIndentedString(editedTime)).append("\n");
    sb.append("    editorUserId: ").append(toIndentedString(editorUserId)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    creatorUserId: ").append(toIndentedString(creatorUserId)).append("\n");
    sb.append("    isConnected: ").append(toIndentedString(isConnected)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

