/*
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloud.fastreport.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * ExportTemplateTaskVM
 */
@JsonPropertyOrder({
  ExportTemplateTaskVM.JSON_PROPERTY_FILE_NAME,
  ExportTemplateTaskVM.JSON_PROPERTY_FOLDER_ID,
  ExportTemplateTaskVM.JSON_PROPERTY_LOCALE,
  ExportTemplateTaskVM.JSON_PROPERTY_PAGES_COUNT,
  ExportTemplateTaskVM.JSON_PROPERTY_FORMAT,
  ExportTemplateTaskVM.JSON_PROPERTY_EXPORT_PARAMETERS,
  ExportTemplateTaskVM.JSON_PROPERTY_REPORT_PARAMETERS
})
@JsonTypeName("ExportTemplateTaskVM")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ExportTemplateTaskVM {
  public static final String JSON_PROPERTY_FILE_NAME = "fileName";
  private String fileName;

  public static final String JSON_PROPERTY_FOLDER_ID = "folderId";
  private String folderId;

  public static final String JSON_PROPERTY_LOCALE = "locale";
  private String locale;

  public static final String JSON_PROPERTY_PAGES_COUNT = "pagesCount";
  private Integer pagesCount;

  /**
   * Gets or Sets format
   */
  public enum FormatEnum {
    PDF("Pdf"),
    
    HTML("Html"),
    
    MHT("Mht"),
    
    IMAGE("Image"),
    
    BIFF8("Biff8"),
    
    CSV("Csv"),
    
    DBF("Dbf"),
    
    JSON("Json"),
    
    LATEX("LaTeX"),
    
    ODT("Odt"),
    
    ODS("Ods"),
    
    DOCX("Docx"),
    
    PPTX("Pptx"),
    
    XLSX("Xlsx"),
    
    XPS("Xps"),
    
    PPML("Ppml"),
    
    PS("PS"),
    
    RICHTEXT("Richtext"),
    
    SVG("Svg"),
    
    TEXT("Text"),
    
    XAML("Xaml"),
    
    XML("Xml"),
    
    ZPL("Zpl");

    private String value;

    FormatEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FormatEnum fromValue(String value) {
      for (FormatEnum b : FormatEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_FORMAT = "format";
  private FormatEnum format;

  public static final String JSON_PROPERTY_EXPORT_PARAMETERS = "exportParameters";
  private Map<String, String> exportParameters = null;

  public static final String JSON_PROPERTY_REPORT_PARAMETERS = "reportParameters";
  private Map<String, String> reportParameters = null;


  public ExportTemplateTaskVM fileName(String fileName) {
    
    this.fileName = fileName;
    return this;
  }

   /**
   * Get fileName
   * @return fileName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FILE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFileName() {
    return fileName;
  }


  @JsonProperty(JSON_PROPERTY_FILE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFileName(String fileName) {
    this.fileName = fileName;
  }


  public ExportTemplateTaskVM folderId(String folderId) {
    
    this.folderId = folderId;
    return this;
  }

   /**
   * Get folderId
   * @return folderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FOLDER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFolderId() {
    return folderId;
  }


  @JsonProperty(JSON_PROPERTY_FOLDER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFolderId(String folderId) {
    this.folderId = folderId;
  }


  public ExportTemplateTaskVM locale(String locale) {
    
    this.locale = locale;
    return this;
  }

   /**
   * Get locale
   * @return locale
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LOCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocale() {
    return locale;
  }


  @JsonProperty(JSON_PROPERTY_LOCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocale(String locale) {
    this.locale = locale;
  }


  public ExportTemplateTaskVM pagesCount(Integer pagesCount) {
    
    this.pagesCount = pagesCount;
    return this;
  }

   /**
   * Get pagesCount
   * minimum: 0
   * maximum: 2147483647
   * @return pagesCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PAGES_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPagesCount() {
    return pagesCount;
  }


  @JsonProperty(JSON_PROPERTY_PAGES_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPagesCount(Integer pagesCount) {
    this.pagesCount = pagesCount;
  }


  public ExportTemplateTaskVM format(FormatEnum format) {
    
    this.format = format;
    return this;
  }

   /**
   * Get format
   * @return format
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FormatEnum getFormat() {
    return format;
  }


  @JsonProperty(JSON_PROPERTY_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFormat(FormatEnum format) {
    this.format = format;
  }


  public ExportTemplateTaskVM exportParameters(Map<String, String> exportParameters) {
    
    this.exportParameters = exportParameters;
    return this;
  }

  public ExportTemplateTaskVM putExportParametersItem(String key, String exportParametersItem) {
    if (this.exportParameters == null) {
      this.exportParameters = new HashMap<>();
    }
    this.exportParameters.put(key, exportParametersItem);
    return this;
  }

   /**
   * Get exportParameters
   * @return exportParameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXPORT_PARAMETERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getExportParameters() {
    return exportParameters;
  }


  @JsonProperty(JSON_PROPERTY_EXPORT_PARAMETERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExportParameters(Map<String, String> exportParameters) {
    this.exportParameters = exportParameters;
  }


  public ExportTemplateTaskVM reportParameters(Map<String, String> reportParameters) {
    
    this.reportParameters = reportParameters;
    return this;
  }

  public ExportTemplateTaskVM putReportParametersItem(String key, String reportParametersItem) {
    if (this.reportParameters == null) {
      this.reportParameters = new HashMap<>();
    }
    this.reportParameters.put(key, reportParametersItem);
    return this;
  }

   /**
   * Get reportParameters
   * @return reportParameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REPORT_PARAMETERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getReportParameters() {
    return reportParameters;
  }


  @JsonProperty(JSON_PROPERTY_REPORT_PARAMETERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportParameters(Map<String, String> reportParameters) {
    this.reportParameters = reportParameters;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExportTemplateTaskVM exportTemplateTaskVM = (ExportTemplateTaskVM) o;
    return Objects.equals(this.fileName, exportTemplateTaskVM.fileName) &&
        Objects.equals(this.folderId, exportTemplateTaskVM.folderId) &&
        Objects.equals(this.locale, exportTemplateTaskVM.locale) &&
        Objects.equals(this.pagesCount, exportTemplateTaskVM.pagesCount) &&
        Objects.equals(this.format, exportTemplateTaskVM.format) &&
        Objects.equals(this.exportParameters, exportTemplateTaskVM.exportParameters) &&
        Objects.equals(this.reportParameters, exportTemplateTaskVM.reportParameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileName, folderId, locale, pagesCount, format, exportParameters, reportParameters);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExportTemplateTaskVM {\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    folderId: ").append(toIndentedString(folderId)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    pagesCount: ").append(toIndentedString(pagesCount)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    exportParameters: ").append(toIndentedString(exportParameters)).append("\n");
    sb.append("    reportParameters: ").append(toIndentedString(reportParameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

