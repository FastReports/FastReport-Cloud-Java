/*
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloud.fastreport.model;

import java.util.Objects;
import java.util.Arrays;
import cloud.fastreport.model.ExportFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ExportVM
 */
@JsonPropertyOrder({
  ExportVM.JSON_PROPERTY_FORMAT,
  ExportVM.JSON_PROPERTY_REPORT_ID,
  ExportVM.JSON_PROPERTY_TEMPLATE_ID,
  ExportVM.JSON_PROPERTY_ID,
  ExportVM.JSON_PROPERTY_CREATED_TIME,
  ExportVM.JSON_PROPERTY_CREATOR_USER_ID,
  ExportVM.JSON_PROPERTY_EDITED_TIME,
  ExportVM.JSON_PROPERTY_EDITOR_USER_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ExportVM {
  public static final String JSON_PROPERTY_FORMAT = "format";
  private ExportFormat format;

  public static final String JSON_PROPERTY_REPORT_ID = "reportId";
  private JsonNullable<String> reportId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TEMPLATE_ID = "templateId";
  private JsonNullable<String> templateId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CREATED_TIME = "createdTime";
  private OffsetDateTime createdTime;

  public static final String JSON_PROPERTY_CREATOR_USER_ID = "creatorUserId";
  private JsonNullable<String> creatorUserId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EDITED_TIME = "editedTime";
  private OffsetDateTime editedTime;

  public static final String JSON_PROPERTY_EDITOR_USER_ID = "editorUserId";
  private JsonNullable<String> editorUserId = JsonNullable.<String>undefined();

  public ExportVM() {
  }

  public ExportVM format(ExportFormat format) {
    
    this.format = format;
    return this;
  }

   /**
   * Get format
   * @return format
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExportFormat getFormat() {
    return format;
  }


  @JsonProperty(JSON_PROPERTY_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFormat(ExportFormat format) {
    this.format = format;
  }


  public ExportVM reportId(String reportId) {
    this.reportId = JsonNullable.<String>of(reportId);
    
    return this;
  }

   /**
   * Get reportId
   * @return reportId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getReportId() {
        return reportId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REPORT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getReportId_JsonNullable() {
    return reportId;
  }
  
  @JsonProperty(JSON_PROPERTY_REPORT_ID)
  public void setReportId_JsonNullable(JsonNullable<String> reportId) {
    this.reportId = reportId;
  }

  public void setReportId(String reportId) {
    this.reportId = JsonNullable.<String>of(reportId);
  }


  public ExportVM templateId(String templateId) {
    this.templateId = JsonNullable.<String>of(templateId);
    
    return this;
  }

   /**
   * Get templateId
   * @return templateId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getTemplateId() {
        return templateId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEMPLATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTemplateId_JsonNullable() {
    return templateId;
  }
  
  @JsonProperty(JSON_PROPERTY_TEMPLATE_ID)
  public void setTemplateId_JsonNullable(JsonNullable<String> templateId) {
    this.templateId = templateId;
  }

  public void setTemplateId(String templateId) {
    this.templateId = JsonNullable.<String>of(templateId);
  }


  public ExportVM id(String id) {
    this.id = JsonNullable.<String>of(id);
    
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public ExportVM createdTime(OffsetDateTime createdTime) {
    
    this.createdTime = createdTime;
    return this;
  }

   /**
   * Get createdTime
   * @return createdTime
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreatedTime() {
    return createdTime;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedTime(OffsetDateTime createdTime) {
    this.createdTime = createdTime;
  }


  public ExportVM creatorUserId(String creatorUserId) {
    this.creatorUserId = JsonNullable.<String>of(creatorUserId);
    
    return this;
  }

   /**
   * Get creatorUserId
   * @return creatorUserId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getCreatorUserId() {
        return creatorUserId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATOR_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCreatorUserId_JsonNullable() {
    return creatorUserId;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATOR_USER_ID)
  public void setCreatorUserId_JsonNullable(JsonNullable<String> creatorUserId) {
    this.creatorUserId = creatorUserId;
  }

  public void setCreatorUserId(String creatorUserId) {
    this.creatorUserId = JsonNullable.<String>of(creatorUserId);
  }


  public ExportVM editedTime(OffsetDateTime editedTime) {
    
    this.editedTime = editedTime;
    return this;
  }

   /**
   * Get editedTime
   * @return editedTime
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EDITED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getEditedTime() {
    return editedTime;
  }


  @JsonProperty(JSON_PROPERTY_EDITED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEditedTime(OffsetDateTime editedTime) {
    this.editedTime = editedTime;
  }


  public ExportVM editorUserId(String editorUserId) {
    this.editorUserId = JsonNullable.<String>of(editorUserId);
    
    return this;
  }

   /**
   * Get editorUserId
   * @return editorUserId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getEditorUserId() {
        return editorUserId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EDITOR_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEditorUserId_JsonNullable() {
    return editorUserId;
  }
  
  @JsonProperty(JSON_PROPERTY_EDITOR_USER_ID)
  public void setEditorUserId_JsonNullable(JsonNullable<String> editorUserId) {
    this.editorUserId = editorUserId;
  }

  public void setEditorUserId(String editorUserId) {
    this.editorUserId = JsonNullable.<String>of(editorUserId);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExportVM exportVM = (ExportVM) o;
    return Objects.equals(this.format, exportVM.format) &&
        equalsNullable(this.reportId, exportVM.reportId) &&
        equalsNullable(this.templateId, exportVM.templateId) &&
        equalsNullable(this.id, exportVM.id) &&
        Objects.equals(this.createdTime, exportVM.createdTime) &&
        equalsNullable(this.creatorUserId, exportVM.creatorUserId) &&
        Objects.equals(this.editedTime, exportVM.editedTime) &&
        equalsNullable(this.editorUserId, exportVM.editorUserId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(format, hashCodeNullable(reportId), hashCodeNullable(templateId), hashCodeNullable(id), createdTime, hashCodeNullable(creatorUserId), editedTime, hashCodeNullable(editorUserId));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExportVM {\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    reportId: ").append(toIndentedString(reportId)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    creatorUserId: ").append(toIndentedString(creatorUserId)).append("\n");
    sb.append("    editedTime: ").append(toIndentedString(editedTime)).append("\n");
    sb.append("    editorUserId: ").append(toIndentedString(editorUserId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

