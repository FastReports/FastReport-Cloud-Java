/*
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloud.fastreport.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * FolderSizeVM
 */
@JsonPropertyOrder({
  FolderSizeVM.JSON_PROPERTY_SIZE,
  FolderSizeVM.JSON_PROPERTY_REAL_SIZE,
  FolderSizeVM.JSON_PROPERTY_DOCUMENTS_COUNT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FolderSizeVM {
  public static final String JSON_PROPERTY_SIZE = "size";
  private Long size;

  public static final String JSON_PROPERTY_REAL_SIZE = "realSize";
  private Long realSize;

  public static final String JSON_PROPERTY_DOCUMENTS_COUNT = "documentsCount";
  private Long documentsCount;

  public FolderSizeVM() {
  }

  public FolderSizeVM size(Long size) {
    
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getSize() {
    return size;
  }


  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSize(Long size) {
    this.size = size;
  }


  public FolderSizeVM realSize(Long realSize) {
    
    this.realSize = realSize;
    return this;
  }

   /**
   * Get realSize
   * @return realSize
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REAL_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getRealSize() {
    return realSize;
  }


  @JsonProperty(JSON_PROPERTY_REAL_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRealSize(Long realSize) {
    this.realSize = realSize;
  }


  public FolderSizeVM documentsCount(Long documentsCount) {
    
    this.documentsCount = documentsCount;
    return this;
  }

   /**
   * Get documentsCount
   * @return documentsCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENTS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getDocumentsCount() {
    return documentsCount;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENTS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentsCount(Long documentsCount) {
    this.documentsCount = documentsCount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FolderSizeVM folderSizeVM = (FolderSizeVM) o;
    return Objects.equals(this.size, folderSizeVM.size) &&
        Objects.equals(this.realSize, folderSizeVM.realSize) &&
        Objects.equals(this.documentsCount, folderSizeVM.documentsCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(size, realSize, documentsCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FolderSizeVM {\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    realSize: ").append(toIndentedString(realSize)).append("\n");
    sb.append("    documentsCount: ").append(toIndentedString(documentsCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

