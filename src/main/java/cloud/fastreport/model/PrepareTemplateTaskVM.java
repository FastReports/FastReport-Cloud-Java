/*
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloud.fastreport.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * PrepareTemplateTaskVM
 */
@JsonPropertyOrder({
  PrepareTemplateTaskVM.JSON_PROPERTY_NAME,
  PrepareTemplateTaskVM.JSON_PROPERTY_LOCALE,
  PrepareTemplateTaskVM.JSON_PROPERTY_PARENT_FOLDER_ID,
  PrepareTemplateTaskVM.JSON_PROPERTY_PAGES_COUNT,
  PrepareTemplateTaskVM.JSON_PROPERTY_REPORT_PARAMETERS
})
@JsonTypeName("PrepareTemplateTaskVM")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-04-22T14:13:34.806+03:00[Europe/Moscow]")
public class PrepareTemplateTaskVM {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_LOCALE = "locale";
  private String locale;

  public static final String JSON_PROPERTY_PARENT_FOLDER_ID = "parentFolderId";
  private String parentFolderId;

  public static final String JSON_PROPERTY_PAGES_COUNT = "pagesCount";
  private Integer pagesCount;

  public static final String JSON_PROPERTY_REPORT_PARAMETERS = "reportParameters";
  private Map<String, String> reportParameters = null;


  public PrepareTemplateTaskVM name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public PrepareTemplateTaskVM locale(String locale) {
    
    this.locale = locale;
    return this;
  }

   /**
   * Get locale
   * @return locale
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LOCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocale() {
    return locale;
  }


  public void setLocale(String locale) {
    this.locale = locale;
  }


  public PrepareTemplateTaskVM parentFolderId(String parentFolderId) {
    
    this.parentFolderId = parentFolderId;
    return this;
  }

   /**
   * Get parentFolderId
   * @return parentFolderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PARENT_FOLDER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getParentFolderId() {
    return parentFolderId;
  }


  public void setParentFolderId(String parentFolderId) {
    this.parentFolderId = parentFolderId;
  }


  public PrepareTemplateTaskVM pagesCount(Integer pagesCount) {
    
    this.pagesCount = pagesCount;
    return this;
  }

   /**
   * Get pagesCount
   * @return pagesCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PAGES_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPagesCount() {
    return pagesCount;
  }


  public void setPagesCount(Integer pagesCount) {
    this.pagesCount = pagesCount;
  }


  public PrepareTemplateTaskVM reportParameters(Map<String, String> reportParameters) {
    
    this.reportParameters = reportParameters;
    return this;
  }

  public PrepareTemplateTaskVM putReportParametersItem(String key, String reportParametersItem) {
    if (this.reportParameters == null) {
      this.reportParameters = new HashMap<>();
    }
    this.reportParameters.put(key, reportParametersItem);
    return this;
  }

   /**
   * Get reportParameters
   * @return reportParameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REPORT_PARAMETERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getReportParameters() {
    return reportParameters;
  }


  public void setReportParameters(Map<String, String> reportParameters) {
    this.reportParameters = reportParameters;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PrepareTemplateTaskVM prepareTemplateTaskVM = (PrepareTemplateTaskVM) o;
    return Objects.equals(this.name, prepareTemplateTaskVM.name) &&
        Objects.equals(this.locale, prepareTemplateTaskVM.locale) &&
        Objects.equals(this.parentFolderId, prepareTemplateTaskVM.parentFolderId) &&
        Objects.equals(this.pagesCount, prepareTemplateTaskVM.pagesCount) &&
        Objects.equals(this.reportParameters, prepareTemplateTaskVM.reportParameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, locale, parentFolderId, pagesCount, reportParameters);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PrepareTemplateTaskVM {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    parentFolderId: ").append(toIndentedString(parentFolderId)).append("\n");
    sb.append("    pagesCount: ").append(toIndentedString(pagesCount)).append("\n");
    sb.append("    reportParameters: ").append(toIndentedString(reportParameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

