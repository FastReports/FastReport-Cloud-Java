/*
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloud.fastreport.model;

import java.util.Objects;
import java.util.Arrays;
import cloud.fastreport.model.SelectedFilesVM;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SelectedFilesForDeletingVM
 */
@JsonPropertyOrder({
  SelectedFilesForDeletingVM.JSON_PROPERTY_IS_BIN,
  SelectedFilesForDeletingVM.JSON_PROPERTY_FOLDER_ID,
  SelectedFilesForDeletingVM.JSON_PROPERTY_SEARCH_PATTERN,
  SelectedFilesForDeletingVM.JSON_PROPERTY_USE_REGEX
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SelectedFilesForDeletingVM extends SelectedFilesVM {
  public static final String JSON_PROPERTY_IS_BIN = "isBin";
  private Boolean isBin;

  public static final String JSON_PROPERTY_FOLDER_ID = "folderId";
  private JsonNullable<String> folderId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SEARCH_PATTERN = "searchPattern";
  private JsonNullable<String> searchPattern = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USE_REGEX = "useRegex";
  private Boolean useRegex;

  public SelectedFilesForDeletingVM() {

  }

  public SelectedFilesForDeletingVM isBin(Boolean isBin) {
    
    this.isBin = isBin;
    return this;
  }

   /**
   * Get isBin
   * @return isBin
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_BIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsBin() {
    return isBin;
  }


  @JsonProperty(JSON_PROPERTY_IS_BIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsBin(Boolean isBin) {
    this.isBin = isBin;
  }


  public SelectedFilesForDeletingVM folderId(String folderId) {
    this.folderId = JsonNullable.<String>of(folderId);
    
    return this;
  }

   /**
   * Get folderId
   * @return folderId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getFolderId() {
        return folderId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FOLDER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFolderId_JsonNullable() {
    return folderId;
  }
  
  @JsonProperty(JSON_PROPERTY_FOLDER_ID)
  public void setFolderId_JsonNullable(JsonNullable<String> folderId) {
    this.folderId = folderId;
  }

  public void setFolderId(String folderId) {
    this.folderId = JsonNullable.<String>of(folderId);
  }


  public SelectedFilesForDeletingVM searchPattern(String searchPattern) {
    this.searchPattern = JsonNullable.<String>of(searchPattern);
    
    return this;
  }

   /**
   * Get searchPattern
   * @return searchPattern
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getSearchPattern() {
        return searchPattern.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SEARCH_PATTERN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSearchPattern_JsonNullable() {
    return searchPattern;
  }
  
  @JsonProperty(JSON_PROPERTY_SEARCH_PATTERN)
  public void setSearchPattern_JsonNullable(JsonNullable<String> searchPattern) {
    this.searchPattern = searchPattern;
  }

  public void setSearchPattern(String searchPattern) {
    this.searchPattern = JsonNullable.<String>of(searchPattern);
  }


  public SelectedFilesForDeletingVM useRegex(Boolean useRegex) {
    
    this.useRegex = useRegex;
    return this;
  }

   /**
   * Get useRegex
   * @return useRegex
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USE_REGEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUseRegex() {
    return useRegex;
  }


  @JsonProperty(JSON_PROPERTY_USE_REGEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUseRegex(Boolean useRegex) {
    this.useRegex = useRegex;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SelectedFilesForDeletingVM selectedFilesForDeletingVM = (SelectedFilesForDeletingVM) o;
    return Objects.equals(this.isBin, selectedFilesForDeletingVM.isBin) &&
        equalsNullable(this.folderId, selectedFilesForDeletingVM.folderId) &&
        equalsNullable(this.searchPattern, selectedFilesForDeletingVM.searchPattern) &&
        Objects.equals(this.useRegex, selectedFilesForDeletingVM.useRegex) &&
        super.equals(o);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(isBin, hashCodeNullable(folderId), hashCodeNullable(searchPattern), useRegex, super.hashCode());
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SelectedFilesForDeletingVM {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    isBin: ").append(toIndentedString(isBin)).append("\n");
    sb.append("    folderId: ").append(toIndentedString(folderId)).append("\n");
    sb.append("    searchPattern: ").append(toIndentedString(searchPattern)).append("\n");
    sb.append("    useRegex: ").append(toIndentedString(useRegex)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

