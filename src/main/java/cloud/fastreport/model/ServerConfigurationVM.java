/*
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloud.fastreport.model;

import java.util.Objects;
import cloud.fastreport.model.AuthConfigVM;
import cloud.fastreport.model.CloudBaseVM;
import cloud.fastreport.model.FrontendAppVM;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import cloud.fastreport.JSON;

/**
 * ServerConfigurationVM
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ServerConfigurationVM extends CloudBaseVM {
  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_LOGO_LINK = "logoLink";
  @SerializedName(SERIALIZED_NAME_LOGO_LINK)
  private String logoLink;

  public static final String SERIALIZED_NAME_COPYRIGHT = "copyright";
  @SerializedName(SERIALIZED_NAME_COPYRIGHT)
  private String copyright;

  public static final String SERIALIZED_NAME_CORPORATE_SERVER_MODE = "corporateServerMode";
  @SerializedName(SERIALIZED_NAME_CORPORATE_SERVER_MODE)
  private Boolean corporateServerMode;

  public static final String SERIALIZED_NAME_LAST_S_L_A_VERSION = "lastSLAVersion";
  @SerializedName(SERIALIZED_NAME_LAST_S_L_A_VERSION)
  private OffsetDateTime lastSLAVersion;

  public static final String SERIALIZED_NAME_IS_DISABLED = "isDisabled";
  @SerializedName(SERIALIZED_NAME_IS_DISABLED)
  private Boolean isDisabled;

  public static final String SERIALIZED_NAME_FRONTEND = "frontend";
  @SerializedName(SERIALIZED_NAME_FRONTEND)
  private FrontendAppVM frontend;

  public static final String SERIALIZED_NAME_INVARIANT_LOCALE = "invariantLocale";
  @SerializedName(SERIALIZED_NAME_INVARIANT_LOCALE)
  private String invariantLocale;

  public static final String SERIALIZED_NAME_AUTH = "auth";
  @SerializedName(SERIALIZED_NAME_AUTH)
  private AuthConfigVM auth;

  public static final String SERIALIZED_NAME_DESIGNER_FOR_ANONS = "designerForAnons";
  @SerializedName(SERIALIZED_NAME_DESIGNER_FOR_ANONS)
  private Boolean designerForAnons;

  public static final String SERIALIZED_NAME_SLA_LINK = "slaLink";
  @SerializedName(SERIALIZED_NAME_SLA_LINK)
  private String slaLink;

  public static final String SERIALIZED_NAME_FIRST_STEPS_VIDEO_LINK = "firstStepsVideoLink";
  @SerializedName(SERIALIZED_NAME_FIRST_STEPS_VIDEO_LINK)
  private String firstStepsVideoLink;

  public static final String SERIALIZED_NAME_ABOUT_LINK = "aboutLink";
  @SerializedName(SERIALIZED_NAME_ABOUT_LINK)
  private String aboutLink;

  public static final String SERIALIZED_NAME_HOME_PAGE_LINK = "homePageLink";
  @SerializedName(SERIALIZED_NAME_HOME_PAGE_LINK)
  private String homePageLink;

  public static final String SERIALIZED_NAME_AUTH_SERVER_NAME = "authServerName";
  @SerializedName(SERIALIZED_NAME_AUTH_SERVER_NAME)
  private String authServerName;

  public static final String SERIALIZED_NAME_UPDATE_WORKSPACE_LINK = "updateWorkspaceLink";
  @SerializedName(SERIALIZED_NAME_UPDATE_WORKSPACE_LINK)
  private String updateWorkspaceLink;

  public static final String SERIALIZED_NAME_$_T = "$t";
  @SerializedName(SERIALIZED_NAME_$_T)
  protected String $t;

  public ServerConfigurationVM() {
    this.$t = this.getClass().getSimpleName();
  }

  public ServerConfigurationVM title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public ServerConfigurationVM logoLink(String logoLink) {
    this.logoLink = logoLink;
    return this;
  }

   /**
   * Get logoLink
   * @return logoLink
  **/
  @javax.annotation.Nullable
  public String getLogoLink() {
    return logoLink;
  }

  public void setLogoLink(String logoLink) {
    this.logoLink = logoLink;
  }


  public ServerConfigurationVM copyright(String copyright) {
    this.copyright = copyright;
    return this;
  }

   /**
   * Get copyright
   * @return copyright
  **/
  @javax.annotation.Nullable
  public String getCopyright() {
    return copyright;
  }

  public void setCopyright(String copyright) {
    this.copyright = copyright;
  }


  public ServerConfigurationVM corporateServerMode(Boolean corporateServerMode) {
    this.corporateServerMode = corporateServerMode;
    return this;
  }

   /**
   * Get corporateServerMode
   * @return corporateServerMode
  **/
  @javax.annotation.Nullable
  public Boolean getCorporateServerMode() {
    return corporateServerMode;
  }

  public void setCorporateServerMode(Boolean corporateServerMode) {
    this.corporateServerMode = corporateServerMode;
  }


  public ServerConfigurationVM lastSLAVersion(OffsetDateTime lastSLAVersion) {
    this.lastSLAVersion = lastSLAVersion;
    return this;
  }

   /**
   * Get lastSLAVersion
   * @return lastSLAVersion
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getLastSLAVersion() {
    return lastSLAVersion;
  }

  public void setLastSLAVersion(OffsetDateTime lastSLAVersion) {
    this.lastSLAVersion = lastSLAVersion;
  }


  public ServerConfigurationVM isDisabled(Boolean isDisabled) {
    this.isDisabled = isDisabled;
    return this;
  }

   /**
   * Get isDisabled
   * @return isDisabled
  **/
  @javax.annotation.Nullable
  public Boolean getIsDisabled() {
    return isDisabled;
  }

  public void setIsDisabled(Boolean isDisabled) {
    this.isDisabled = isDisabled;
  }


  public ServerConfigurationVM frontend(FrontendAppVM frontend) {
    this.frontend = frontend;
    return this;
  }

   /**
   * Get frontend
   * @return frontend
  **/
  @javax.annotation.Nullable
  public FrontendAppVM getFrontend() {
    return frontend;
  }

  public void setFrontend(FrontendAppVM frontend) {
    this.frontend = frontend;
  }


  public ServerConfigurationVM invariantLocale(String invariantLocale) {
    this.invariantLocale = invariantLocale;
    return this;
  }

   /**
   * Get invariantLocale
   * @return invariantLocale
  **/
  @javax.annotation.Nullable
  public String getInvariantLocale() {
    return invariantLocale;
  }

  public void setInvariantLocale(String invariantLocale) {
    this.invariantLocale = invariantLocale;
  }


  public ServerConfigurationVM auth(AuthConfigVM auth) {
    this.auth = auth;
    return this;
  }

   /**
   * Get auth
   * @return auth
  **/
  @javax.annotation.Nullable
  public AuthConfigVM getAuth() {
    return auth;
  }

  public void setAuth(AuthConfigVM auth) {
    this.auth = auth;
  }


  public ServerConfigurationVM designerForAnons(Boolean designerForAnons) {
    this.designerForAnons = designerForAnons;
    return this;
  }

   /**
   * Get designerForAnons
   * @return designerForAnons
  **/
  @javax.annotation.Nullable
  public Boolean getDesignerForAnons() {
    return designerForAnons;
  }

  public void setDesignerForAnons(Boolean designerForAnons) {
    this.designerForAnons = designerForAnons;
  }


  public ServerConfigurationVM slaLink(String slaLink) {
    this.slaLink = slaLink;
    return this;
  }

   /**
   * Get slaLink
   * @return slaLink
  **/
  @javax.annotation.Nullable
  public String getSlaLink() {
    return slaLink;
  }

  public void setSlaLink(String slaLink) {
    this.slaLink = slaLink;
  }


  public ServerConfigurationVM firstStepsVideoLink(String firstStepsVideoLink) {
    this.firstStepsVideoLink = firstStepsVideoLink;
    return this;
  }

   /**
   * Get firstStepsVideoLink
   * @return firstStepsVideoLink
  **/
  @javax.annotation.Nullable
  public String getFirstStepsVideoLink() {
    return firstStepsVideoLink;
  }

  public void setFirstStepsVideoLink(String firstStepsVideoLink) {
    this.firstStepsVideoLink = firstStepsVideoLink;
  }


  public ServerConfigurationVM aboutLink(String aboutLink) {
    this.aboutLink = aboutLink;
    return this;
  }

   /**
   * Get aboutLink
   * @return aboutLink
  **/
  @javax.annotation.Nullable
  public String getAboutLink() {
    return aboutLink;
  }

  public void setAboutLink(String aboutLink) {
    this.aboutLink = aboutLink;
  }


  public ServerConfigurationVM homePageLink(String homePageLink) {
    this.homePageLink = homePageLink;
    return this;
  }

   /**
   * Get homePageLink
   * @return homePageLink
  **/
  @javax.annotation.Nullable
  public String getHomePageLink() {
    return homePageLink;
  }

  public void setHomePageLink(String homePageLink) {
    this.homePageLink = homePageLink;
  }


  public ServerConfigurationVM authServerName(String authServerName) {
    this.authServerName = authServerName;
    return this;
  }

   /**
   * Get authServerName
   * @return authServerName
  **/
  @javax.annotation.Nullable
  public String getAuthServerName() {
    return authServerName;
  }

  public void setAuthServerName(String authServerName) {
    this.authServerName = authServerName;
  }


  public ServerConfigurationVM updateWorkspaceLink(String updateWorkspaceLink) {
    this.updateWorkspaceLink = updateWorkspaceLink;
    return this;
  }

   /**
   * Get updateWorkspaceLink
   * @return updateWorkspaceLink
  **/
  @javax.annotation.Nullable
  public String getUpdateWorkspaceLink() {
    return updateWorkspaceLink;
  }

  public void setUpdateWorkspaceLink(String updateWorkspaceLink) {
    this.updateWorkspaceLink = updateWorkspaceLink;
  }


  public ServerConfigurationVM $t(String $t) {
    this.$t = $t;
    return this;
  }

   /**
   * Get $t
   * @return $t
  **/
  @javax.annotation.Nonnull
  public String get$T() {
    return $t;
  }

  public void set$T(String $t) {
    this.$t = $t;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServerConfigurationVM serverConfigurationVM = (ServerConfigurationVM) o;
    return Objects.equals(this.title, serverConfigurationVM.title) &&
        Objects.equals(this.logoLink, serverConfigurationVM.logoLink) &&
        Objects.equals(this.copyright, serverConfigurationVM.copyright) &&
        Objects.equals(this.corporateServerMode, serverConfigurationVM.corporateServerMode) &&
        Objects.equals(this.lastSLAVersion, serverConfigurationVM.lastSLAVersion) &&
        Objects.equals(this.isDisabled, serverConfigurationVM.isDisabled) &&
        Objects.equals(this.frontend, serverConfigurationVM.frontend) &&
        Objects.equals(this.invariantLocale, serverConfigurationVM.invariantLocale) &&
        Objects.equals(this.auth, serverConfigurationVM.auth) &&
        Objects.equals(this.designerForAnons, serverConfigurationVM.designerForAnons) &&
        Objects.equals(this.slaLink, serverConfigurationVM.slaLink) &&
        Objects.equals(this.firstStepsVideoLink, serverConfigurationVM.firstStepsVideoLink) &&
        Objects.equals(this.aboutLink, serverConfigurationVM.aboutLink) &&
        Objects.equals(this.homePageLink, serverConfigurationVM.homePageLink) &&
        Objects.equals(this.authServerName, serverConfigurationVM.authServerName) &&
        Objects.equals(this.updateWorkspaceLink, serverConfigurationVM.updateWorkspaceLink) &&
        Objects.equals(this.$t, serverConfigurationVM.$t) &&
        super.equals(o);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, logoLink, copyright, corporateServerMode, lastSLAVersion, isDisabled, frontend, invariantLocale, auth, designerForAnons, slaLink, firstStepsVideoLink, aboutLink, homePageLink, authServerName, updateWorkspaceLink, $t, super.hashCode());
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServerConfigurationVM {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    logoLink: ").append(toIndentedString(logoLink)).append("\n");
    sb.append("    copyright: ").append(toIndentedString(copyright)).append("\n");
    sb.append("    corporateServerMode: ").append(toIndentedString(corporateServerMode)).append("\n");
    sb.append("    lastSLAVersion: ").append(toIndentedString(lastSLAVersion)).append("\n");
    sb.append("    isDisabled: ").append(toIndentedString(isDisabled)).append("\n");
    sb.append("    frontend: ").append(toIndentedString(frontend)).append("\n");
    sb.append("    invariantLocale: ").append(toIndentedString(invariantLocale)).append("\n");
    sb.append("    auth: ").append(toIndentedString(auth)).append("\n");
    sb.append("    designerForAnons: ").append(toIndentedString(designerForAnons)).append("\n");
    sb.append("    slaLink: ").append(toIndentedString(slaLink)).append("\n");
    sb.append("    firstStepsVideoLink: ").append(toIndentedString(firstStepsVideoLink)).append("\n");
    sb.append("    aboutLink: ").append(toIndentedString(aboutLink)).append("\n");
    sb.append("    homePageLink: ").append(toIndentedString(homePageLink)).append("\n");
    sb.append("    authServerName: ").append(toIndentedString(authServerName)).append("\n");
    sb.append("    updateWorkspaceLink: ").append(toIndentedString(updateWorkspaceLink)).append("\n");
    sb.append("    $t: ").append(toIndentedString($t)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("$t");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("$t");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ServerConfigurationVM
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ServerConfigurationVM.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ServerConfigurationVM is not found in the empty JSON string", ServerConfigurationVM.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ServerConfigurationVM.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ServerConfigurationVM` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ServerConfigurationVM.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ServerConfigurationVM.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ServerConfigurationVM' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ServerConfigurationVM> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ServerConfigurationVM.class));

       return (TypeAdapter<T>) new TypeAdapter<ServerConfigurationVM>() {
           @Override
           public void write(JsonWriter out, ServerConfigurationVM value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ServerConfigurationVM read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             // comment by Detrav, do not need to validate JSON while parse
             //validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ServerConfigurationVM given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ServerConfigurationVM
  * @throws IOException if the JSON string is invalid with respect to ServerConfigurationVM
  */
  public static ServerConfigurationVM fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ServerConfigurationVM.class);
  }

 /**
  * Convert an instance of ServerConfigurationVM to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

