/*
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloud.fastreport.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import cloud.fastreport.model.TaskAdministrate;
import cloud.fastreport.model.TaskCreate;
import cloud.fastreport.model.TaskDelete;
import cloud.fastreport.model.TaskExecute;
import cloud.fastreport.model.TaskGet;
import cloud.fastreport.model.TaskUpdate;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * TaskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission
 */
@JsonPropertyOrder({
  TaskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission.JSON_PROPERTY_CREATE,
  TaskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission.JSON_PROPERTY_DELETE,
  TaskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission.JSON_PROPERTY_EXECUTE,
  TaskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission.JSON_PROPERTY_GET,
  TaskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission.JSON_PROPERTY_UPDATE,
  TaskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission.JSON_PROPERTY_ADMINISTRATE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TaskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission {
  public static final String JSON_PROPERTY_CREATE = "create";
  private TaskCreate create;

  public static final String JSON_PROPERTY_DELETE = "delete";
  private TaskDelete delete;

  public static final String JSON_PROPERTY_EXECUTE = "execute";
  private TaskExecute execute;

  public static final String JSON_PROPERTY_GET = "get";
  private TaskGet get;

  public static final String JSON_PROPERTY_UPDATE = "update";
  private TaskUpdate update;

  public static final String JSON_PROPERTY_ADMINISTRATE = "administrate";
  private TaskAdministrate administrate;

  public TaskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission() { 
  }

  public TaskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission create(TaskCreate create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TaskCreate getCreate() {
    return create;
  }


  @JsonProperty(JSON_PROPERTY_CREATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreate(TaskCreate create) {
    this.create = create;
  }


  public TaskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission delete(TaskDelete delete) {
    this.delete = delete;
    return this;
  }

   /**
   * Get delete
   * @return delete
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TaskDelete getDelete() {
    return delete;
  }


  @JsonProperty(JSON_PROPERTY_DELETE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDelete(TaskDelete delete) {
    this.delete = delete;
  }


  public TaskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission execute(TaskExecute execute) {
    this.execute = execute;
    return this;
  }

   /**
   * Get execute
   * @return execute
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXECUTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TaskExecute getExecute() {
    return execute;
  }


  @JsonProperty(JSON_PROPERTY_EXECUTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExecute(TaskExecute execute) {
    this.execute = execute;
  }


  public TaskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission get(TaskGet get) {
    this.get = get;
    return this;
  }

   /**
   * Get get
   * @return get
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TaskGet getGet() {
    return get;
  }


  @JsonProperty(JSON_PROPERTY_GET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGet(TaskGet get) {
    this.get = get;
  }


  public TaskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission update(TaskUpdate update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TaskUpdate getUpdate() {
    return update;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdate(TaskUpdate update) {
    this.update = update;
  }


  public TaskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission administrate(TaskAdministrate administrate) {
    this.administrate = administrate;
    return this;
  }

   /**
   * Get administrate
   * @return administrate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADMINISTRATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TaskAdministrate getAdministrate() {
    return administrate;
  }


  @JsonProperty(JSON_PROPERTY_ADMINISTRATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdministrate(TaskAdministrate administrate) {
    this.administrate = administrate;
  }


  /**
   * Return true if this TaskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission taskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission = (TaskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission) o;
    return Objects.equals(this.create, taskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission.create) &&
        Objects.equals(this.delete, taskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission.delete) &&
        Objects.equals(this.execute, taskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission.execute) &&
        Objects.equals(this.get, taskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission.get) &&
        Objects.equals(this.update, taskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission.update) &&
        Objects.equals(this.administrate, taskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission.administrate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(create, delete, execute, get, update, administrate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskCreateTaskGetTaskUpdateTaskDeleteTaskExecuteTaskAdministratePermission {\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    delete: ").append(toIndentedString(delete)).append("\n");
    sb.append("    execute: ").append(toIndentedString(execute)).append("\n");
    sb.append("    get: ").append(toIndentedString(get)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    administrate: ").append(toIndentedString(administrate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `create` to the URL query string
    if (getCreate() != null) {
      joiner.add(String.format("%screate%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCreate()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `delete` to the URL query string
    if (getDelete() != null) {
      joiner.add(String.format("%sdelete%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDelete()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `execute` to the URL query string
    if (getExecute() != null) {
      joiner.add(String.format("%sexecute%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getExecute()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `get` to the URL query string
    if (getGet() != null) {
      joiner.add(String.format("%sget%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getGet()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `update` to the URL query string
    if (getUpdate() != null) {
      joiner.add(String.format("%supdate%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUpdate()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `administrate` to the URL query string
    if (getAdministrate() != null) {
      joiner.add(String.format("%sadministrate%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAdministrate()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

