/*
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloud.fastreport.model;

import java.util.Objects;
import java.util.Arrays;
import cloud.fastreport.model.InputFileVM;
import cloud.fastreport.model.OutputFileVM;
import cloud.fastreport.model.TaskBaseVM;
import cloud.fastreport.model.TaskType;
import cloud.fastreport.model.TransportTaskBaseVM;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * TransformTaskBaseVM
 */
@JsonPropertyOrder({
  TransformTaskBaseVM.JSON_PROPERTY_LOCALE,
  TransformTaskBaseVM.JSON_PROPERTY_INPUT_FILE,
  TransformTaskBaseVM.JSON_PROPERTY_OUTPUT_FILE,
  TransformTaskBaseVM.JSON_PROPERTY_TRANSPORTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TransformTaskBaseVM extends TaskBaseVM {
  public static final String JSON_PROPERTY_LOCALE = "locale";
  private JsonNullable<String> locale = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INPUT_FILE = "inputFile";
  private InputFileVM inputFile;

  public static final String JSON_PROPERTY_OUTPUT_FILE = "outputFile";
  private OutputFileVM outputFile;

  public static final String JSON_PROPERTY_TRANSPORTS = "transports";
  private JsonNullable<List<TransportTaskBaseVM>> transports = JsonNullable.<List<TransportTaskBaseVM>>undefined();

  public TransformTaskBaseVM() {

  }

  public TransformTaskBaseVM locale(String locale) {
    this.locale = JsonNullable.<String>of(locale);
    
    return this;
  }

   /**
   * Get locale
   * @return locale
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getLocale() {
        return locale.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocale_JsonNullable() {
    return locale;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCALE)
  public void setLocale_JsonNullable(JsonNullable<String> locale) {
    this.locale = locale;
  }

  public void setLocale(String locale) {
    this.locale = JsonNullable.<String>of(locale);
  }


  public TransformTaskBaseVM inputFile(InputFileVM inputFile) {
    
    this.inputFile = inputFile;
    return this;
  }

   /**
   * Get inputFile
   * @return inputFile
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INPUT_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InputFileVM getInputFile() {
    return inputFile;
  }


  @JsonProperty(JSON_PROPERTY_INPUT_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInputFile(InputFileVM inputFile) {
    this.inputFile = inputFile;
  }


  public TransformTaskBaseVM outputFile(OutputFileVM outputFile) {
    
    this.outputFile = outputFile;
    return this;
  }

   /**
   * Get outputFile
   * @return outputFile
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTPUT_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OutputFileVM getOutputFile() {
    return outputFile;
  }


  @JsonProperty(JSON_PROPERTY_OUTPUT_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutputFile(OutputFileVM outputFile) {
    this.outputFile = outputFile;
  }


  public TransformTaskBaseVM transports(List<TransportTaskBaseVM> transports) {
    this.transports = JsonNullable.<List<TransportTaskBaseVM>>of(transports);
    
    return this;
  }

  public TransformTaskBaseVM addTransportsItem(TransportTaskBaseVM transportsItem) {
    if (this.transports == null || !this.transports.isPresent()) {
      this.transports = JsonNullable.<List<TransportTaskBaseVM>>of(new ArrayList<>());
    }
    try {
      this.transports.get().add(transportsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get transports
   * @return transports
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public List<TransportTaskBaseVM> getTransports() {
        return transports.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRANSPORTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<TransportTaskBaseVM>> getTransports_JsonNullable() {
    return transports;
  }
  
  @JsonProperty(JSON_PROPERTY_TRANSPORTS)
  public void setTransports_JsonNullable(JsonNullable<List<TransportTaskBaseVM>> transports) {
    this.transports = transports;
  }

  public void setTransports(List<TransportTaskBaseVM> transports) {
    this.transports = JsonNullable.<List<TransportTaskBaseVM>>of(transports);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransformTaskBaseVM transformTaskBaseVM = (TransformTaskBaseVM) o;
    return equalsNullable(this.locale, transformTaskBaseVM.locale) &&
        Objects.equals(this.inputFile, transformTaskBaseVM.inputFile) &&
        Objects.equals(this.outputFile, transformTaskBaseVM.outputFile) &&
        equalsNullable(this.transports, transformTaskBaseVM.transports) &&
        super.equals(o);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(locale), inputFile, outputFile, hashCodeNullable(transports), super.hashCode());
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransformTaskBaseVM {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    inputFile: ").append(toIndentedString(inputFile)).append("\n");
    sb.append("    outputFile: ").append(toIndentedString(outputFile)).append("\n");
    sb.append("    transports: ").append(toIndentedString(transports)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

