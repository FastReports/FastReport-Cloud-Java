/*
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloud.fastreport.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import cloud.fastreport.model.UpdateDataSourcePermissionsVM;
import cloud.fastreport.model.UpdateFilePermissionsVM;
import cloud.fastreport.model.UpdateGroupPermissionsVM;
import cloud.fastreport.model.UpdateTaskPermissionsVM;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * UpdateDefaultPermissionsVM
 */
@JsonPropertyOrder({
  UpdateDefaultPermissionsVM.JSON_PROPERTY_FILE_PERMISSIONS,
  UpdateDefaultPermissionsVM.JSON_PROPERTY_GROUP_PERMISSIONS,
  UpdateDefaultPermissionsVM.JSON_PROPERTY_DATA_SOURCE_PERMISSIONS,
  UpdateDefaultPermissionsVM.JSON_PROPERTY_TASK_PERMISSIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UpdateDefaultPermissionsVM {
  public static final String JSON_PROPERTY_FILE_PERMISSIONS = "filePermissions";
  private UpdateFilePermissionsVM filePermissions;

  public static final String JSON_PROPERTY_GROUP_PERMISSIONS = "groupPermissions";
  private UpdateGroupPermissionsVM groupPermissions;

  public static final String JSON_PROPERTY_DATA_SOURCE_PERMISSIONS = "dataSourcePermissions";
  private UpdateDataSourcePermissionsVM dataSourcePermissions;

  public static final String JSON_PROPERTY_TASK_PERMISSIONS = "taskPermissions";
  private UpdateTaskPermissionsVM taskPermissions;

  public UpdateDefaultPermissionsVM() { 
  }

  public UpdateDefaultPermissionsVM filePermissions(UpdateFilePermissionsVM filePermissions) {
    this.filePermissions = filePermissions;
    return this;
  }

   /**
   * Get filePermissions
   * @return filePermissions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILE_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateFilePermissionsVM getFilePermissions() {
    return filePermissions;
  }


  @JsonProperty(JSON_PROPERTY_FILE_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilePermissions(UpdateFilePermissionsVM filePermissions) {
    this.filePermissions = filePermissions;
  }


  public UpdateDefaultPermissionsVM groupPermissions(UpdateGroupPermissionsVM groupPermissions) {
    this.groupPermissions = groupPermissions;
    return this;
  }

   /**
   * Get groupPermissions
   * @return groupPermissions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GROUP_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateGroupPermissionsVM getGroupPermissions() {
    return groupPermissions;
  }


  @JsonProperty(JSON_PROPERTY_GROUP_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroupPermissions(UpdateGroupPermissionsVM groupPermissions) {
    this.groupPermissions = groupPermissions;
  }


  public UpdateDefaultPermissionsVM dataSourcePermissions(UpdateDataSourcePermissionsVM dataSourcePermissions) {
    this.dataSourcePermissions = dataSourcePermissions;
    return this;
  }

   /**
   * Get dataSourcePermissions
   * @return dataSourcePermissions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA_SOURCE_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateDataSourcePermissionsVM getDataSourcePermissions() {
    return dataSourcePermissions;
  }


  @JsonProperty(JSON_PROPERTY_DATA_SOURCE_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDataSourcePermissions(UpdateDataSourcePermissionsVM dataSourcePermissions) {
    this.dataSourcePermissions = dataSourcePermissions;
  }


  public UpdateDefaultPermissionsVM taskPermissions(UpdateTaskPermissionsVM taskPermissions) {
    this.taskPermissions = taskPermissions;
    return this;
  }

   /**
   * Get taskPermissions
   * @return taskPermissions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TASK_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateTaskPermissionsVM getTaskPermissions() {
    return taskPermissions;
  }


  @JsonProperty(JSON_PROPERTY_TASK_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaskPermissions(UpdateTaskPermissionsVM taskPermissions) {
    this.taskPermissions = taskPermissions;
  }


  /**
   * Return true if this UpdateDefaultPermissionsVM object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateDefaultPermissionsVM updateDefaultPermissionsVM = (UpdateDefaultPermissionsVM) o;
    return Objects.equals(this.filePermissions, updateDefaultPermissionsVM.filePermissions) &&
        Objects.equals(this.groupPermissions, updateDefaultPermissionsVM.groupPermissions) &&
        Objects.equals(this.dataSourcePermissions, updateDefaultPermissionsVM.dataSourcePermissions) &&
        Objects.equals(this.taskPermissions, updateDefaultPermissionsVM.taskPermissions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filePermissions, groupPermissions, dataSourcePermissions, taskPermissions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateDefaultPermissionsVM {\n");
    sb.append("    filePermissions: ").append(toIndentedString(filePermissions)).append("\n");
    sb.append("    groupPermissions: ").append(toIndentedString(groupPermissions)).append("\n");
    sb.append("    dataSourcePermissions: ").append(toIndentedString(dataSourcePermissions)).append("\n");
    sb.append("    taskPermissions: ").append(toIndentedString(taskPermissions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `filePermissions` to the URL query string
    if (getFilePermissions() != null) {
      joiner.add(getFilePermissions().toUrlQueryString(prefix + "filePermissions" + suffix));
    }

    // add `groupPermissions` to the URL query string
    if (getGroupPermissions() != null) {
      joiner.add(getGroupPermissions().toUrlQueryString(prefix + "groupPermissions" + suffix));
    }

    // add `dataSourcePermissions` to the URL query string
    if (getDataSourcePermissions() != null) {
      joiner.add(getDataSourcePermissions().toUrlQueryString(prefix + "dataSourcePermissions" + suffix));
    }

    // add `taskPermissions` to the URL query string
    if (getTaskPermissions() != null) {
      joiner.add(getTaskPermissions().toUrlQueryString(prefix + "taskPermissions" + suffix));
    }

    return joiner.toString();
  }
}

