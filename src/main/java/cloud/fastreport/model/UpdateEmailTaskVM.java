/*
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloud.fastreport.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import cloud.fastreport.model.UpdateTransportTaskBaseVM;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import cloud.fastreport.JSON;
/**
 * UpdateEmailTaskVM
 */
@JsonPropertyOrder({
  UpdateEmailTaskVM.JSON_PROPERTY_BODY,
  UpdateEmailTaskVM.JSON_PROPERTY_ENABLE_SSL,
  UpdateEmailTaskVM.JSON_PROPERTY_FROM,
  UpdateEmailTaskVM.JSON_PROPERTY_IS_BODY_HTML,
  UpdateEmailTaskVM.JSON_PROPERTY_PASSWORD,
  UpdateEmailTaskVM.JSON_PROPERTY_PORT,
  UpdateEmailTaskVM.JSON_PROPERTY_SERVER,
  UpdateEmailTaskVM.JSON_PROPERTY_SUBJECT,
  UpdateEmailTaskVM.JSON_PROPERTY_TO,
  UpdateEmailTaskVM.JSON_PROPERTY_USERNAME
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
@JsonIgnoreProperties(
  value = "$t", // ignore manually set $t, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the $t to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "$t", visible = true)

public class UpdateEmailTaskVM extends UpdateTransportTaskBaseVM {
  public static final String JSON_PROPERTY_BODY = "body";
  private JsonNullable<String> body = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ENABLE_SSL = "enableSsl";
  private JsonNullable<Boolean> enableSsl = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_FROM = "from";
  private JsonNullable<String> from = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IS_BODY_HTML = "isBodyHtml";
  private JsonNullable<Boolean> isBodyHtml = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_PASSWORD = "password";
  private JsonNullable<String> password = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PORT = "port";
  private JsonNullable<Integer> port = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_SERVER = "server";
  private JsonNullable<String> server = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SUBJECT = "subject";
  private JsonNullable<String> subject = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TO = "to";
  private JsonNullable<List<String>> to = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_USERNAME = "username";
  private JsonNullable<String> username = JsonNullable.<String>undefined();

  public UpdateEmailTaskVM() { 
  }

  public UpdateEmailTaskVM body(String body) {
    this.body = JsonNullable.<String>of(body);
    return this;
  }

   /**
   * Get body
   * @return body
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getBody() {
        return body.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BODY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getBody_JsonNullable() {
    return body;
  }
  
  @JsonProperty(JSON_PROPERTY_BODY)
  public void setBody_JsonNullable(JsonNullable<String> body) {
    this.body = body;
  }

  public void setBody(String body) {
    this.body = JsonNullable.<String>of(body);
  }


  public UpdateEmailTaskVM enableSsl(Boolean enableSsl) {
    this.enableSsl = JsonNullable.<Boolean>of(enableSsl);
    return this;
  }

   /**
   * Get enableSsl
   * @return enableSsl
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getEnableSsl() {
        return enableSsl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENABLE_SSL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getEnableSsl_JsonNullable() {
    return enableSsl;
  }
  
  @JsonProperty(JSON_PROPERTY_ENABLE_SSL)
  public void setEnableSsl_JsonNullable(JsonNullable<Boolean> enableSsl) {
    this.enableSsl = enableSsl;
  }

  public void setEnableSsl(Boolean enableSsl) {
    this.enableSsl = JsonNullable.<Boolean>of(enableSsl);
  }


  public UpdateEmailTaskVM from(String from) {
    this.from = JsonNullable.<String>of(from);
    return this;
  }

   /**
   * Get from
   * @return from
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getFrom() {
        return from.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFrom_JsonNullable() {
    return from;
  }
  
  @JsonProperty(JSON_PROPERTY_FROM)
  public void setFrom_JsonNullable(JsonNullable<String> from) {
    this.from = from;
  }

  public void setFrom(String from) {
    this.from = JsonNullable.<String>of(from);
  }


  public UpdateEmailTaskVM isBodyHtml(Boolean isBodyHtml) {
    this.isBodyHtml = JsonNullable.<Boolean>of(isBodyHtml);
    return this;
  }

   /**
   * Get isBodyHtml
   * @return isBodyHtml
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getIsBodyHtml() {
        return isBodyHtml.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_BODY_HTML)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsBodyHtml_JsonNullable() {
    return isBodyHtml;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_BODY_HTML)
  public void setIsBodyHtml_JsonNullable(JsonNullable<Boolean> isBodyHtml) {
    this.isBodyHtml = isBodyHtml;
  }

  public void setIsBodyHtml(Boolean isBodyHtml) {
    this.isBodyHtml = JsonNullable.<Boolean>of(isBodyHtml);
  }


  public UpdateEmailTaskVM password(String password) {
    this.password = JsonNullable.<String>of(password);
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getPassword() {
        return password.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPassword_JsonNullable() {
    return password;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  public void setPassword_JsonNullable(JsonNullable<String> password) {
    this.password = password;
  }

  public void setPassword(String password) {
    this.password = JsonNullable.<String>of(password);
  }


  public UpdateEmailTaskVM port(Integer port) {
    this.port = JsonNullable.<Integer>of(port);
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Integer getPort() {
        return port.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getPort_JsonNullable() {
    return port;
  }
  
  @JsonProperty(JSON_PROPERTY_PORT)
  public void setPort_JsonNullable(JsonNullable<Integer> port) {
    this.port = port;
  }

  public void setPort(Integer port) {
    this.port = JsonNullable.<Integer>of(port);
  }


  public UpdateEmailTaskVM server(String server) {
    this.server = JsonNullable.<String>of(server);
    return this;
  }

   /**
   * Get server
   * @return server
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getServer() {
        return server.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getServer_JsonNullable() {
    return server;
  }
  
  @JsonProperty(JSON_PROPERTY_SERVER)
  public void setServer_JsonNullable(JsonNullable<String> server) {
    this.server = server;
  }

  public void setServer(String server) {
    this.server = JsonNullable.<String>of(server);
  }


  public UpdateEmailTaskVM subject(String subject) {
    this.subject = JsonNullable.<String>of(subject);
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getSubject() {
        return subject.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSubject_JsonNullable() {
    return subject;
  }
  
  @JsonProperty(JSON_PROPERTY_SUBJECT)
  public void setSubject_JsonNullable(JsonNullable<String> subject) {
    this.subject = subject;
  }

  public void setSubject(String subject) {
    this.subject = JsonNullable.<String>of(subject);
  }


  public UpdateEmailTaskVM to(List<String> to) {
    this.to = JsonNullable.<List<String>>of(to);
    return this;
  }

  public UpdateEmailTaskVM addToItem(String toItem) {
    if (this.to == null || !this.to.isPresent()) {
      this.to = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.to.get().add(toItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get to
   * @return to
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public List<String> getTo() {
        return to.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getTo_JsonNullable() {
    return to;
  }
  
  @JsonProperty(JSON_PROPERTY_TO)
  public void setTo_JsonNullable(JsonNullable<List<String>> to) {
    this.to = to;
  }

  public void setTo(List<String> to) {
    this.to = JsonNullable.<List<String>>of(to);
  }


  public UpdateEmailTaskVM username(String username) {
    this.username = JsonNullable.<String>of(username);
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getUsername() {
        return username.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsername_JsonNullable() {
    return username;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME)
  public void setUsername_JsonNullable(JsonNullable<String> username) {
    this.username = username;
  }

  public void setUsername(String username) {
    this.username = JsonNullable.<String>of(username);
  }


  @Override
  public UpdateEmailTaskVM cronExpression(String cronExpression) {
    this.setCronExpression(cronExpression);
    return this;
  }

  @Override
  public UpdateEmailTaskVM delayedRunTime(OffsetDateTime delayedRunTime) {
    this.setDelayedRunTime(delayedRunTime);
    return this;
  }

  @Override
  public UpdateEmailTaskVM name(String name) {
    this.setName(name);
    return this;
  }

  /**
   * Return true if this UpdateEmailTaskVM object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateEmailTaskVM updateEmailTaskVM = (UpdateEmailTaskVM) o;
    return equalsNullable(this.body, updateEmailTaskVM.body) &&
        equalsNullable(this.enableSsl, updateEmailTaskVM.enableSsl) &&
        equalsNullable(this.from, updateEmailTaskVM.from) &&
        equalsNullable(this.isBodyHtml, updateEmailTaskVM.isBodyHtml) &&
        equalsNullable(this.password, updateEmailTaskVM.password) &&
        equalsNullable(this.port, updateEmailTaskVM.port) &&
        equalsNullable(this.server, updateEmailTaskVM.server) &&
        equalsNullable(this.subject, updateEmailTaskVM.subject) &&
        equalsNullable(this.to, updateEmailTaskVM.to) &&
        equalsNullable(this.username, updateEmailTaskVM.username) &&
        super.equals(o);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(body), hashCodeNullable(enableSsl), hashCodeNullable(from), hashCodeNullable(isBodyHtml), hashCodeNullable(password), hashCodeNullable(port), hashCodeNullable(server), hashCodeNullable(subject), hashCodeNullable(to), hashCodeNullable(username), super.hashCode());
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateEmailTaskVM {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    enableSsl: ").append(toIndentedString(enableSsl)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    isBodyHtml: ").append(toIndentedString(isBodyHtml)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    server: ").append(toIndentedString(server)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `cronExpression` to the URL query string
    if (getCronExpression() != null) {
      joiner.add(String.format("%scronExpression%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCronExpression()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `delayedRunTime` to the URL query string
    if (getDelayedRunTime() != null) {
      joiner.add(String.format("%sdelayedRunTime%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDelayedRunTime()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `$t` to the URL query string
    if (get$T() != null) {
      joiner.add(String.format("%s$t%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(get$T()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
static {
  // Initialize and register the discriminator mappings.
  Map<String, Class<?>> mappings = new HashMap<String, Class<?>>();
  mappings.put("UpdateEmailTaskVM", UpdateEmailTaskVM.class);
  JSON.registerDiscriminator(UpdateEmailTaskVM.class, "$t", mappings);
}
}

