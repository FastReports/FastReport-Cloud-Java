/*
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloud.fastreport.model;

import java.util.Objects;
import java.util.Arrays;
import cloud.fastreport.model.FilePermissions;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * UpdateFilePermissionsVM
 */
@JsonPropertyOrder({
  UpdateFilePermissionsVM.JSON_PROPERTY_NEW_PERMISSIONS,
  UpdateFilePermissionsVM.JSON_PROPERTY_ADMINISTRATE
})
@JsonTypeName("UpdateFilePermissionsVM")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UpdateFilePermissionsVM {
  public static final String JSON_PROPERTY_NEW_PERMISSIONS = "newPermissions";
  private FilePermissions newPermissions;

  /**
   * Gets or Sets administrate
   */
  public enum AdministrateEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_4(4),
    
    NUMBER_8(8),
    
    NUMBER_MINUS_1(-1);

    private Integer value;

    AdministrateEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AdministrateEnum fromValue(Integer value) {
      for (AdministrateEnum b : AdministrateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ADMINISTRATE = "administrate";
  private AdministrateEnum administrate;


  public UpdateFilePermissionsVM newPermissions(FilePermissions newPermissions) {
    
    this.newPermissions = newPermissions;
    return this;
  }

   /**
   * Get newPermissions
   * @return newPermissions
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NEW_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public FilePermissions getNewPermissions() {
    return newPermissions;
  }


  @JsonProperty(JSON_PROPERTY_NEW_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNewPermissions(FilePermissions newPermissions) {
    this.newPermissions = newPermissions;
  }


  public UpdateFilePermissionsVM administrate(AdministrateEnum administrate) {
    
    this.administrate = administrate;
    return this;
  }

   /**
   * Get administrate
   * @return administrate
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ADMINISTRATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AdministrateEnum getAdministrate() {
    return administrate;
  }


  @JsonProperty(JSON_PROPERTY_ADMINISTRATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAdministrate(AdministrateEnum administrate) {
    this.administrate = administrate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateFilePermissionsVM updateFilePermissionsVM = (UpdateFilePermissionsVM) o;
    return Objects.equals(this.newPermissions, updateFilePermissionsVM.newPermissions) &&
        Objects.equals(this.administrate, updateFilePermissionsVM.administrate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(newPermissions, administrate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateFilePermissionsVM {\n");
    sb.append("    newPermissions: ").append(toIndentedString(newPermissions)).append("\n");
    sb.append("    administrate: ").append(toIndentedString(administrate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

