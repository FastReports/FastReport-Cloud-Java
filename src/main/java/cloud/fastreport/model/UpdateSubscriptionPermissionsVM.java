/*
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloud.fastreport.model;

import java.util.Objects;
import java.util.Arrays;
import cloud.fastreport.model.SubscriptionAdministrate;
import cloud.fastreport.model.SubscriptionPermissions;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpdateSubscriptionPermissionsVM
 */
@JsonPropertyOrder({
  UpdateSubscriptionPermissionsVM.JSON_PROPERTY_NEW_PERMISSIONS,
  UpdateSubscriptionPermissionsVM.JSON_PROPERTY_ADMINISTRATE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UpdateSubscriptionPermissionsVM {
  public static final String JSON_PROPERTY_NEW_PERMISSIONS = "newPermissions";
  private SubscriptionPermissions newPermissions;

  public static final String JSON_PROPERTY_ADMINISTRATE = "administrate";
  private SubscriptionAdministrate administrate;

  public UpdateSubscriptionPermissionsVM() {
  }

  public UpdateSubscriptionPermissionsVM newPermissions(SubscriptionPermissions newPermissions) {
    
    this.newPermissions = newPermissions;
    return this;
  }

   /**
   * Get newPermissions
   * @return newPermissions
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NEW_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SubscriptionPermissions getNewPermissions() {
    return newPermissions;
  }


  @JsonProperty(JSON_PROPERTY_NEW_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNewPermissions(SubscriptionPermissions newPermissions) {
    this.newPermissions = newPermissions;
  }


  public UpdateSubscriptionPermissionsVM administrate(SubscriptionAdministrate administrate) {
    
    this.administrate = administrate;
    return this;
  }

   /**
   * Get administrate
   * @return administrate
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ADMINISTRATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SubscriptionAdministrate getAdministrate() {
    return administrate;
  }


  @JsonProperty(JSON_PROPERTY_ADMINISTRATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAdministrate(SubscriptionAdministrate administrate) {
    this.administrate = administrate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateSubscriptionPermissionsVM updateSubscriptionPermissionsVM = (UpdateSubscriptionPermissionsVM) o;
    return Objects.equals(this.newPermissions, updateSubscriptionPermissionsVM.newPermissions) &&
        Objects.equals(this.administrate, updateSubscriptionPermissionsVM.administrate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(newPermissions, administrate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateSubscriptionPermissionsVM {\n");
    sb.append("    newPermissions: ").append(toIndentedString(newPermissions)).append("\n");
    sb.append("    administrate: ").append(toIndentedString(administrate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

