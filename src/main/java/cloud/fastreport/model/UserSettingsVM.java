/*
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloud.fastreport.model;

import java.util.Objects;
import java.util.Arrays;
import cloud.fastreport.model.AuditType;
import cloud.fastreport.model.ProfileVisibility;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UserSettingsVM
 */
@JsonPropertyOrder({
  UserSettingsVM.JSON_PROPERTY_PROFILE_VISIBILITY,
  UserSettingsVM.JSON_PROPERTY_DEFAULT_SUBSCRIPTION,
  UserSettingsVM.JSON_PROPERTY_SHOW_HIDDEN_FILES_AND_FOLDERS,
  UserSettingsVM.JSON_PROPERTY_SLA_ACCEPTED_DATE_TIME,
  UserSettingsVM.JSON_PROPERTY_SUBSCRIBED_NOTIFICATIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UserSettingsVM {
  public static final String JSON_PROPERTY_PROFILE_VISIBILITY = "profileVisibility";
  private ProfileVisibility profileVisibility;

  public static final String JSON_PROPERTY_DEFAULT_SUBSCRIPTION = "defaultSubscription";
  private JsonNullable<String> defaultSubscription = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SHOW_HIDDEN_FILES_AND_FOLDERS = "showHiddenFilesAndFolders";
  private Boolean showHiddenFilesAndFolders;

  public static final String JSON_PROPERTY_SLA_ACCEPTED_DATE_TIME = "slaAcceptedDateTime";
  private JsonNullable<OffsetDateTime> slaAcceptedDateTime = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_SUBSCRIBED_NOTIFICATIONS = "subscribedNotifications";
  private JsonNullable<List<AuditType>> subscribedNotifications = JsonNullable.<List<AuditType>>undefined();

  public UserSettingsVM() {
  }

  public UserSettingsVM profileVisibility(ProfileVisibility profileVisibility) {
    
    this.profileVisibility = profileVisibility;
    return this;
  }

   /**
   * Get profileVisibility
   * @return profileVisibility
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROFILE_VISIBILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProfileVisibility getProfileVisibility() {
    return profileVisibility;
  }


  @JsonProperty(JSON_PROPERTY_PROFILE_VISIBILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProfileVisibility(ProfileVisibility profileVisibility) {
    this.profileVisibility = profileVisibility;
  }


  public UserSettingsVM defaultSubscription(String defaultSubscription) {
    this.defaultSubscription = JsonNullable.<String>of(defaultSubscription);
    
    return this;
  }

   /**
   * Get defaultSubscription
   * @return defaultSubscription
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getDefaultSubscription() {
        return defaultSubscription.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DEFAULT_SUBSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDefaultSubscription_JsonNullable() {
    return defaultSubscription;
  }
  
  @JsonProperty(JSON_PROPERTY_DEFAULT_SUBSCRIPTION)
  public void setDefaultSubscription_JsonNullable(JsonNullable<String> defaultSubscription) {
    this.defaultSubscription = defaultSubscription;
  }

  public void setDefaultSubscription(String defaultSubscription) {
    this.defaultSubscription = JsonNullable.<String>of(defaultSubscription);
  }


  public UserSettingsVM showHiddenFilesAndFolders(Boolean showHiddenFilesAndFolders) {
    
    this.showHiddenFilesAndFolders = showHiddenFilesAndFolders;
    return this;
  }

   /**
   * Get showHiddenFilesAndFolders
   * @return showHiddenFilesAndFolders
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHOW_HIDDEN_FILES_AND_FOLDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getShowHiddenFilesAndFolders() {
    return showHiddenFilesAndFolders;
  }


  @JsonProperty(JSON_PROPERTY_SHOW_HIDDEN_FILES_AND_FOLDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShowHiddenFilesAndFolders(Boolean showHiddenFilesAndFolders) {
    this.showHiddenFilesAndFolders = showHiddenFilesAndFolders;
  }


  public UserSettingsVM slaAcceptedDateTime(OffsetDateTime slaAcceptedDateTime) {
    this.slaAcceptedDateTime = JsonNullable.<OffsetDateTime>of(slaAcceptedDateTime);
    
    return this;
  }

   /**
   * Get slaAcceptedDateTime
   * @return slaAcceptedDateTime
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getSlaAcceptedDateTime() {
        return slaAcceptedDateTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SLA_ACCEPTED_DATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getSlaAcceptedDateTime_JsonNullable() {
    return slaAcceptedDateTime;
  }
  
  @JsonProperty(JSON_PROPERTY_SLA_ACCEPTED_DATE_TIME)
  public void setSlaAcceptedDateTime_JsonNullable(JsonNullable<OffsetDateTime> slaAcceptedDateTime) {
    this.slaAcceptedDateTime = slaAcceptedDateTime;
  }

  public void setSlaAcceptedDateTime(OffsetDateTime slaAcceptedDateTime) {
    this.slaAcceptedDateTime = JsonNullable.<OffsetDateTime>of(slaAcceptedDateTime);
  }


  public UserSettingsVM subscribedNotifications(List<AuditType> subscribedNotifications) {
    this.subscribedNotifications = JsonNullable.<List<AuditType>>of(subscribedNotifications);
    
    return this;
  }

  public UserSettingsVM addSubscribedNotificationsItem(AuditType subscribedNotificationsItem) {
    if (this.subscribedNotifications == null || !this.subscribedNotifications.isPresent()) {
      this.subscribedNotifications = JsonNullable.<List<AuditType>>of(new ArrayList<>());
    }
    try {
      this.subscribedNotifications.get().add(subscribedNotificationsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get subscribedNotifications
   * @return subscribedNotifications
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public List<AuditType> getSubscribedNotifications() {
        return subscribedNotifications.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUBSCRIBED_NOTIFICATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AuditType>> getSubscribedNotifications_JsonNullable() {
    return subscribedNotifications;
  }
  
  @JsonProperty(JSON_PROPERTY_SUBSCRIBED_NOTIFICATIONS)
  public void setSubscribedNotifications_JsonNullable(JsonNullable<List<AuditType>> subscribedNotifications) {
    this.subscribedNotifications = subscribedNotifications;
  }

  public void setSubscribedNotifications(List<AuditType> subscribedNotifications) {
    this.subscribedNotifications = JsonNullable.<List<AuditType>>of(subscribedNotifications);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserSettingsVM userSettingsVM = (UserSettingsVM) o;
    return Objects.equals(this.profileVisibility, userSettingsVM.profileVisibility) &&
        equalsNullable(this.defaultSubscription, userSettingsVM.defaultSubscription) &&
        Objects.equals(this.showHiddenFilesAndFolders, userSettingsVM.showHiddenFilesAndFolders) &&
        equalsNullable(this.slaAcceptedDateTime, userSettingsVM.slaAcceptedDateTime) &&
        equalsNullable(this.subscribedNotifications, userSettingsVM.subscribedNotifications);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(profileVisibility, hashCodeNullable(defaultSubscription), showHiddenFilesAndFolders, hashCodeNullable(slaAcceptedDateTime), hashCodeNullable(subscribedNotifications));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserSettingsVM {\n");
    sb.append("    profileVisibility: ").append(toIndentedString(profileVisibility)).append("\n");
    sb.append("    defaultSubscription: ").append(toIndentedString(defaultSubscription)).append("\n");
    sb.append("    showHiddenFilesAndFolders: ").append(toIndentedString(showHiddenFilesAndFolders)).append("\n");
    sb.append("    slaAcceptedDateTime: ").append(toIndentedString(slaAcceptedDateTime)).append("\n");
    sb.append("    subscribedNotifications: ").append(toIndentedString(subscribedNotifications)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

