/*
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloud.fastreport.client;

import cloud.fastreport.model.AnalysisResultsVM;
import cloud.fastreport.model.ProblemDetails;
import org.junit.Test;
import org.junit.Ignore;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AdminSubscriptionAnalyticsApi
 */
@Ignore
public class AdminSubscriptionAnalyticsApiTest {

    private final AdminSubscriptionAnalyticsApi api = new AdminSubscriptionAnalyticsApi();

    
    /**
     * This will check if there are any files, related to subscription that available for anonymous users
     *
     * 
     *
     * @throws IOException
     *          if the Api call fails
     */
    @Test
    public void adminSubscriptionAnalyticsCheckAnonPermissionsTest() throws IOException {
        String subscriptionId = null;
        AnalysisResultsVM response = api.adminSubscriptionAnalyticsCheckAnonPermissions(subscriptionId);

        // TODO: test validations
    }
    
    /**
     * This will check if there are any files, related to subscription that not available for subscription users
     *
     * 
     *
     * @throws IOException
     *          if the Api call fails
     */
    @Test
    public void adminSubscriptionAnalyticsCheckOtherPermissionsTest() throws IOException {
        String subscriptionId = null;
        AnalysisResultsVM response = api.adminSubscriptionAnalyticsCheckOtherPermissions(subscriptionId);

        // TODO: test validations
    }
    
    /**
     * This will check if there are any deleted subscriptions in users sub lists
     *
     * 
     *
     * @throws IOException
     *          if the Api call fails
     */
    @Test
    public void adminSubscriptionAnalyticsGetDeadSubsInUsersTest() throws IOException {
        AnalysisResultsVM response = api.adminSubscriptionAnalyticsGetDeadSubsInUsers();

        // TODO: test validations
    }
    
    /**
     * This will check if there are any subscriptions without users
     *
     * 
     *
     * @throws IOException
     *          if the Api call fails
     */
    @Test
    public void adminSubscriptionAnalyticsGetEmptySubsTest() throws IOException {
        AnalysisResultsVM response = api.adminSubscriptionAnalyticsGetEmptySubs();

        // TODO: test validations
    }
    
    /**
     * This will check if there are any files in gridFS, which not related to any file model
     *
     * 
     *
     * @throws IOException
     *          if the Api call fails
     */
    @Test
    public void adminSubscriptionAnalyticsGetLostFileChunksTest() throws IOException {
        AnalysisResultsVM response = api.adminSubscriptionAnalyticsGetLostFileChunks();

        // TODO: test validations
    }
    
    /**
     * This will check if there are any files, that not related to any existing subscription
     *
     * 
     *
     * @throws IOException
     *          if the Api call fails
     */
    @Test
    public void adminSubscriptionAnalyticsGetUnrelatedDocumentsTest() throws IOException {
        AnalysisResultsVM response = api.adminSubscriptionAnalyticsGetUnrelatedDocuments();

        // TODO: test validations
    }
    
}
