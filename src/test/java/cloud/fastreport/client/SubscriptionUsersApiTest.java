/*
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloud.fastreport.client;

import cloud.fastreport.model.ProblemDetails;
import cloud.fastreport.model.SubscriptionUsersVM;
import org.junit.Test;
import org.junit.Ignore;

import java.io.IOException;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SubscriptionUsersApi
 */
@Ignore
public class SubscriptionUsersApiTest {

    private final SubscriptionUsersApi api = new SubscriptionUsersApi();

    
    /**
     * Add a user to the subscription,  the added users will be displayed in the list of users of the subscription,  and these users will also have an active subscription.
     *
     * 
     *
     * @throws IOException
     *          if the Api call fails
     */
    @Test
    public void subscriptionUsersAddUserTest() throws IOException {
        String subscriptionId = null;
        String userId = null;
        api.subscriptionUsersAddUser(subscriptionId, userId);

        // TODO: test validations
    }
    
    /**
     * Returns a number of users in subscription
     *
     * 
     *
     * @throws IOException
     *          if the Api call fails
     */
    @Test
    public void subscriptionUsersCountUsersAsyncTest() throws IOException {
        String subscriptionId = null;
        Long response = api.subscriptionUsersCountUsersAsync(subscriptionId);

        // TODO: test validations
    }
    
    /**
     * Returns all users of subscription
     *
     * 
     *
     * @throws IOException
     *          if the Api call fails
     */
    @Test
    public void subscriptionUsersGetUsersTest() throws IOException {
        String subscriptionId = null;
        Integer skip = null;
        Integer take = null;
        SubscriptionUsersVM response = api.subscriptionUsersGetUsers(subscriptionId, skip, take);

        // TODO: test validations
    }
    
    /**
     * Allows user to leave subscription,.
     *
     * 
     *
     * @throws IOException
     *          if the Api call fails
     */
    @Test
    public void subscriptionUsersLeaveSubscripitonTest() throws IOException {
        String subscriptionId = null;
        api.subscriptionUsersLeaveSubscripiton(subscriptionId);

        // TODO: test validations
    }
    
    /**
     * Delete a user from the subscription,  the added users will be displayed in the list of users of the subscription,  and these users will also have an active subscription.
     *
     * 
     *
     * @throws IOException
     *          if the Api call fails
     */
    @Test
    public void subscriptionUsersRemoveUserTest() throws IOException {
        String subscriptionId = null;
        String userId = null;
        api.subscriptionUsersRemoveUser(subscriptionId, userId);

        // TODO: test validations
    }
    
}
